Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1410 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 string_builder_body: %empty
   34                    | string_builder_body character_sequence
   35                    | string_builder_body "{" expr "}"

   36 string_builder: "start of the string" string_builder_body "end of the string"

   37 reader_character_sequence: STRING_CHARACTER
   38                          | reader_character_sequence STRING_CHARACTER

   39 $@1: %empty

   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   41 options_declaration: "options" annotation_argument_list

   42 require_declaration: "require" require_module

   43 require_module_name: "name"
   44                    | '%' require_module_name
   45                    | require_module_name '.' "name"
   46                    | require_module_name '/' "name"

   47 require_module: require_module_name is_public_module
   48               | require_module_name "as" "name" is_public_module

   49 is_public_module: %empty
   50                 | "public"

   51 expect_declaration: "expect" expect_list

   52 expect_list: expect_error
   53            | expect_list ',' expect_error

   54 expect_error: "integer constant"
   55             | "integer constant" ':' "integer constant"

   56 expression_label: "label" "integer constant" ':'

   57 expression_goto: "goto" "label" "integer constant"
   58                | "goto" expr

   59 elif_or_static_elif: "elif"
   60                    | "static_elif"

   61 emit_semis: "new line, semicolon"
   62           | emit_semis "new line, semicolon"

   63 optional_emit_semis: %empty
   64                    | emit_semis

   65 expression_else: %empty
   66                | "else" optional_emit_semis expression_block
   67                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   68 if_or_static_if: "if"
   69                | "static_if"

   70 expression_else_one_liner: %empty
   71                          | "else" expression_if_one_liner

   72 expression_if_one_liner: expr
   73                        | expression_return
   74                        | expression_yield
   75                        | expression_break
   76                        | expression_continue

   77 semis: SEMICOLON
   78      | semis SEMICOLON

   79 optional_semis: %empty
   80               | semis

   81 $@2: %empty

   82 $@3: %empty

   83 expression_if_block: $@2 '{' expressions $@3 '}' expression_block_finally

   84 $@4: %empty

   85 expression_if_block: $@4 expression_if_one_liner SEMICOLON

   86 $@5: %empty

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   89 $@6: %empty

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   91 expression_unsafe: "unsafe" optional_emit_semis expression_block

   92 $@7: %empty

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis expression_block

   94 $@8: %empty

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis expression_block

   96 expression_with_alias: "assume" "name" '=' expr

   97 annotation_argument_value: string_constant
   98                          | "name"
   99                          | "integer constant"
  100                          | "floating point constant"
  101                          | "true"
  102                          | "false"

  103 annotation_argument_value_list: annotation_argument_value
  104                               | annotation_argument_value_list ',' annotation_argument_value

  105 annotation_argument_name: "name"
  106                         | "type"
  107                         | "in"

  108 annotation_argument: annotation_argument_name '=' string_constant
  109                    | annotation_argument_name '=' "name"
  110                    | annotation_argument_name '=' "integer constant"
  111                    | annotation_argument_name '=' "floating point constant"
  112                    | annotation_argument_name '=' "true"
  113                    | annotation_argument_name '=' "false"
  114                    | annotation_argument_name
  115                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  116 annotation_argument_list: annotation_argument
  117                         | annotation_argument_list ',' annotation_argument

  118 metadata_argument_list: '@' annotation_argument optional_emit_semis
  119                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  120 annotation_declaration_name: name_in_namespace
  121                            | "require"
  122                            | "private"

  123 annotation_declaration_basic: annotation_declaration_name
  124                             | annotation_declaration_name '(' annotation_argument_list ')'

  125 annotation_declaration: annotation_declaration_basic
  126                       | '!' annotation_declaration
  127                       | annotation_declaration "&&" annotation_declaration
  128                       | annotation_declaration "||" annotation_declaration
  129                       | annotation_declaration "^^" annotation_declaration
  130                       | '(' annotation_declaration ')'
  131                       | "|>" annotation_declaration

  132 annotation_list: annotation_declaration
  133                | annotation_list ',' annotation_declaration

  134 optional_annotation_list: %empty
  135                         | '[' annotation_list ']'

  136 optional_annotation_list_with_emit_semis: %empty
  137                                         | '[' annotation_list ']' optional_emit_semis

  138 optional_function_argument_list: %empty
  139                                | '(' ')'
  140                                | '(' function_argument_list ')'

  141 optional_function_type: %empty
  142                       | ':' type_declaration

  143 function_name: "name"
  144              | "operator" '!'
  145              | "operator" '~'
  146              | "operator" "+="
  147              | "operator" "-="
  148              | "operator" "*="
  149              | "operator" "/="
  150              | "operator" "%="
  151              | "operator" "&="
  152              | "operator" "|="
  153              | "operator" "^="
  154              | "operator" "&&="
  155              | "operator" "||="
  156              | "operator" "^^="
  157              | "operator" "&&"
  158              | "operator" "||"
  159              | "operator" "^^"
  160              | "operator" '+'
  161              | "operator" '-'
  162              | "operator" '*'
  163              | "operator" '/'
  164              | "operator" '%'
  165              | "operator" '<'
  166              | "operator" '>'
  167              | "operator" ".."
  168              | "operator" "=="
  169              | "operator" "!="
  170              | "operator" "<="
  171              | "operator" ">="
  172              | "operator" '&'
  173              | "operator" '|'
  174              | "operator" '^'
  175              | "++" "operator"
  176              | "--" "operator"
  177              | "operator" "++"
  178              | "operator" "--"
  179              | "operator" "<<"
  180              | "operator" ">>"
  181              | "operator" "<<="
  182              | "operator" ">>="
  183              | "operator" "<<<"
  184              | "operator" ">>>"
  185              | "operator" "<<<="
  186              | "operator" ">>>="
  187              | "operator" '[' ']'
  188              | "operator" "?[" ']'
  189              | "operator" '.'
  190              | "operator" "?."
  191              | "operator" '.' "name"
  192              | "operator" '.' "name" ":="
  193              | "operator" "?." "name"
  194              | "operator" ":="
  195              | "operator" "delete"
  196              | "operator" "??"
  197              | "operator" "is"
  198              | "operator" "as"
  199              | "operator" "is" "name"
  200              | "operator" "as" "name"
  201              | "operator" '?' "as"
  202              | "operator" '?' "as" "name"
  203              | "bool"
  204              | "string"
  205              | "int"
  206              | "int2"
  207              | "int3"
  208              | "int4"
  209              | "uint"
  210              | "uint2"
  211              | "uint3"
  212              | "uint4"
  213              | "float"
  214              | "float2"
  215              | "float3"
  216              | "float4"
  217              | "range"
  218              | "urange"
  219              | "range64"
  220              | "urange64"
  221              | "int64"
  222              | "uint64"
  223              | "double"
  224              | "int8"
  225              | "uint8"
  226              | "int16"
  227              | "uint16"

  228 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  229 optional_public_or_private_function: %empty
  230                                    | "private"
  231                                    | "public"

  232 function_declaration_header: function_name optional_function_argument_list optional_function_type

  233 $@9: %empty

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis expression_block

  235 expression_block_finally: %empty

  236 $@10: %empty

  237 $@11: %empty

  238 expression_block_finally: "finally" $@10 '{' expressions $@11 '}'

  239 $@12: %empty

  240 $@13: %empty

  241 expression_block: $@12 '{' expressions $@13 '}' expression_block_finally

  242 expr_call_pipe: expr_call expr_full_block_assumed_piped

  243 expression_any: SEMICOLON
  244               | expr_assign SEMICOLON
  245               | expression_delete SEMICOLON
  246               | expression_let
  247               | expression_while_loop
  248               | expression_unsafe
  249               | expression_with
  250               | expression_with_alias SEMICOLON
  251               | expression_for_loop
  252               | expression_break SEMICOLON
  253               | expression_continue SEMICOLON
  254               | expression_return SEMICOLON
  255               | expression_yield SEMICOLON
  256               | expression_if_then_else
  257               | expression_if_then_else_oneliner
  258               | expression_try_catch
  259               | expression_label SEMICOLON
  260               | expression_goto SEMICOLON
  261               | "pass" SEMICOLON

  262 expressions: %empty
  263            | expressions expression_any
  264            | expressions error

  265 optional_expr_list: %empty
  266                   | expr_list optional_comma

  267 optional_expr_map_tuple_list: %empty
  268                             | expr_map_tuple_list optional_comma

  269 type_declaration_no_options_list: type_declaration
  270                                 | type_declaration_no_options_list c_or_s type_declaration

  271 name_in_namespace: "name"
  272                  | "name" "::" "name"
  273                  | "::" "name"

  274 expression_delete: "delete" expr
  275                  | "delete" "explicit" expr

  276 $@14: %empty

  277 $@15: %empty

  278 new_type_declaration: '<' $@14 type_declaration '>' $@15
  279                     | structure_type_declaration

  280 expr_new: "new" new_type_declaration
  281         | "new" new_type_declaration '(' use_initializer ')'
  282         | "new" new_type_declaration '(' expr_list ')'
  283         | "new" new_type_declaration '(' make_struct_single ')'
  284         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  285         | "new" make_decl

  286 expression_break: "break"

  287 expression_continue: "continue"

  288 expression_return: "return"
  289                  | "return" expr
  290                  | "return" "<-" expr

  291 expression_yield: "yield" expr
  292                 | "yield" "<-" expr

  293 expression_try_catch: "try" expression_block "recover" expression_block

  294 kwd_let_var_or_nothing: "let"
  295                       | "var"
  296                       | %empty

  297 kwd_let: "let"
  298        | "var"

  299 optional_in_scope: "inscope"
  300                  | %empty

  301 tuple_expansion: "name"
  302                | tuple_expansion ',' "name"

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  305 expression_let: kwd_let optional_in_scope let_variable_declaration
  306               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  307               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  308 $@16: %empty

  309 $@17: %empty

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 expr

  311 $@18: %empty

  312 $@19: %empty

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 expr

  314 $@20: %empty

  315 $@21: %empty

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 expr

  317 $@22: %empty

  318 $@23: %empty

  319 expr_type_decl: "type" '<' $@22 type_declaration '>' $@23

  320 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  321               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  323 expr_list: expr
  324          | expr_list ',' expr

  325 block_or_simple_block: expression_block
  326                      | "=>" expr
  327                      | "=>" "<-" expr

  328 block_or_lambda: '$'
  329                | '@'
  330                | '@' '@'

  331 capture_entry: '&' "name"
  332              | '=' "name"
  333              | "<-" "name"
  334              | ":=" "name"
  335              | "name" '(' "name" ')'

  336 capture_list: capture_entry
  337             | capture_list ',' capture_entry

  338 optional_capture_list: %empty
  339                      | "capture" '(' capture_list ')'

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  342                              | '{' expressions '}'

  343 expr_numeric_const: "integer constant"
  344                   | "unsigned integer constant"
  345                   | "long integer constant"
  346                   | "unsigned long integer constant"
  347                   | "unsigned int8 constant"
  348                   | "floating point constant"
  349                   | "double constant"

  350 expr_assign: expr
  351            | expr '=' expr
  352            | expr "<-" expr
  353            | expr ":=" expr
  354            | expr "&=" expr
  355            | expr "|=" expr
  356            | expr "^=" expr
  357            | expr "&&=" expr
  358            | expr "||=" expr
  359            | expr "^^=" expr
  360            | expr "+=" expr
  361            | expr "-=" expr
  362            | expr "*=" expr
  363            | expr "/=" expr
  364            | expr "%=" expr
  365            | expr "<<=" expr
  366            | expr ">>=" expr
  367            | expr "<<<=" expr
  368            | expr ">>>=" expr

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  370                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  371 expr_method_call: expr "->" "name" '(' ')'
  372                 | expr "->" "name" '(' expr_list ')'

  373 func_addr_name: name_in_namespace
  374               | "$i" '(' expr ')'

  375 func_addr_expr: '@' '@' func_addr_name

  376 $@24: %empty

  377 $@25: %empty

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name

  379 $@26: %empty

  380 $@27: %empty

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

  382 expr_field: expr '.' "name"
  383           | expr '.' '.' "name"
  384           | expr '.' "name" '(' ')'
  385           | expr '.' "name" '(' expr_list ')'
  386           | expr '.' basic_type_declaration '(' ')'
  387           | expr '.' basic_type_declaration '(' expr_list ')'

  388 $@28: %empty

  389 $@29: %empty

  390 expr_field: expr '.' $@28 error $@29

  391 expr_call: name_in_namespace '(' ')'
  392          | name_in_namespace '(' "uninitialized" ')'
  393          | name_in_namespace '(' make_struct_single ')'
  394          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  395          | name_in_namespace '(' expr_list ')'
  396          | basic_type_declaration '(' ')'
  397          | basic_type_declaration '(' expr_list ')'

  398 expr: "null"
  399     | name_in_namespace
  400     | expr_numeric_const
  401     | expr_reader
  402     | string_builder
  403     | make_decl
  404     | "true"
  405     | "false"
  406     | expr_field
  407     | expr_mtag
  408     | '!' expr
  409     | '~' expr
  410     | '+' expr
  411     | '-' expr
  412     | expr "<<" expr
  413     | expr ">>" expr
  414     | expr "<<<" expr
  415     | expr ">>>" expr
  416     | expr '+' expr
  417     | expr '-' expr
  418     | expr '*' expr
  419     | expr '/' expr
  420     | expr '%' expr
  421     | expr '<' expr
  422     | expr '>' expr
  423     | expr "==" expr
  424     | expr "!=" expr
  425     | expr "<=" expr
  426     | expr ">=" expr
  427     | expr '&' expr
  428     | expr '|' expr
  429     | expr '^' expr
  430     | expr "&&" expr
  431     | expr "||" expr
  432     | expr "^^" expr
  433     | expr ".." expr
  434     | "++" expr
  435     | "--" expr
  436     | expr "++"
  437     | expr "--"
  438     | '(' expr_list optional_comma ')'
  439     | expr '[' expr ']'
  440     | expr '.' '[' expr ']'
  441     | expr "?[" expr ']'
  442     | expr '.' "?[" expr ']'
  443     | expr "?." "name"
  444     | expr '.' "?." "name"
  445     | func_addr_expr
  446     | expr_call
  447     | '*' expr
  448     | "deref" '(' expr ')'
  449     | "addr" '(' expr ')'
  450     | expr_generator
  451     | expr "??" expr
  452     | expr '?' expr ':' expr

  453 $@30: %empty

  454 $@31: %empty

  455 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr "is" basic_type_declaration
  457     | expr "is" "name"
  458     | expr "as" "name"

  459 $@32: %empty

  460 $@33: %empty

  461 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr "as" basic_type_declaration
  463     | expr '?' "as" "name"

  464 $@34: %empty

  465 $@35: %empty

  466 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr '?' "as" basic_type_declaration
  468     | expr_type_info
  469     | expr_type_decl
  470     | expr_cast
  471     | expr_new
  472     | expr_method_call
  473     | expr_named_call
  474     | expr_full_block
  475     | expr "<|" expr
  476     | expr "|>" expr
  477     | expr "|>" basic_type_declaration
  478     | expr_call_pipe
  479     | "unsafe" '(' expr ')'

  480 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  481               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  482               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  483 expr_mtag: "$$" '(' expr ')'
  484          | "$i" '(' expr ')'
  485          | "$v" '(' expr ')'
  486          | "$b" '(' expr ')'
  487          | "$a" '(' expr ')'
  488          | "..."
  489          | "$c" '(' expr ')' '(' ')'
  490          | "$c" '(' expr ')' '(' expr_list ')'
  491          | expr '.' "$f" '(' expr ')'
  492          | expr "?." "$f" '(' expr ')'
  493          | expr '.' '.' "$f" '(' expr ')'
  494          | expr '.' "?." "$f" '(' expr ')'
  495          | expr "as" "$f" '(' expr ')'
  496          | expr '?' "as" "$f" '(' expr ')'
  497          | expr "is" "$f" '(' expr ')'
  498          | '@' '@' "$c" '(' expr ')'

  499 optional_field_annotation: %empty
  500                          | metadata_argument_list

  501 optional_override: %empty
  502                  | "override"
  503                  | "sealed"

  504 optional_constant: %empty
  505                  | "const"

  506 optional_public_or_private_member_variable: %empty
  507                                           | "public"
  508                                           | "private"

  509 optional_static_member_variable: %empty
  510                                | "static"

  511 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  512 struct_variable_declaration_list: %empty
  513                                 | struct_variable_declaration_list "new line, semicolon"

  514 $@36: %empty

  515 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration SEMICOLON

  516 $@37: %empty

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON

  518 $@38: %empty

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

  520 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  521                              | "$a" '(' expr ')'

  522 function_argument_list: function_argument_declaration
  523                       | function_argument_list ';' function_argument_declaration

  524 tuple_type: type_declaration
  525           | "name" ':' type_declaration

  526 tuple_type_list: tuple_type
  527                | tuple_type_list c_or_s tuple_type

  528 tuple_alias_type_list: %empty
  529                      | tuple_type
  530                      | tuple_alias_type_list semis tuple_type

  531 variant_type: "name" ':' type_declaration

  532 variant_type_list: variant_type
  533                  | variant_type_list c_or_s variant_type

  534 variant_alias_type_list: %empty
  535                        | variant_type
  536                        | variant_alias_type_list semis variant_type

  537 copy_or_move: '='
  538             | "<-"

  539 variable_declaration: variable_name_with_pos_list
  540                     | variable_name_with_pos_list '&'
  541                     | variable_name_with_pos_list ':' type_declaration
  542                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  543                     | variable_name_with_pos_list copy_or_move expr

  544 copy_or_move_or_clone: '='
  545                      | "<-"
  546                      | ":="

  547 optional_ref: %empty
  548             | '&'

  549 let_variable_name_with_pos_list: "name"
  550                                | "$i" '(' expr ')'
  551                                | "name" "aka" "name"
  552                                | let_variable_name_with_pos_list ',' "name"
  553                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  554 global_let_variable_name_with_pos_list: "name"
  555                                       | global_let_variable_name_with_pos_list ',' "name"

  556 variable_declaration_list: %empty
  557                          | variable_declaration_list SEMICOLON
  558                          | variable_declaration_list let_variable_declaration

  559 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  560                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  561                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  562 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  563                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  564                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  565 optional_shared: %empty
  566                | "shared"

  567 optional_public_or_private_variable: %empty
  568                                    | "private"
  569                                    | "public"

  570 global_variable_declaration_list: %empty
  571                                 | global_variable_declaration_list SEMICOLON

  572 $@39: %empty

  573 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation let_variable_declaration

  574 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  575 $@40: %empty

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

  577 enum_expression: "name"
  578                | "name" '=' expr

  579 commas: COMMA
  580       | commas COMMA

  581 enum_list: %empty
  582          | enum_expression
  583          | enum_list commas enum_expression

  584 optional_public_or_private_alias: %empty
  585                                 | "private"
  586                                 | "public"

  587 $@41: %empty

  588 single_alias: optional_public_or_private_alias "name" $@41 '=' type_declaration

  589 alias_declaration: "typedef" single_alias SEMICOLON

  590 optional_public_or_private_enum: %empty
  591                                | "private"
  592                                | "public"

  593 enum_name: "name"

  594 optional_enum_basic_type_declaration: %empty
  595                                     | ':' enum_basic_type_declaration

  596 optional_commas: %empty
  597                | commas

  598 emit_commas: "new line, comma"
  599            | emit_commas "new line, comma"

  600 optional_emit_commas: %empty
  601                     | emit_commas

  602 $@42: %empty

  603 $@43: %empty

  604 $@44: %empty

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

  606 optional_structure_parent: %empty
  607                          | ':' name_in_namespace

  608 optional_sealed: %empty
  609                | "sealed"

  610 structure_name: optional_sealed "name" optional_structure_parent

  611 class_or_struct: "class"
  612                | "struct"

  613 optional_public_or_private_structure: %empty
  614                                     | "private"
  615                                     | "public"

  616 optional_struct_variable_declaration_list: ';'
  617                                          | '{' struct_variable_declaration_list '}'

  618 $@45: %empty

  619 $@46: %empty

  620 $@47: %empty

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

  622 variable_name_with_pos_list: "name"
  623                            | "$i" '(' expr ')'
  624                            | "name" "aka" "name"
  625                            | variable_name_with_pos_list ',' "name"
  626                            | variable_name_with_pos_list ',' "name" "aka" "name"

  627 basic_type_declaration: "bool"
  628                       | "string"
  629                       | "int"
  630                       | "int8"
  631                       | "int16"
  632                       | "int64"
  633                       | "int2"
  634                       | "int3"
  635                       | "int4"
  636                       | "uint"
  637                       | "uint8"
  638                       | "uint16"
  639                       | "uint64"
  640                       | "uint2"
  641                       | "uint3"
  642                       | "uint4"
  643                       | "float"
  644                       | "float2"
  645                       | "float3"
  646                       | "float4"
  647                       | "void"
  648                       | "range"
  649                       | "urange"
  650                       | "range64"
  651                       | "urange64"
  652                       | "double"
  653                       | "bitfield"

  654 enum_basic_type_declaration: "int"
  655                            | "int8"
  656                            | "int16"
  657                            | "uint"
  658                            | "uint8"
  659                            | "uint16"
  660                            | "int64"
  661                            | "uint64"

  662 structure_type_declaration: name_in_namespace

  663 auto_type_declaration: "auto"
  664                      | "auto" '(' "name" ')'
  665                      | "$t" '(' expr ')'

  666 bitfield_bits: "name"
  667              | bitfield_bits ';' "name"

  668 bitfield_alias_bits: %empty
  669                    | "name"
  670                    | bitfield_alias_bits commas "name"

  671 $@48: %empty

  672 $@49: %empty

  673 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  674 c_or_s: COMMA
  675       | SEMICOLON

  676 table_type_pair: type_declaration
  677                | type_declaration c_or_s type_declaration

  678 dim_list: '[' expr ']'
  679         | '[' ']'
  680         | dim_list '[' expr ']'
  681         | dim_list '[' ']'

  682 type_declaration_no_options: type_declaration_no_options_no_dim
  683                            | type_declaration_no_options_no_dim dim_list

  684 type_declaration_no_options_no_dim: basic_type_declaration
  685                                   | auto_type_declaration
  686                                   | bitfield_type_declaration
  687                                   | structure_type_declaration

  688 $@50: %empty

  689 $@51: %empty

  690 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' $@51
  691                                   | "typedecl" '(' expr ')'
  692                                   | '$' name_in_namespace '(' optional_expr_list ')'

  693 $@52: %empty

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  695                                   | type_declaration_no_options_no_dim '-' '[' ']'
  696                                   | type_declaration_no_options_no_dim "explicit"
  697                                   | type_declaration_no_options_no_dim "const"
  698                                   | type_declaration_no_options_no_dim '-' "const"
  699                                   | type_declaration_no_options_no_dim '&'
  700                                   | type_declaration_no_options_no_dim '-' '&'
  701                                   | type_declaration_no_options_no_dim '#'
  702                                   | type_declaration_no_options_no_dim "implicit"
  703                                   | type_declaration_no_options_no_dim '-' '#'
  704                                   | type_declaration_no_options_no_dim "==" "const"
  705                                   | type_declaration_no_options_no_dim "==" '&'
  706                                   | type_declaration_no_options_no_dim '?'

  707 $@53: %empty

  708 $@54: %empty

  709 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' $@54
  710                                   | type_declaration_no_options_no_dim "??"

  711 $@55: %empty

  712 $@56: %empty

  713 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' $@56

  714 $@57: %empty

  715 $@58: %empty

  716 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' $@58

  717 $@59: %empty

  718 $@60: %empty

  719 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' $@60
  720                                   | "block"

  721 $@61: %empty

  722 $@62: %empty

  723 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' $@62

  724 $@63: %empty

  725 $@64: %empty

  726 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  727                                   | "function"

  728 $@65: %empty

  729 $@66: %empty

  730 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' $@66

  731 $@67: %empty

  732 $@68: %empty

  733 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  734                                   | "lambda"

  735 $@69: %empty

  736 $@70: %empty

  737 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' $@70

  738 $@71: %empty

  739 $@72: %empty

  740 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  741 $@73: %empty

  742 $@74: %empty

  743 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' $@74

  744 $@75: %empty

  745 $@76: %empty

  746 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' $@76

  747 type_declaration: type_declaration_no_options
  748                 | type_declaration '|' type_declaration_no_options
  749                 | type_declaration '|' '#'

  750 $@77: %empty

  751 $@78: %empty

  752 $@79: %empty

  753 $@80: %empty

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

  755 $@81: %empty

  756 $@82: %empty

  757 $@83: %empty

  758 $@84: %empty

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

  760 $@85: %empty

  761 $@86: %empty

  762 $@87: %empty

  763 $@88: %empty

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

  765 make_decl: make_struct_decl
  766          | make_dim_decl
  767          | make_table_decl
  768          | array_comprehension
  769          | make_tuple_call

  770 make_struct_fields: "name" copy_or_move expr
  771                   | "name" ":=" expr
  772                   | make_struct_fields ',' "name" copy_or_move expr
  773                   | make_struct_fields ',' "name" ":=" expr
  774                   | "$f" '(' expr ')' copy_or_move expr
  775                   | "$f" '(' expr ')' ":=" expr
  776                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  778 make_variant_dim: make_struct_fields

  779 make_struct_single: make_struct_fields

  780 make_struct_dim_list: '(' make_struct_fields ')'
  781                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  782 make_struct_dim_decl: make_struct_fields
  783                     | make_struct_dim_list optional_comma

  784 optional_make_struct_dim_decl: make_struct_dim_decl
  785                              | %empty

  786 use_initializer: %empty
  787                | "uninitialized"

  788 $@89: %empty

  789 $@90: %empty

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  791 $@91: %empty

  792 $@92: %empty

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  794 $@93: %empty

  795 $@94: %empty

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

  797 $@95: %empty

  798 $@96: %empty

  799 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  800 make_map_tuple: expr "=>" expr
  801               | expr

  802 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  803 $@97: %empty

  804 $@98: %empty

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  806 make_dim_decl: '[' expr_list optional_comma ']'

  807 $@99: %empty

  808 $@100: %empty

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  810 $@101: %empty

  811 $@102: %empty

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  813 $@103: %empty

  814 $@104: %empty

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  816              | "array" '(' expr_list optional_comma ')'

  817 $@105: %empty

  818 $@106: %empty

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  820              | "fixed_array" '(' expr_list optional_comma ')'

  821 $@107: %empty

  822 $@108: %empty

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  824 expr_map_tuple_list: make_map_tuple
  825                    | expr_map_tuple_list ',' make_map_tuple

  826 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  827                | "table" '(' expr_map_tuple_list optional_comma ')'
  828                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  829                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  830 array_comprehension_where: %empty
  831                          | ';' "where" expr

  832 optional_comma: %empty
  833               | ','

  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  835                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  836                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 126 144 408
    '#' (35) 701 703 749
    '$' (36) 24 328 692 694
    '%' (37) 40 44 164 420
    '&' (38) 172 331 427 540 548 699 700 705
    '(' (40) 67 87 88 90 93 95 115 124 130 139 140 281 282 283 284 303 304 320 321 322 335 339 369 370 371 372 374 384 385 386 387 391 392 393 394 395 396 397 438 448 449 479 480 481 483 484 485 486 487 489 490 491 492 493 494 495 496 497 498 521 550 623 664 665 691 692 694 774 775 776 777 780 781 790 793 796 802 805 809 812 815 816 819 820 823 827 828 829 834 835 836
    ')' (41) 67 87 88 90 93 95 115 124 130 139 140 281 282 283 284 303 304 320 321 322 335 339 369 370 371 372 374 384 385 386 387 391 392 393 394 395 396 397 438 448 449 479 480 481 483 484 485 486 487 489 490 491 492 493 494 495 496 497 498 521 550 623 664 665 691 692 694 774 775 776 777 780 781 790 793 796 802 805 809 812 815 816 819 820 823 827 828 829 834 835 836
    '*' (42) 162 418 447
    '+' (43) 160 410 416
    ',' (44) 16 53 104 117 133 302 324 337 370 552 553 555 625 626 772 773 776 777 781 825 833
    '-' (45) 161 411 417 695 698 700 703
    '.' (46) 45 189 191 192 382 383 384 385 386 387 390 440 442 444 491 493 494
    '/' (47) 46 163 419
    ':' (58) 55 56 142 303 452 525 531 541 542 559 560 562 563 595 607
    ';' (59) 18 523 616 667 831 834 835 836
    '<' (60) 165 278 310 313 316 319 321 322 378 381 421 455 461 466 480 481 482 673 690 694 709 713 716 719 723 726 730 733 737 740 743 746 790 793 796 799 805 809 812 815 819 823 828 829
    '=' (61) 96 108 109 110 111 112 113 115 332 351 537 544 578 588
    '>' (62) 166 278 310 313 316 319 321 322 378 381 422 455 461 466 480 481 482 673 690 694 709 713 716 719 723 726 730 733 737 740 743 746 790 793 796 799 805 809 812 815 819 823 828 829
    '?' (63) 201 202 452 463 466 467 496 706
    '@' (64) 118 119 329 330 375 378 381 498
    '[' (91) 135 137 187 369 370 439 440 678 679 680 681 695 806 834 835
    ']' (93) 135 137 187 188 369 370 439 440 441 442 678 679 680 681 695 806 834 835
    '^' (94) 174 429
    '{' (123) 83 238 241 307 342 574 605 617 754 759 764 826 836
    '|' (124) 173 428 748 749
    '}' (125) 83 238 241 307 342 574 605 617 754 759 764 826 836
    '~' (126) 145 409
    error (256) 264 390
    "lexer error" (258)
    "capture" (259) 339
    "struct" (260) 612 790 809
    "class" (261) 611 793
    "let" (262) 294 297
    "def" (263) 228 517 519
    "while" (264) 93
    "if" (265) 68 88
    "static_if" (266) 69
    "else" (267) 66 71
    "for" (268) 90 834 835 836
    "recover" (269) 293
    "true" (270) 101 112 404
    "false" (271) 102 113 405
    "new" (272) 280 281 282 283 284 285
    "typeinfo" (273) 320 321 322
    "type" (274) 106 319 455 461 466 690
    "in" (275) 90 107 834 835 836
    "is" (276) 197 199 455 456 457 497
    "as" (277) 48 198 200 201 202 458 461 462 463 466 467 495 496
    "elif" (278) 59
    "static_elif" (279) 60
    "array" (280) 713 809 812 815 816 819
    "return" (281) 288 289 290
    "null" (282) 398
    "break" (283) 286
    "try" (284) 293
    "options" (285) 41
    "table" (286) 716 827 828 829
    "expect" (287) 51
    "const" (288) 505 697 698 704
    "require" (289) 42 121
    "operator" (290) 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
    "enum" (291) 605
    "finally" (292) 238
    "delete" (293) 195 274 275
    "deref" (294) 448
    "typedef" (295) 589
    "typedecl" (296) 691
    "with" (297) 95
    "aka" (298) 551 553 624 626
    "assume" (299) 96
    "cast" (300) 310
    "override" (301) 502
    "abstract" (302) 517
    "upcast" (303) 313
    "iterator" (304) 719 835
    "var" (305) 295 298
    "addr" (306) 449
    "continue" (307) 287
    "where" (308) 831
    "pass" (309) 261
    "reinterpret" (310) 316
    "module" (311) 26
    "public" (312) 22 50 231 507 569 586 592 615
    "label" (313) 56 57
    "goto" (314) 57 58
    "implicit" (315) 702
    "explicit" (316) 275 696
    "shared" (317) 566
    "private" (318) 23 122 230 508 568 585 591 614
    "smart_ptr" (319) 709
    "unsafe" (320) 91 479
    "inscope" (321) 299
    "static" (322) 510
    "fixed_array" (323) 820 823
    "default" (324) 799
    "uninitialized" (325) 284 392 394 787
    "bool" (326) 203 627
    "void" (327) 647
    "string" (328) 204 628
    "auto" (329) 663 664
    "int" (330) 205 629 654
    "int2" (331) 206 633
    "int3" (332) 207 634
    "int4" (333) 208 635
    "uint" (334) 209 636 657
    "bitfield" (335) 653 673 764
    "uint2" (336) 210 640
    "uint3" (337) 211 641
    "uint4" (338) 212 642
    "float" (339) 213 643
    "float2" (340) 214 644
    "float3" (341) 215 645
    "float4" (342) 216 646
    "range" (343) 217 648
    "urange" (344) 218 649
    "range64" (345) 219 650
    "urange64" (346) 220 651
    "block" (347) 720 723 726
    "int64" (348) 221 632 660
    "uint64" (349) 222 639 661
    "double" (350) 223 652
    "function" (351) 727 730 733
    "lambda" (352) 734 737 740
    "int8" (353) 224 630 655
    "uint8" (354) 225 637 658
    "int16" (355) 226 631 656
    "uint16" (356) 227 638 659
    "tuple" (357) 743 754 802 805 812
    "variant" (358) 746 759 796 815
    "generator" (359) 480 481 482
    "yield" (360) 291 292
    "sealed" (361) 503 609
    "+=" (362) 146 360
    "-=" (363) 147 361
    "/=" (364) 149 363
    "*=" (365) 148 362
    "%=" (366) 150 364
    "&=" (367) 151 354
    "|=" (368) 152 355
    "^=" (369) 153 356
    "<<" (370) 179 412
    ">>" (371) 180 413
    "++" (372) 175 177 434 436
    "--" (373) 176 178 435 437
    "<=" (374) 170 425
    "<<=" (375) 181 365
    ">>=" (376) 182 366
    ">=" (377) 171 426
    "==" (378) 168 423 704 705
    "!=" (379) 169 424
    "->" (380) 371 372
    "<-" (381) 290 292 327 333 352 538 545
    "??" (382) 196 451 710
    "?." (383) 190 193 443 444 492 494
    "?[" (384) 188 441 442
    "<|" (385) 475
    "|>" (386) 131 476 477
    ":=" (387) 192 194 334 353 546 771 773 775 777
    "<<<" (388) 183 414
    ">>>" (389) 184 415
    "<<<=" (390) 185 367
    ">>>=" (391) 186 368
    "=>" (392) 326 327 800
    "::" (393) 272 273
    "&&" (394) 127 157 430
    "||" (395) 128 158 431
    "^^" (396) 129 159 432
    "&&=" (397) 154 357
    "||=" (398) 155 358
    "^^=" (399) 156 359
    ".." (400) 167 433
    "$$" (401) 483
    "$i" (402) 374 484 550 623
    "$v" (403) 485
    "$b" (404) 486
    "$a" (405) 487 521
    "$t" (406) 665
    "$c" (407) 489 490 498
    "$f" (408) 491 492 493 494 495 496 497 774 775 776 777
    "..." (409) 488
    "integer constant" <i> (410) 54 55 56 57 99 110 343
    "long integer constant" <i64> (411) 345
    "unsigned integer constant" <ui> (412) 344
    "unsigned long integer constant" <ui64> (413) 346
    "unsigned int8 constant" <ui> (414) 347
    "floating point constant" <fd> (415) 100 111 348
    "double constant" <d> (416) 349
    "name" <s> (417) 25 43 45 46 48 96 98 105 109 143 191 192 193 199 200 202 271 272 273 301 302 321 322 331 332 333 334 335 371 372 382 383 384 385 443 444 457 458 463 525 531 549 551 552 553 554 555 577 578 588 593 610 622 624 625 626 664 666 667 669 670 754 759 764 770 771 772 773
    "new line, comma" (418) 17 598 599
    "new line, semicolon" (419) 19 61 62 513
    "start of the string" (420) 31 32 36
    STRING_CHARACTER <ch> (421) 27 29 37 38
    STRING_CHARACTER_ESC (422) 28 30
    "end of the string" (423) 31 32 36
    "{" (424) 35
    "}" (425) 35
    "end of failed eader macro" (426)
    UNARY_MINUS (427)
    UNARY_PLUS (428)
    PRE_INC (429)
    PRE_DEC (430)
    LLPIPE (431)
    POST_INC (432)
    POST_DEC (433)
    DEREF (434)


Nonterminals, with rules where they appear

    $accept (207)
        on left: 0
    program (208)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (209)
        on left: 16 17
        on right: 579 580 674
    SEMICOLON (210)
        on left: 18 19
        on right: 8 9 15 20 77 78 85 88 243 244 245 250 252 253 254 255 259 260 261 303 304 515 517 557 559 560 561 562 563 564 571 589 675
    top_level_reader_macro (211)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (212)
        on left: 21 22 23
        on right: 26
    module_name <s> (213)
        on left: 24 25
        on right: 26
    module_declaration (214)
        on left: 26
        on right: 2
    character_sequence <s> (215)
        on left: 27 28 29 30
        on right: 29 30 31 34
    string_constant <s> (216)
        on left: 31 32
        on right: 97 108
    string_builder_body <pExpression> (217)
        on left: 33 34 35
        on right: 34 35 36
    string_builder <pExpression> (218)
        on left: 36
        on right: 402
    reader_character_sequence (219)
        on left: 37 38
        on right: 38 40
    expr_reader <pExpression> (220)
        on left: 40
        on right: 20 401
    $@1 (221)
        on left: 39
        on right: 40
    options_declaration (222)
        on left: 41
        on right: 9
    require_declaration (223)
        on left: 42
        on right: 8
    require_module_name <s> (224)
        on left: 43 44 45 46
        on right: 44 45 46 47 48
    require_module (225)
        on left: 47 48
        on right: 42
    is_public_module <b> (226)
        on left: 49 50
        on right: 47 48
    expect_declaration (227)
        on left: 51
        on right: 7
    expect_list (228)
        on left: 52 53
        on right: 51 53
    expect_error (229)
        on left: 54 55
        on right: 52 53
    expression_label <pExpression> (230)
        on left: 56
        on right: 259
    expression_goto <pExpression> (231)
        on left: 57 58
        on right: 260
    elif_or_static_elif <b> (232)
        on left: 59 60
        on right: 67
    emit_semis (233)
        on left: 61 62
        on right: 62 64
    optional_emit_semis (234)
        on left: 63 64
        on right: 66 67 87 90 91 93 95 118 119 137 234 340 341 482 519 621 754 759
    expression_else <pExpression> (235)
        on left: 65 66 67
        on right: 67 87
    if_or_static_if <b> (236)
        on left: 68 69
        on right: 87
    expression_else_one_liner <pExpression> (237)
        on left: 70 71
        on right: 88
    expression_if_one_liner <pExpression> (238)
        on left: 72 73 74 75 76
        on right: 71 85 88
    semis (239)
        on left: 77 78
        on right: 78 80 530 536
    optional_semis (240)
        on left: 79 80
        on right: 754 759
    expression_if_block <pExpression> (241)
        on left: 83 85
        on right: 87
    $@2 (242)
        on left: 81
        on right: 83
    $@3 (243)
        on left: 82
        on right: 83
    $@4 (244)
        on left: 84
        on right: 85
    expression_if_then_else <pExpression> (245)
        on left: 87
        on right: 256
    $@5 (246)
        on left: 86
        on right: 87
    expression_if_then_else_oneliner <pExpression> (247)
        on left: 88
        on right: 257
    expression_for_loop <pExpression> (248)
        on left: 90
        on right: 251
    $@6 (249)
        on left: 89
        on right: 90
    expression_unsafe <pExpression> (250)
        on left: 91
        on right: 248
    expression_while_loop <pExpression> (251)
        on left: 93
        on right: 247
    $@7 (252)
        on left: 92
        on right: 93
    expression_with <pExpression> (253)
        on left: 95
        on right: 249
    $@8 (254)
        on left: 94
        on right: 95
    expression_with_alias <pExpression> (255)
        on left: 96
        on right: 250
    annotation_argument_value <aa> (256)
        on left: 97 98 99 100 101 102
        on right: 103 104
    annotation_argument_value_list <aaList> (257)
        on left: 103 104
        on right: 104 115
    annotation_argument_name <s> (258)
        on left: 105 106 107
        on right: 108 109 110 111 112 113 114 115
    annotation_argument <aa> (259)
        on left: 108 109 110 111 112 113 114 115
        on right: 116 117 118 119
    annotation_argument_list <aaList> (260)
        on left: 116 117
        on right: 41 117 124
    metadata_argument_list <aaList> (261)
        on left: 118 119
        on right: 119 500
    annotation_declaration_name <s> (262)
        on left: 120 121 122
        on right: 123 124
    annotation_declaration_basic <fa> (263)
        on left: 123 124
        on right: 125
    annotation_declaration <fa> (264)
        on left: 125 126 127 128 129 130 131
        on right: 126 127 128 129 130 131 132 133
    annotation_list <faList> (265)
        on left: 132 133
        on right: 133 135 137
    optional_annotation_list <faList> (266)
        on left: 134 135
        on right: 340 341 605
    optional_annotation_list_with_emit_semis <faList> (267)
        on left: 136 137
        on right: 228 517 519 621
    optional_function_argument_list <pVarDeclList> (268)
        on left: 138 139 140
        on right: 232 340 341 381 726 733 740
    optional_function_type <pTypeDecl> (269)
        on left: 141 142
        on right: 232 340 341 381 726 733 740
    function_name <s> (270)
        on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
        on right: 232
    global_function_declaration (271)
        on left: 228
        on right: 6
    optional_public_or_private_function <b> (272)
        on left: 229 230 231
        on right: 234
    function_declaration_header <pFuncDecl> (273)
        on left: 232
        on right: 234 517 519
    function_declaration <pFuncDecl> (274)
        on left: 234
        on right: 228
    $@9 (275)
        on left: 233
        on right: 234
    expression_block_finally <pExpression> (276)
        on left: 235 238
        on right: 83 241
    $@10 (277)
        on left: 236
        on right: 238
    $@11 (278)
        on left: 237
        on right: 238
    expression_block <pExpression> (279)
        on left: 241
        on right: 66 67 90 91 93 95 234 293 325 341 482 519
    $@12 (280)
        on left: 239
        on right: 241
    $@13 (281)
        on left: 240
        on right: 241
    expr_call_pipe <pExpression> (282)
        on left: 242
        on right: 478
    expression_any <pExpression> (283)
        on left: 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261
        on right: 263
    expressions <pExpression> (284)
        on left: 262 263 264
        on right: 83 238 241 263 264 342
    optional_expr_list <pExpression> (285)
        on left: 265 266
        on right: 692 694 819
    optional_expr_map_tuple_list <pExpression> (286)
        on left: 267 268
        on right: 828 829
    type_declaration_no_options_list <pTypeDeclList> (287)
        on left: 269 270
        on right: 270 694
    name_in_namespace <s> (288)
        on left: 271 272 273
        on right: 40 120 320 321 322 369 370 373 391 392 393 394 395 399 607 662 692 694
    expression_delete <pExpression> (289)
        on left: 274 275
        on right: 245
    new_type_declaration <pTypeDecl> (290)
        on left: 278 279
        on right: 280 281 282 283 284
    $@14 (291)
        on left: 276
        on right: 278
    $@15 (292)
        on left: 277
        on right: 278
    expr_new <pExpression> (293)
        on left: 280 281 282 283 284 285
        on right: 471
    expression_break <pExpression> (294)
        on left: 286
        on right: 75 252
    expression_continue <pExpression> (295)
        on left: 287
        on right: 76 253
    expression_return <pExpression> (296)
        on left: 288 289 290
        on right: 73 254
    expression_yield <pExpression> (297)
        on left: 291 292
        on right: 74 255
    expression_try_catch <pExpression> (298)
        on left: 293
        on right: 258
    kwd_let_var_or_nothing <b> (299)
        on left: 294 295 296
        on right: 520
    kwd_let <b> (300)
        on left: 297 298
        on right: 305 306 307 574 576
    optional_in_scope <b> (301)
        on left: 299 300
        on right: 305 306 307
    tuple_expansion <pNameList> (302)
        on left: 301 302
        on right: 302 303 304
    tuple_expansion_variable_declaration <pVarDecl> (303)
        on left: 303 304
        on right: 306
    expression_let <pExpression> (304)
        on left: 305 306 307
        on right: 246
    expr_cast <pExpression> (305)
        on left: 310 313 316
        on right: 470
    $@16 (306)
        on left: 308
        on right: 310
    $@17 (307)
        on left: 309
        on right: 310
    $@18 (308)
        on left: 311
        on right: 313
    $@19 (309)
        on left: 312
        on right: 313
    $@20 (310)
        on left: 314
        on right: 316
    $@21 (311)
        on left: 315
        on right: 316
    expr_type_decl <pExpression> (312)
        on left: 319
        on right: 469
    $@22 (313)
        on left: 317
        on right: 319
    $@23 (314)
        on left: 318
        on right: 319
    expr_type_info <pExpression> (315)
        on left: 320 321 322
        on right: 468
    expr_list <pExpression> (316)
        on left: 323 324
        on right: 90 266 282 324 370 372 385 387 395 397 438 490 802 806 816 820 823 834 835 836
    block_or_simple_block <pExpression> (317)
        on left: 325 326 327
        on right: 340
    block_or_lambda <i> (318)
        on left: 328 329 330
        on right: 340 341
    capture_entry <pCapt> (319)
        on left: 331 332 333 334 335
        on right: 336 337
    capture_list <pCaptList> (320)
        on left: 336 337
        on right: 337 339
    optional_capture_list <pCaptList> (321)
        on left: 338 339
        on right: 340 341 480 481 482
    expr_full_block <pExpression> (322)
        on left: 340
        on right: 474
    expr_full_block_assumed_piped <pExpression> (323)
        on left: 341 342
        on right: 242
    expr_numeric_const <pExpression> (324)
        on left: 343 344 345 346 347 348 349
        on right: 400
    expr_assign <pExpression> (325)
        on left: 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368
        on right: 244
    expr_named_call <pExpression> (326)
        on left: 369 370
        on right: 473
    expr_method_call <pExpression> (327)
        on left: 371 372
        on right: 472
    func_addr_name <pExpression> (328)
        on left: 373 374
        on right: 375 378 381
    func_addr_expr <pExpression> (329)
        on left: 375 378 381
        on right: 445
    $@24 (330)
        on left: 376
        on right: 378
    $@25 (331)
        on left: 377
        on right: 378
    $@26 (332)
        on left: 379
        on right: 381
    $@27 (333)
        on left: 380
        on right: 381
    expr_field <pExpression> (334)
        on left: 382 383 384 385 386 387 390
        on right: 406
    $@28 (335)
        on left: 388
        on right: 390
    $@29 (336)
        on left: 389
        on right: 390
    expr_call <pExpression> (337)
        on left: 391 392 393 394 395 396 397
        on right: 242 446
    expr <pExpression> (338)
        on left: 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 455 456 457 458 461 462 463 466 467 468 469 470 471 472 473 474 475 476 477 478 479
        on right
    $@30 (339)
        on left: 453
        on right: 455
    $@31 (340)
        on left: 454
        on right: 455
    $@32 (341)
        on left: 459
        on right: 461
    $@33 (342)
        on left: 460
        on right: 461
    $@34 (343)
        on left: 464
        on right: 466
    $@35 (344)
        on left: 465
        on right: 466
    expr_generator <pExpression> (345)
        on left: 480 481 482
        on right: 450
    expr_mtag <pExpression> (346)
        on left: 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498
        on right: 407
    optional_field_annotation <aaList> (347)
        on left: 499 500
        on right: 511 520 573 576
    optional_override <i> (348)
        on left: 501 502 503
        on right: 511 519
    optional_constant <b> (349)
        on left: 504 505
        on right: 517 519
    optional_public_or_private_member_variable <b> (350)
        on left: 506 507 508
        on right: 511 517 519
    optional_static_member_variable <b> (351)
        on left: 509 510
        on right: 511 519
    structure_variable_declaration <pVarDecl> (352)
        on left: 511
        on right: 515
    struct_variable_declaration_list <pVarDeclList> (353)
        on left: 512 513 515 517 519
        on right: 513 515 517 519 617
    $@36 (354)
        on left: 514
        on right: 515
    $@37 (355)
        on left: 516
        on right: 517
    $@38 (356)
        on left: 518
        on right: 519
    function_argument_declaration <pVarDecl> (357)
        on left: 520 521
        on right: 522 523
    function_argument_list <pVarDeclList> (358)
        on left: 522 523
        on right: 140 523
    tuple_type <pVarDecl> (359)
        on left: 524 525
        on right: 526 527 529 530
    tuple_type_list <pVarDeclList> (360)
        on left: 526 527
        on right: 527 743
    tuple_alias_type_list <pVarDeclList> (361)
        on left: 528 529 530
        on right: 530 754
    variant_type <pVarDecl> (362)
        on left: 531
        on right: 532 533 535 536
    variant_type_list <pVarDeclList> (363)
        on left: 532 533
        on right: 533 746
    variant_alias_type_list <pVarDeclList> (364)
        on left: 534 535 536
        on right: 536 759
    copy_or_move <b> (365)
        on left: 537 538
        on right: 542 543 770 772 774 776
    variable_declaration <pVarDecl> (366)
        on left: 539 540 541 542 543
        on right: 511 520
    copy_or_move_or_clone <i> (367)
        on left: 544 545 546
        on right: 303 304 560 561 563 564
    optional_ref <b> (368)
        on left: 547 548
        on right: 304 561 564
    let_variable_name_with_pos_list <pNameWithPosList> (369)
        on left: 549 550 551 552 553
        on right: 552 553 559 560 561
    global_let_variable_name_with_pos_list <pNameWithPosList> (370)
        on left: 554 555
        on right: 555 562 563 564
    variable_declaration_list <pVarDeclList> (371)
        on left: 556 557 558
        on right: 307 557 558
    let_variable_declaration <pVarDecl> (372)
        on left: 559 560 561
        on right: 305 558 573
    global_let_variable_declaration <pVarDecl> (373)
        on left: 562 563 564
        on right: 576
    optional_shared <b> (374)
        on left: 565 566
        on right: 26 574 576
    optional_public_or_private_variable <b> (375)
        on left: 567 568 569
        on right: 574 576
    global_variable_declaration_list <pVarDeclList> (376)
        on left: 570 571 573
        on right: 571 573 574
    $@39 (377)
        on left: 572
        on right: 573
    global_let (378)
        on left: 574 576
        on right: 5
    $@40 (379)
        on left: 575
        on right: 576
    enum_expression <pEnumPair> (380)
        on left: 577 578
        on right: 582 583
    commas (381)
        on left: 579 580
        on right: 580 583 597 670
    enum_list <pEnum> (382)
        on left: 581 582 583
        on right: 583 605
    optional_public_or_private_alias <b> (383)
        on left: 584 585 586
        on right: 588 754 759 764
    single_alias (384)
        on left: 588
        on right: 589
    $@41 (385)
        on left: 587
        on right: 588
    alias_declaration (386)
        on left: 589
        on right: 10
    optional_public_or_private_enum <b> (387)
        on left: 590 591 592
        on right: 605
    enum_name <pEnum> (388)
        on left: 593
        on right: 605
    optional_enum_basic_type_declaration <type> (389)
        on left: 594 595
        on right: 605
    optional_commas (390)
        on left: 596 597
        on right: 605 764
    emit_commas (391)
        on left: 598 599
        on right: 599 601
    optional_emit_commas (392)
        on left: 600 601
        on right: 605 764
    enum_declaration (393)
        on left: 605
        on right: 4
    $@42 (394)
        on left: 602
        on right: 605
    $@43 (395)
        on left: 603
        on right: 605
    $@44 (396)
        on left: 604
        on right: 605
    optional_structure_parent <s> (397)
        on left: 606 607
        on right: 610
    optional_sealed <b> (398)
        on left: 608 609
        on right: 610
    structure_name <pStructure> (399)
        on left: 610
        on right: 621
    class_or_struct <b> (400)
        on left: 611 612
        on right: 621
    optional_public_or_private_structure <b> (401)
        on left: 613 614 615
        on right: 621
    optional_struct_variable_declaration_list <pVarDeclList> (402)
        on left: 616 617
        on right: 621
    structure_declaration (403)
        on left: 621
        on right: 3
    $@45 (404)
        on left: 618
        on right: 621
    $@46 (405)
        on left: 619
        on right: 621
    $@47 (406)
        on left: 620
        on right: 621
    variable_name_with_pos_list <pNameWithPosList> (407)
        on left: 622 623 624 625 626
        on right: 90 539 540 541 542 543 625 626 834 835 836
    basic_type_declaration <type> (408)
        on left: 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653
        on right: 386 387 396 397 456 462 467 477 684
    enum_basic_type_declaration <type> (409)
        on left: 654 655 656 657 658 659 660 661
        on right: 595
    structure_type_declaration <pTypeDecl> (410)
        on left: 662
        on right: 279 687
    auto_type_declaration <pTypeDecl> (411)
        on left: 663 664 665
        on right: 685
    bitfield_bits <pNameList> (412)
        on left: 666 667
        on right: 667 673
    bitfield_alias_bits <pNameList> (413)
        on left: 668 669 670
        on right: 670 764
    bitfield_type_declaration <pTypeDecl> (414)
        on left: 673
        on right: 686
    $@48 (415)
        on left: 671
        on right: 673
    $@49 (416)
        on left: 672
        on right: 673
    c_or_s (417)
        on left: 674 675
        on right: 270 322 527 533 677 829
    table_type_pair <aTypePair> (418)
        on left: 676 677
        on right: 716
    dim_list <pTypeDecl> (419)
        on left: 678 679 680 681
        on right: 680 681 683
    type_declaration_no_options <pTypeDecl> (420)
        on left: 682 683
        on right: 303 310 313 316 378 455 480 481 482 559 560 562 563 747 748 790 793 796 799 805 809 812 815 819 823 828 829
    type_declaration_no_options_no_dim <pTypeDecl> (421)
        on left: 684 685 686 687 690 691 692 694 695 696 697 698 699 700 701 702 703 704 705 706 709 710 713 716 719 720 723 726 727 730 733 734 737 740 743 746
        on right: 682 683 695 696 697 698 699 700 701 702 703 704 705 706 710
    $@50 (422)
        on left: 688
        on right: 690
    $@51 (423)
        on left: 689
        on right: 690
    $@52 (424)
        on left: 693
        on right: 694
    $@53 (425)
        on left: 707
        on right: 709
    $@54 (426)
        on left: 708
        on right: 709
    $@55 (427)
        on left: 711
        on right: 713
    $@56 (428)
        on left: 712
        on right: 713
    $@57 (429)
        on left: 714
        on right: 716
    $@58 (430)
        on left: 715
        on right: 716
    $@59 (431)
        on left: 717
        on right: 719
    $@60 (432)
        on left: 718
        on right: 719
    $@61 (433)
        on left: 721
        on right: 723
    $@62 (434)
        on left: 722
        on right: 723
    $@63 (435)
        on left: 724
        on right: 726
    $@64 (436)
        on left: 725
        on right: 726
    $@65 (437)
        on left: 728
        on right: 730
    $@66 (438)
        on left: 729
        on right: 730
    $@67 (439)
        on left: 731
        on right: 733
    $@68 (440)
        on left: 732
        on right: 733
    $@69 (441)
        on left: 735
        on right: 737
    $@70 (442)
        on left: 736
        on right: 737
    $@71 (443)
        on left: 738
        on right: 740
    $@72 (444)
        on left: 739
        on right: 740
    $@73 (445)
        on left: 741
        on right: 743
    $@74 (446)
        on left: 742
        on right: 743
    $@75 (447)
        on left: 744
        on right: 746
    $@76 (448)
        on left: 745
        on right: 746
    type_declaration <pTypeDecl> (449)
        on left: 747 748 749
        on right: 142 269 270 278 319 461 466 524 525 531 541 542 588 676 677 690 709 713 719 723 730 737 748 749
    tuple_alias_declaration (450)
        on left: 754
        on right: 12
    $@77 (451)
        on left: 750
        on right: 754
    $@78 (452)
        on left: 751
        on right: 754
    $@79 (453)
        on left: 752
        on right: 754
    $@80 (454)
        on left: 753
        on right: 754
    variant_alias_declaration (455)
        on left: 759
        on right: 11
    $@81 (456)
        on left: 755
        on right: 759
    $@82 (457)
        on left: 756
        on right: 759
    $@83 (458)
        on left: 757
        on right: 759
    $@84 (459)
        on left: 758
        on right: 759
    bitfield_alias_declaration (460)
        on left: 764
        on right: 13
    $@85 (461)
        on left: 760
        on right: 764
    $@86 (462)
        on left: 761
        on right: 764
    $@87 (463)
        on left: 762
        on right: 764
    $@88 (464)
        on left: 763
        on right: 764
    make_decl <pExpression> (465)
        on left: 765 766 767 768 769
        on right: 285 403
    make_struct_fields <pMakeStruct> (466)
        on left: 770 771 772 773 774 775 776 777
        on right: 369 370 772 773 776 777 778 779 780 781 782
    make_variant_dim <pExpression> (467)
        on left: 778
        on right: 796 815
    make_struct_single <pExpression> (468)
        on left: 779
        on right: 283 284 393 394
    make_struct_dim_list <pExpression> (469)
        on left: 780 781
        on right: 781 783
    make_struct_dim_decl <pExpression> (470)
        on left: 782 783
        on right: 784
    optional_make_struct_dim_decl <pExpression> (471)
        on left: 784 785
        on right: 790 793 805 809 812
    use_initializer <b> (472)
        on left: 786 787
        on right: 281 790 793 799 805 809 812
    make_struct_decl <pExpression> (473)
        on left: 790 793 796 799
        on right: 765
    $@89 (474)
        on left: 788
        on right: 790
    $@90 (475)
        on left: 789
        on right: 790
    $@91 (476)
        on left: 791
        on right: 793
    $@92 (477)
        on left: 792
        on right: 793
    $@93 (478)
        on left: 794
        on right: 796
    $@94 (479)
        on left: 795
        on right: 796
    $@95 (480)
        on left: 797
        on right: 799
    $@96 (481)
        on left: 798
        on right: 799
    make_map_tuple <pExpression> (482)
        on left: 800 801
        on right: 824 825 836
    make_tuple_call <pExpression> (483)
        on left: 802 805
        on right: 769
    $@97 (484)
        on left: 803
        on right: 805
    $@98 (485)
        on left: 804
        on right: 805
    make_dim_decl <pExpression> (486)
        on left: 806 809 812 815 816 819 820 823
        on right: 766
    $@99 (487)
        on left: 807
        on right: 809
    $@100 (488)
        on left: 808
        on right: 809
    $@101 (489)
        on left: 810
        on right: 812
    $@102 (490)
        on left: 811
        on right: 812
    $@103 (491)
        on left: 813
        on right: 815
    $@104 (492)
        on left: 814
        on right: 815
    $@105 (493)
        on left: 817
        on right: 819
    $@106 (494)
        on left: 818
        on right: 819
    $@107 (495)
        on left: 821
        on right: 823
    $@108 (496)
        on left: 822
        on right: 823
    expr_map_tuple_list <pExpression> (497)
        on left: 824 825
        on right: 268 825 826 827
    make_table_decl <pExpression> (498)
        on left: 826 827 828 829
        on right: 767
    array_comprehension_where <pExpression> (499)
        on left: 830 831
        on right: 834 835 836
    optional_comma <b> (500)
        on left: 832 833
        on right: 266 268 438 783 802 806 816 820 823 826 827
    array_comprehension <pExpression> (501)
        on left: 834 835 836
        on right: 768


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    "enum"    reduce using rule 134 (optional_annotation_list)
    $default  reduce using rule 136 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list                  go to state 24
    optional_annotation_list_with_emit_semis  go to state 25
    global_function_declaration               go to state 26
    kwd_let                                   go to state 27
    global_let                                go to state 28
    alias_declaration                         go to state 29
    enum_declaration                          go to state 30
    structure_declaration                     go to state 31
    tuple_alias_declaration                   go to state 32
    variant_alias_declaration                 go to state 33
    bitfield_alias_declaration                go to state 34


State 2

    0 $accept: program $end .

    $default  accept


State 3

  297 kwd_let: "let" .

    $default  reduce using rule 297 (kwd_let)


State 4

   41 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 40


State 5

   51 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 41

    expect_list   go to state 42
    expect_error  go to state 43


State 6

   42 require_declaration: "require" . require_module

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 46
    require_module       go to state 47


State 7

  589 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 584 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 50
    single_alias                      go to state 51


State 8

  298 kwd_let: "var" .

    $default  reduce using rule 298 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 52
    '$'     shift, and go to state 53

    module_name  go to state 54


State 10

  764 bitfield_alias_declaration: "bitfield" . $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 760 ($@85)

    $@85  go to state 55


State 11

  754 tuple_alias_declaration: "tuple" . $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 750 ($@77)

    $@77  go to state 56


State 12

  759 variant_alias_declaration: "variant" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 755 ($@81)

    $@81  go to state 57


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   40 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  135 optional_annotation_list: '[' . annotation_list ']'
  137 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  605 enum_declaration: optional_annotation_list . "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "enum"  shift, and go to state 74


State 25

  228 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  621 structure_declaration: optional_annotation_list_with_emit_semis . $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "def"  shift, and go to state 75

    $default  reduce using rule 618 ($@45)

    $@45  go to state 76


State 26

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 27

  574 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  576           | kwd_let . optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 565 (optional_shared)

    optional_shared  go to state 78


State 28

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 29

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 30

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 31

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 32

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 33

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 34

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 35

  106 annotation_argument_name: "type" .

    $default  reduce using rule 106 (annotation_argument_name)


State 36

  107 annotation_argument_name: "in" .

    $default  reduce using rule 107 (annotation_argument_name)


State 37

  105 annotation_argument_name: "name" .

    $default  reduce using rule 105 (annotation_argument_name)


State 38

  108 annotation_argument: annotation_argument_name . '=' string_constant
  109                    | annotation_argument_name . '=' "name"
  110                    | annotation_argument_name . '=' "integer constant"
  111                    | annotation_argument_name . '=' "floating point constant"
  112                    | annotation_argument_name . '=' "true"
  113                    | annotation_argument_name . '=' "false"
  114                    | annotation_argument_name .
  115                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 114 (annotation_argument)


State 39

  116 annotation_argument_list: annotation_argument .

    $default  reduce using rule 116 (annotation_argument_list)


State 40

   41 options_declaration: "options" annotation_argument_list .
  117 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 41 (options_declaration)


State 41

   54 expect_error: "integer constant" .
   55             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 54 (expect_error)


State 42

   51 expect_declaration: "expect" expect_list .
   53 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 51 (expect_declaration)


State 43

   52 expect_list: expect_error .

    $default  reduce using rule 52 (expect_list)


State 44

   43 require_module_name: "name" .

    $default  reduce using rule 43 (require_module_name)


State 45

   44 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 83


State 46

   45 require_module_name: require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"
   47 require_module: require_module_name . is_public_module
   48               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 88


State 47

   42 require_declaration: "require" require_module .

    $default  reduce using rule 42 (require_declaration)


State 48

  586 optional_public_or_private_alias: "public" .

    $default  reduce using rule 586 (optional_public_or_private_alias)


State 49

  585 optional_public_or_private_alias: "private" .

    $default  reduce using rule 585 (optional_public_or_private_alias)


State 50

  588 single_alias: optional_public_or_private_alias . "name" $@41 '=' type_declaration

    "name"  shift, and go to state 89


State 51

  589 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 52

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 53

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 54

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 565 (optional_shared)

    optional_shared  go to state 91


State 55

  764 bitfield_alias_declaration: "bitfield" $@85 . optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 584 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 56

  754 tuple_alias_declaration: "tuple" $@77 . optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 584 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 57

  759 variant_alias_declaration: "variant" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 584 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 58

  273 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 59

  271 name_in_namespace: "name" .
  272                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 271 (name_in_namespace)


State 60

   40 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 39 ($@1)

    $@1  go to state 97


State 61

  121 annotation_declaration_name: "require" .

    $default  reduce using rule 121 (annotation_declaration_name)


State 62

  122 annotation_declaration_name: "private" .

    $default  reduce using rule 122 (annotation_declaration_name)


State 63

  131 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  126 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  130 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  123 annotation_declaration_basic: annotation_declaration_name .
  124                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 123 (annotation_declaration_basic)


State 67

  125 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 125 (annotation_declaration)


State 68

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  132 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 132 (annotation_list)


State 69

  133 annotation_list: annotation_list . ',' annotation_declaration
  135 optional_annotation_list: '[' annotation_list . ']'
  137 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  120 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 120 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  605 enum_declaration: optional_annotation_list "enum" . $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    $default  reduce using rule 602 ($@42)

    $@42  go to state 107


State 75

  228 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 229 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 110
    function_declaration                 go to state 111


State 76

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 . class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 112
    "class"   shift, and go to state 113

    class_or_struct  go to state 114


State 77

  566 optional_shared: "shared" .

    $default  reduce using rule 566 (optional_shared)


State 78

  574 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  576           | kwd_let optional_shared . optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 567 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 117


State 79

  108 annotation_argument: annotation_argument_name '=' . string_constant
  109                    | annotation_argument_name '=' . "name"
  110                    | annotation_argument_name '=' . "integer constant"
  111                    | annotation_argument_name '=' . "floating point constant"
  112                    | annotation_argument_name '=' . "true"
  113                    | annotation_argument_name '=' . "false"
  115                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 118
    "false"                    shift, and go to state 119
    "integer constant"         shift, and go to state 120
    "floating point constant"  shift, and go to state 121
    "name"                     shift, and go to state 122
    "start of the string"      shift, and go to state 123
    '('                        shift, and go to state 124

    string_constant  go to state 125


State 80

  117 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 126


State 81

   55 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 127


State 82

   53 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 41

    expect_error  go to state 128


State 83

   44 require_module_name: '%' require_module_name .
   45                    | require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 44 (require_module_name)


State 84

   48 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 129


State 85

   50 is_public_module: "public" .

    $default  reduce using rule 50 (is_public_module)


State 86

   46 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 130


State 87

   45 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 131


State 88

   47 require_module: require_module_name is_public_module .

    $default  reduce using rule 47 (require_module)


State 89

  588 single_alias: optional_public_or_private_alias "name" . $@41 '=' type_declaration

    $default  reduce using rule 587 ($@41)

    $@41  go to state 132


State 90

  589 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 589 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 133
    "private"  shift, and go to state 134

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 135


State 92

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias . "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "name"  shift, and go to state 136


State 93

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias . "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 137


State 94

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 95

  273 name_in_namespace: "::" "name" .

    $default  reduce using rule 273 (name_in_namespace)


State 96

  272 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 139


State 97

   40 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 140

    reader_character_sequence  go to state 141


State 98

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  131                       | "|>" annotation_declaration .

    $default  reduce using rule 131 (annotation_declaration)


State 99

  126 annotation_declaration: '!' annotation_declaration .
  127                       | annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 126 (annotation_declaration)


State 100

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  130                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 142


State 101

  124 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 143


State 102

  127 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 144
    name_in_namespace             go to state 70


State 103

  128 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 104

  129 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 105

  133 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 106

  135 optional_annotation_list: '[' annotation_list ']' .
  137 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 148

    "enum"    reduce using rule 135 (optional_annotation_list)
    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 150


State 107

  605 enum_declaration: optional_annotation_list "enum" $@42 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 590 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 153


State 108

  231 optional_public_or_private_function: "public" .

    $default  reduce using rule 231 (optional_public_or_private_function)


State 109

  230 optional_public_or_private_function: "private" .

    $default  reduce using rule 230 (optional_public_or_private_function)


State 110

  234 function_declaration: optional_public_or_private_function . $@9 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 233 ($@9)

    $@9  go to state 154


State 111

  228 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 228 (global_function_declaration)


State 112

  612 class_or_struct: "struct" .

    $default  reduce using rule 612 (class_or_struct)


State 113

  611 class_or_struct: "class" .

    $default  reduce using rule 611 (class_or_struct)


State 114

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct . optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 155
    "private"  shift, and go to state 156

    $default  reduce using rule 613 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 157


State 115

  569 optional_public_or_private_variable: "public" .

    $default  reduce using rule 569 (optional_public_or_private_variable)


State 116

  568 optional_public_or_private_variable: "private" .

    $default  reduce using rule 568 (optional_public_or_private_variable)


State 117

  574 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  576           | kwd_let optional_shared optional_public_or_private_variable . $@40 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 158

    $default  reduce using rule 575 ($@40)

    $@40  go to state 159


State 118

  112 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 112 (annotation_argument)


State 119

  113 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 113 (annotation_argument)


State 120

  110 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 110 (annotation_argument)


State 121

  111 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 111 (annotation_argument)


State 122

  109 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 109 (annotation_argument)


State 123

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 160
    STRING_CHARACTER_ESC  shift, and go to state 161
    "end of the string"   shift, and go to state 162

    character_sequence  go to state 163


State 124

  115 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 164
    "false"                    shift, and go to state 165
    "integer constant"         shift, and go to state 166
    "floating point constant"  shift, and go to state 167
    "name"                     shift, and go to state 168
    "start of the string"      shift, and go to state 123

    string_constant                 go to state 169
    annotation_argument_value       go to state 170
    annotation_argument_value_list  go to state 171


State 125

  108 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 108 (annotation_argument)


State 126

  117 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 117 (annotation_argument_list)


State 127

   55 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 55 (expect_error)


State 128

   53 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 53 (expect_list)


State 129

   48 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 172


State 130

   46 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 46 (require_module_name)


State 131

   45 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 45 (require_module_name)


State 132

  588 single_alias: optional_public_or_private_alias "name" $@41 . '=' type_declaration

    '='  shift, and go to state 173


State 133

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 134

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 135

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 136

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" . optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "new line, comma"  shift, and go to state 174

    $default  reduce using rule 600 (optional_emit_commas)

    emit_commas           go to state 175
    optional_emit_commas  go to state 176


State 137

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" . optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 177


State 138

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 178


State 139

  272 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 272 (name_in_namespace)


State 140

   37 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 37 (reader_character_sequence)


State 141

   38 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 40 (expr_reader)


State 142

  130 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 130 (annotation_declaration)


State 143

  117 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  124 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 144

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration "&&" annotation_declaration .
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 127 (annotation_declaration)


State 145

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration "||" annotation_declaration .
  129                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 128 (annotation_declaration)


State 146

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  129                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 129 (annotation_declaration)


State 147

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  133 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 133 (annotation_list)


State 148

   61 emit_semis: "new line, semicolon" .

    $default  reduce using rule 61 (emit_semis)


State 149

   62 emit_semis: emit_semis . "new line, semicolon"
   64 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 181

    $default  reduce using rule 64 (optional_emit_semis)


State 150

  137 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 137 (optional_annotation_list_with_emit_semis)


State 151

  592 optional_public_or_private_enum: "public" .

    $default  reduce using rule 592 (optional_public_or_private_enum)


State 152

  591 optional_public_or_private_enum: "private" .

    $default  reduce using rule 591 (optional_public_or_private_enum)


State 153

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "name"  shift, and go to state 182

    enum_name  go to state 183


State 154

  234 function_declaration: optional_public_or_private_function $@9 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 184
    "bool"      shift, and go to state 185
    "string"    shift, and go to state 186
    "int"       shift, and go to state 187
    "int2"      shift, and go to state 188
    "int3"      shift, and go to state 189
    "int4"      shift, and go to state 190
    "uint"      shift, and go to state 191
    "uint2"     shift, and go to state 192
    "uint3"     shift, and go to state 193
    "uint4"     shift, and go to state 194
    "float"     shift, and go to state 195
    "float2"    shift, and go to state 196
    "float3"    shift, and go to state 197
    "float4"    shift, and go to state 198
    "range"     shift, and go to state 199
    "urange"    shift, and go to state 200
    "range64"   shift, and go to state 201
    "urange64"  shift, and go to state 202
    "int64"     shift, and go to state 203
    "uint64"    shift, and go to state 204
    "double"    shift, and go to state 205
    "int8"      shift, and go to state 206
    "uint8"     shift, and go to state 207
    "int16"     shift, and go to state 208
    "uint16"    shift, and go to state 209
    "++"        shift, and go to state 210
    "--"        shift, and go to state 211
    "name"      shift, and go to state 212

    function_name                go to state 213
    function_declaration_header  go to state 214


State 155

  615 optional_public_or_private_structure: "public" .

    $default  reduce using rule 615 (optional_public_or_private_structure)


State 156

  614 optional_public_or_private_structure: "private" .

    $default  reduce using rule 614 (optional_public_or_private_structure)


State 157

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure . $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 619 ($@46)

    $@46  go to state 215


State 158

  574 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 570 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 216


State 159

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 217

    $default  reduce using rule 499 (optional_field_annotation)

    metadata_argument_list     go to state 218
    optional_field_annotation  go to state 219


State 160

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 161

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 162

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 163

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 164

  101 annotation_argument_value: "true" .

    $default  reduce using rule 101 (annotation_argument_value)


State 165

  102 annotation_argument_value: "false" .

    $default  reduce using rule 102 (annotation_argument_value)


State 166

   99 annotation_argument_value: "integer constant" .

    $default  reduce using rule 99 (annotation_argument_value)


State 167

  100 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 100 (annotation_argument_value)


State 168

   98 annotation_argument_value: "name" .

    $default  reduce using rule 98 (annotation_argument_value)


State 169

   97 annotation_argument_value: string_constant .

    $default  reduce using rule 97 (annotation_argument_value)


State 170

  103 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 103 (annotation_argument_value_list)


State 171

  104 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  115 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 172

   48 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 48 (require_module)


State 173

  588 single_alias: optional_public_or_private_alias "name" $@41 '=' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 273


State 174

  598 emit_commas: "new line, comma" .

    $default  reduce using rule 598 (emit_commas)


State 175

  599 emit_commas: emit_commas . "new line, comma"
  601 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 274

    $default  reduce using rule 601 (optional_emit_commas)


State 176

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas . $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 761 ($@86)

    $@86  go to state 275


State 177

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis . $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 751 ($@78)

    $@78  go to state 276


State 178

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 756 ($@82)

    $@82  go to state 277


State 179

   38 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 180

  124 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 124 (annotation_declaration_basic)


State 181

   62 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 62 (emit_semis)


State 182

  593 enum_name: "name" .

    $default  reduce using rule 593 (enum_name)


State 183

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    ':'  shift, and go to state 278

    $default  reduce using rule 594 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 279


State 184

  144 function_name: "operator" . '!'
  145              | "operator" . '~'
  146              | "operator" . "+="
  147              | "operator" . "-="
  148              | "operator" . "*="
  149              | "operator" . "/="
  150              | "operator" . "%="
  151              | "operator" . "&="
  152              | "operator" . "|="
  153              | "operator" . "^="
  154              | "operator" . "&&="
  155              | "operator" . "||="
  156              | "operator" . "^^="
  157              | "operator" . "&&"
  158              | "operator" . "||"
  159              | "operator" . "^^"
  160              | "operator" . '+'
  161              | "operator" . '-'
  162              | "operator" . '*'
  163              | "operator" . '/'
  164              | "operator" . '%'
  165              | "operator" . '<'
  166              | "operator" . '>'
  167              | "operator" . ".."
  168              | "operator" . "=="
  169              | "operator" . "!="
  170              | "operator" . "<="
  171              | "operator" . ">="
  172              | "operator" . '&'
  173              | "operator" . '|'
  174              | "operator" . '^'
  177              | "operator" . "++"
  178              | "operator" . "--"
  179              | "operator" . "<<"
  180              | "operator" . ">>"
  181              | "operator" . "<<="
  182              | "operator" . ">>="
  183              | "operator" . "<<<"
  184              | "operator" . ">>>"
  185              | "operator" . "<<<="
  186              | "operator" . ">>>="
  187              | "operator" . '[' ']'
  188              | "operator" . "?[" ']'
  189              | "operator" . '.'
  190              | "operator" . "?."
  191              | "operator" . '.' "name"
  192              | "operator" . '.' "name" ":="
  193              | "operator" . "?." "name"
  194              | "operator" . ":="
  195              | "operator" . "delete"
  196              | "operator" . "??"
  197              | "operator" . "is"
  198              | "operator" . "as"
  199              | "operator" . "is" "name"
  200              | "operator" . "as" "name"
  201              | "operator" . '?' "as"
  202              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 280
    "as"      shift, and go to state 281
    "delete"  shift, and go to state 282
    "+="      shift, and go to state 283
    "-="      shift, and go to state 284
    "/="      shift, and go to state 285
    "*="      shift, and go to state 286
    "%="      shift, and go to state 287
    "&="      shift, and go to state 288
    "|="      shift, and go to state 289
    "^="      shift, and go to state 290
    "<<"      shift, and go to state 291
    ">>"      shift, and go to state 292
    "++"      shift, and go to state 293
    "--"      shift, and go to state 294
    "<="      shift, and go to state 295
    "<<="     shift, and go to state 296
    ">>="     shift, and go to state 297
    ">="      shift, and go to state 298
    "=="      shift, and go to state 299
    "!="      shift, and go to state 300
    "??"      shift, and go to state 301
    "?."      shift, and go to state 302
    "?["      shift, and go to state 303
    ":="      shift, and go to state 304
    "<<<"     shift, and go to state 305
    ">>>"     shift, and go to state 306
    "<<<="    shift, and go to state 307
    ">>>="    shift, and go to state 308
    "&&"      shift, and go to state 309
    "||"      shift, and go to state 310
    "^^"      shift, and go to state 311
    "&&="     shift, and go to state 312
    "||="     shift, and go to state 313
    "^^="     shift, and go to state 314
    ".."      shift, and go to state 315
    '?'       shift, and go to state 316
    '|'       shift, and go to state 317
    '^'       shift, and go to state 318
    '&'       shift, and go to state 319
    '<'       shift, and go to state 320
    '>'       shift, and go to state 321
    '-'       shift, and go to state 322
    '+'       shift, and go to state 323
    '*'       shift, and go to state 324
    '/'       shift, and go to state 325
    '%'       shift, and go to state 326
    '~'       shift, and go to state 327
    '!'       shift, and go to state 328
    '.'       shift, and go to state 329
    '['       shift, and go to state 330


State 185

  203 function_name: "bool" .

    $default  reduce using rule 203 (function_name)


State 186

  204 function_name: "string" .

    $default  reduce using rule 204 (function_name)


State 187

  205 function_name: "int" .

    $default  reduce using rule 205 (function_name)


State 188

  206 function_name: "int2" .

    $default  reduce using rule 206 (function_name)


State 189

  207 function_name: "int3" .

    $default  reduce using rule 207 (function_name)


State 190

  208 function_name: "int4" .

    $default  reduce using rule 208 (function_name)


State 191

  209 function_name: "uint" .

    $default  reduce using rule 209 (function_name)


State 192

  210 function_name: "uint2" .

    $default  reduce using rule 210 (function_name)


State 193

  211 function_name: "uint3" .

    $default  reduce using rule 211 (function_name)


State 194

  212 function_name: "uint4" .

    $default  reduce using rule 212 (function_name)


State 195

  213 function_name: "float" .

    $default  reduce using rule 213 (function_name)


State 196

  214 function_name: "float2" .

    $default  reduce using rule 214 (function_name)


State 197

  215 function_name: "float3" .

    $default  reduce using rule 215 (function_name)


State 198

  216 function_name: "float4" .

    $default  reduce using rule 216 (function_name)


State 199

  217 function_name: "range" .

    $default  reduce using rule 217 (function_name)


State 200

  218 function_name: "urange" .

    $default  reduce using rule 218 (function_name)


State 201

  219 function_name: "range64" .

    $default  reduce using rule 219 (function_name)


State 202

  220 function_name: "urange64" .

    $default  reduce using rule 220 (function_name)


State 203

  221 function_name: "int64" .

    $default  reduce using rule 221 (function_name)


State 204

  222 function_name: "uint64" .

    $default  reduce using rule 222 (function_name)


State 205

  223 function_name: "double" .

    $default  reduce using rule 223 (function_name)


State 206

  224 function_name: "int8" .

    $default  reduce using rule 224 (function_name)


State 207

  225 function_name: "uint8" .

    $default  reduce using rule 225 (function_name)


State 208

  226 function_name: "int16" .

    $default  reduce using rule 226 (function_name)


State 209

  227 function_name: "uint16" .

    $default  reduce using rule 227 (function_name)


State 210

  175 function_name: "++" . "operator"

    "operator"  shift, and go to state 331


State 211

  176 function_name: "--" . "operator"

    "operator"  shift, and go to state 332


State 212

  143 function_name: "name" .

    $default  reduce using rule 143 (function_name)


State 213

  232 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 334


State 214

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 335


State 215

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 . structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 336

    $default  reduce using rule 608 (optional_sealed)

    optional_sealed  go to state 337
    structure_name   go to state 338


State 216

  571 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  573                                 | global_variable_declaration_list . $@39 optional_field_annotation let_variable_declaration
  574 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 339

    $default  reduce using rule 572 ($@39)

    SEMICOLON  go to state 340
    $@39       go to state 341


State 217

  118 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 342


State 218

  119 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  500 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 343

    $default  reduce using rule 500 (optional_field_annotation)


State 219

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 344

    global_let_variable_name_with_pos_list  go to state 345
    global_let_variable_declaration         go to state 346


State 220

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 221

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 222

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 223

  104 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 164
    "false"                    shift, and go to state 165
    "integer constant"         shift, and go to state 166
    "floating point constant"  shift, and go to state 167
    "name"                     shift, and go to state 168
    "start of the string"      shift, and go to state 123

    string_constant            go to state 169
    annotation_argument_value  go to state 347


State 224

  115 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 115 (annotation_argument)


State 225

  690 type_declaration_no_options_no_dim: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 348


State 226

  713 type_declaration_no_options_no_dim: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 349


State 227

  716 type_declaration_no_options_no_dim: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 350


State 228

  691 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 351


State 229

  719 type_declaration_no_options_no_dim: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 352


State 230

  709 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 353


State 231

  627 basic_type_declaration: "bool" .

    $default  reduce using rule 627 (basic_type_declaration)


State 232

  647 basic_type_declaration: "void" .

    $default  reduce using rule 647 (basic_type_declaration)


State 233

  628 basic_type_declaration: "string" .

    $default  reduce using rule 628 (basic_type_declaration)


State 234

  663 auto_type_declaration: "auto" .
  664                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 354

    $default  reduce using rule 663 (auto_type_declaration)


State 235

  629 basic_type_declaration: "int" .

    $default  reduce using rule 629 (basic_type_declaration)


State 236

  633 basic_type_declaration: "int2" .

    $default  reduce using rule 633 (basic_type_declaration)


State 237

  634 basic_type_declaration: "int3" .

    $default  reduce using rule 634 (basic_type_declaration)


State 238

  635 basic_type_declaration: "int4" .

    $default  reduce using rule 635 (basic_type_declaration)


State 239

  636 basic_type_declaration: "uint" .

    $default  reduce using rule 636 (basic_type_declaration)


State 240

  653 basic_type_declaration: "bitfield" .
  673 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 355

    $default  reduce using rule 653 (basic_type_declaration)


State 241

  640 basic_type_declaration: "uint2" .

    $default  reduce using rule 640 (basic_type_declaration)


State 242

  641 basic_type_declaration: "uint3" .

    $default  reduce using rule 641 (basic_type_declaration)


State 243

  642 basic_type_declaration: "uint4" .

    $default  reduce using rule 642 (basic_type_declaration)


State 244

  643 basic_type_declaration: "float" .

    $default  reduce using rule 643 (basic_type_declaration)


State 245

  644 basic_type_declaration: "float2" .

    $default  reduce using rule 644 (basic_type_declaration)


State 246

  645 basic_type_declaration: "float3" .

    $default  reduce using rule 645 (basic_type_declaration)


State 247

  646 basic_type_declaration: "float4" .

    $default  reduce using rule 646 (basic_type_declaration)


State 248

  648 basic_type_declaration: "range" .

    $default  reduce using rule 648 (basic_type_declaration)


State 249

  649 basic_type_declaration: "urange" .

    $default  reduce using rule 649 (basic_type_declaration)


State 250

  650 basic_type_declaration: "range64" .

    $default  reduce using rule 650 (basic_type_declaration)


State 251

  651 basic_type_declaration: "urange64" .

    $default  reduce using rule 651 (basic_type_declaration)


State 252

  720 type_declaration_no_options_no_dim: "block" .
  723                                   | "block" . '<' $@61 type_declaration '>' $@62
  726                                   | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 356

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 253

  632 basic_type_declaration: "int64" .

    $default  reduce using rule 632 (basic_type_declaration)


State 254

  639 basic_type_declaration: "uint64" .

    $default  reduce using rule 639 (basic_type_declaration)


State 255

  652 basic_type_declaration: "double" .

    $default  reduce using rule 652 (basic_type_declaration)


State 256

  727 type_declaration_no_options_no_dim: "function" .
  730                                   | "function" . '<' $@65 type_declaration '>' $@66
  733                                   | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 357

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 257

  734 type_declaration_no_options_no_dim: "lambda" .
  737                                   | "lambda" . '<' $@69 type_declaration '>' $@70
  740                                   | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 358

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 258

  630 basic_type_declaration: "int8" .

    $default  reduce using rule 630 (basic_type_declaration)


State 259

  637 basic_type_declaration: "uint8" .

    $default  reduce using rule 637 (basic_type_declaration)


State 260

  631 basic_type_declaration: "int16" .

    $default  reduce using rule 631 (basic_type_declaration)


State 261

  638 basic_type_declaration: "uint16" .

    $default  reduce using rule 638 (basic_type_declaration)


State 262

  743 type_declaration_no_options_no_dim: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 359


State 263

  746 type_declaration_no_options_no_dim: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 360


State 264

  665 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 361


State 265

  692 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  694                                   | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 362


State 266

  662 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 662 (structure_type_declaration)


State 267

  684 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 684 (type_declaration_no_options_no_dim)


State 268

  687 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 687 (type_declaration_no_options_no_dim)


State 269

  685 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 270

  686 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 686 (type_declaration_no_options_no_dim)


State 271

  747 type_declaration: type_declaration_no_options .

    $default  reduce using rule 747 (type_declaration)


State 272

  682 type_declaration_no_options: type_declaration_no_options_no_dim .
  683                            | type_declaration_no_options_no_dim . dim_list
  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  696                                   | type_declaration_no_options_no_dim . "explicit"
  697                                   | type_declaration_no_options_no_dim . "const"
  698                                   | type_declaration_no_options_no_dim . '-' "const"
  699                                   | type_declaration_no_options_no_dim . '&'
  700                                   | type_declaration_no_options_no_dim . '-' '&'
  701                                   | type_declaration_no_options_no_dim . '#'
  702                                   | type_declaration_no_options_no_dim . "implicit"
  703                                   | type_declaration_no_options_no_dim . '-' '#'
  704                                   | type_declaration_no_options_no_dim . "==" "const"
  705                                   | type_declaration_no_options_no_dim . "==" '&'
  706                                   | type_declaration_no_options_no_dim . '?'
  710                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '?'         shift, and go to state 368
    '&'         shift, and go to state 369
    '-'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    $default  reduce using rule 682 (type_declaration_no_options)

    dim_list  go to state 373


State 273

  588 single_alias: optional_public_or_private_alias "name" $@41 '=' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 588 (single_alias)


State 274

  599 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 599 (emit_commas)


State 275

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 . '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    '{'  shift, and go to state 375


State 276

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 . '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    '{'  shift, and go to state 376


State 277

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 377


State 278

  595 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 378
    "uint"    shift, and go to state 379
    "int64"   shift, and go to state 380
    "uint64"  shift, and go to state 381
    "int8"    shift, and go to state 382
    "uint8"   shift, and go to state 383
    "int16"   shift, and go to state 384
    "uint16"  shift, and go to state 385

    enum_basic_type_declaration  go to state 386


State 279

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "new line, comma"  shift, and go to state 174

    $default  reduce using rule 600 (optional_emit_commas)

    emit_commas           go to state 175
    optional_emit_commas  go to state 387


State 280

  197 function_name: "operator" "is" .
  199              | "operator" "is" . "name"

    "name"  shift, and go to state 388

    $default  reduce using rule 197 (function_name)


State 281

  198 function_name: "operator" "as" .
  200              | "operator" "as" . "name"

    "name"  shift, and go to state 389

    $default  reduce using rule 198 (function_name)


State 282

  195 function_name: "operator" "delete" .

    $default  reduce using rule 195 (function_name)


State 283

  146 function_name: "operator" "+=" .

    $default  reduce using rule 146 (function_name)


State 284

  147 function_name: "operator" "-=" .

    $default  reduce using rule 147 (function_name)


State 285

  149 function_name: "operator" "/=" .

    $default  reduce using rule 149 (function_name)


State 286

  148 function_name: "operator" "*=" .

    $default  reduce using rule 148 (function_name)


State 287

  150 function_name: "operator" "%=" .

    $default  reduce using rule 150 (function_name)


State 288

  151 function_name: "operator" "&=" .

    $default  reduce using rule 151 (function_name)


State 289

  152 function_name: "operator" "|=" .

    $default  reduce using rule 152 (function_name)


State 290

  153 function_name: "operator" "^=" .

    $default  reduce using rule 153 (function_name)


State 291

  179 function_name: "operator" "<<" .

    $default  reduce using rule 179 (function_name)


State 292

  180 function_name: "operator" ">>" .

    $default  reduce using rule 180 (function_name)


State 293

  177 function_name: "operator" "++" .

    $default  reduce using rule 177 (function_name)


State 294

  178 function_name: "operator" "--" .

    $default  reduce using rule 178 (function_name)


State 295

  170 function_name: "operator" "<=" .

    $default  reduce using rule 170 (function_name)


State 296

  181 function_name: "operator" "<<=" .

    $default  reduce using rule 181 (function_name)


State 297

  182 function_name: "operator" ">>=" .

    $default  reduce using rule 182 (function_name)


State 298

  171 function_name: "operator" ">=" .

    $default  reduce using rule 171 (function_name)


State 299

  168 function_name: "operator" "==" .

    $default  reduce using rule 168 (function_name)


State 300

  169 function_name: "operator" "!=" .

    $default  reduce using rule 169 (function_name)


State 301

  196 function_name: "operator" "??" .

    $default  reduce using rule 196 (function_name)


State 302

  190 function_name: "operator" "?." .
  193              | "operator" "?." . "name"

    "name"  shift, and go to state 390

    $default  reduce using rule 190 (function_name)


State 303

  188 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 391


State 304

  194 function_name: "operator" ":=" .

    $default  reduce using rule 194 (function_name)


State 305

  183 function_name: "operator" "<<<" .

    $default  reduce using rule 183 (function_name)


State 306

  184 function_name: "operator" ">>>" .

    $default  reduce using rule 184 (function_name)


State 307

  185 function_name: "operator" "<<<=" .

    $default  reduce using rule 185 (function_name)


State 308

  186 function_name: "operator" ">>>=" .

    $default  reduce using rule 186 (function_name)


State 309

  157 function_name: "operator" "&&" .

    $default  reduce using rule 157 (function_name)


State 310

  158 function_name: "operator" "||" .

    $default  reduce using rule 158 (function_name)


State 311

  159 function_name: "operator" "^^" .

    $default  reduce using rule 159 (function_name)


State 312

  154 function_name: "operator" "&&=" .

    $default  reduce using rule 154 (function_name)


State 313

  155 function_name: "operator" "||=" .

    $default  reduce using rule 155 (function_name)


State 314

  156 function_name: "operator" "^^=" .

    $default  reduce using rule 156 (function_name)


State 315

  167 function_name: "operator" ".." .

    $default  reduce using rule 167 (function_name)


State 316

  201 function_name: "operator" '?' . "as"
  202              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 392


State 317

  173 function_name: "operator" '|' .

    $default  reduce using rule 173 (function_name)


State 318

  174 function_name: "operator" '^' .

    $default  reduce using rule 174 (function_name)


State 319

  172 function_name: "operator" '&' .

    $default  reduce using rule 172 (function_name)


State 320

  165 function_name: "operator" '<' .

    $default  reduce using rule 165 (function_name)


State 321

  166 function_name: "operator" '>' .

    $default  reduce using rule 166 (function_name)


State 322

  161 function_name: "operator" '-' .

    $default  reduce using rule 161 (function_name)


State 323

  160 function_name: "operator" '+' .

    $default  reduce using rule 160 (function_name)


State 324

  162 function_name: "operator" '*' .

    $default  reduce using rule 162 (function_name)


State 325

  163 function_name: "operator" '/' .

    $default  reduce using rule 163 (function_name)


State 326

  164 function_name: "operator" '%' .

    $default  reduce using rule 164 (function_name)


State 327

  145 function_name: "operator" '~' .

    $default  reduce using rule 145 (function_name)


State 328

  144 function_name: "operator" '!' .

    $default  reduce using rule 144 (function_name)


State 329

  189 function_name: "operator" '.' .
  191              | "operator" '.' . "name"
  192              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 393

    $default  reduce using rule 189 (function_name)


State 330

  187 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 394


State 331

  175 function_name: "++" "operator" .

    $default  reduce using rule 175 (function_name)


State 332

  176 function_name: "--" "operator" .

    $default  reduce using rule 176 (function_name)


State 333

  139 optional_function_argument_list: '(' . ')'
  140                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 395
    ')'   shift, and go to state 396
    '@'   shift, and go to state 217

    $default  reduce using rule 499 (optional_field_annotation)

    metadata_argument_list         go to state 218
    optional_field_annotation      go to state 397
    function_argument_declaration  go to state 398
    function_argument_list         go to state 399


State 334

  232 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 401


State 335

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 402
    $@12              go to state 403


State 336

  609 optional_sealed: "sealed" .

    $default  reduce using rule 609 (optional_sealed)


State 337

  610 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 404


State 338

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name . optional_emit_semis $@47 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 405


State 339

  574 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 574 (global_let)


State 340

  571 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 571 (global_variable_declaration_list)


State 341

  573 global_variable_declaration_list: global_variable_declaration_list $@39 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 217

    $default  reduce using rule 499 (optional_field_annotation)

    metadata_argument_list     go to state 218
    optional_field_annotation  go to state 406


State 342

  118 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 407


State 343

  119 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 408


State 344

  554 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 554 (global_let_variable_name_with_pos_list)


State 345

  555 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  562 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  563                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  564                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 409
    ':'  shift, and go to state 410
    '&'  shift, and go to state 411

    $default  reduce using rule 547 (optional_ref)

    optional_ref  go to state 412


State 346

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 576 (global_let)


State 347

  104 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 104 (annotation_argument_value_list)


State 348

  690 type_declaration_no_options_no_dim: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 688 ($@50)

    $@50  go to state 413


State 349

  713 type_declaration_no_options_no_dim: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 711 ($@55)

    $@55  go to state 414


State 350

  716 type_declaration_no_options_no_dim: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 714 ($@57)

    $@57  go to state 415


State 351

  691 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 481
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 352

  719 type_declaration_no_options_no_dim: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 717 ($@59)

    $@59  go to state 491


State 353

  709 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 707 ($@53)

    $@53  go to state 492


State 354

  664 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 493


State 355

  673 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 671 ($@48)

    $@48  go to state 494


State 356

  723 type_declaration_no_options_no_dim: "block" '<' . $@61 type_declaration '>' $@62
  726                                   | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 724 ($@63)
    '>'       reduce using rule 724 ($@63)
    '('       reduce using rule 724 ($@63)
    $default  reduce using rule 721 ($@61)

    $@61  go to state 495
    $@63  go to state 496


State 357

  730 type_declaration_no_options_no_dim: "function" '<' . $@65 type_declaration '>' $@66
  733                                   | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 731 ($@67)
    '>'       reduce using rule 731 ($@67)
    '('       reduce using rule 731 ($@67)
    $default  reduce using rule 728 ($@65)

    $@65  go to state 497
    $@67  go to state 498


State 358

  737 type_declaration_no_options_no_dim: "lambda" '<' . $@69 type_declaration '>' $@70
  740                                   | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 738 ($@71)
    '>'       reduce using rule 738 ($@71)
    '('       reduce using rule 738 ($@71)
    $default  reduce using rule 735 ($@69)

    $@69  go to state 499
    $@71  go to state 500


State 359

  743 type_declaration_no_options_no_dim: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 741 ($@73)

    $@73  go to state 501


State 360

  746 type_declaration_no_options_no_dim: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 744 ($@75)

    $@75  go to state 502


State 361

  665 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 503
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 362

  692 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  694                                   | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 504
    '('  shift, and go to state 505


State 363

  697 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 364

  702 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 365

  696 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 366

  704 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  705                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 506
    '&'      shift, and go to state 507


State 367

  710 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 368

  706 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 369

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 699 (type_declaration_no_options_no_dim)


State 370

  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  698                                   | type_declaration_no_options_no_dim '-' . "const"
  700                                   | type_declaration_no_options_no_dim '-' . '&'
  703                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 508
    '&'      shift, and go to state 509
    '['      shift, and go to state 510
    '#'      shift, and go to state 511


State 371

  678 dim_list: '[' . expr ']'
  679         | '[' . ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    ']'                               shift, and go to state 512
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 513
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 372

  701 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 373

  680 dim_list: dim_list . '[' expr ']'
  681         | dim_list . '[' ']'
  683 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 514

    $default  reduce using rule 683 (type_declaration_no_options)


State 374

  748 type_declaration: type_declaration '|' . type_declaration_no_options
  749                 | type_declaration '|' . '#'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265
    '#'          shift, and go to state 515

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 516
    type_declaration_no_options_no_dim  go to state 272


State 375

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' . $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 762 ($@87)

    $@87  go to state 517


State 376

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' . $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 752 ($@79)

    $@79  go to state 518


State 377

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 757 ($@83)

    $@83  go to state 519


State 378

  654 enum_basic_type_declaration: "int" .

    $default  reduce using rule 654 (enum_basic_type_declaration)


State 379

  657 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 657 (enum_basic_type_declaration)


State 380

  660 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 381

  661 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 382

  655 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 655 (enum_basic_type_declaration)


State 383

  658 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 384

  656 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 656 (enum_basic_type_declaration)


State 385

  659 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 386

  595 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 595 (optional_enum_basic_type_declaration)


State 387

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@43 enum_list optional_commas $@44 '}'

    '{'  shift, and go to state 520


State 388

  199 function_name: "operator" "is" "name" .

    $default  reduce using rule 199 (function_name)


State 389

  200 function_name: "operator" "as" "name" .

    $default  reduce using rule 200 (function_name)


State 390

  193 function_name: "operator" "?." "name" .

    $default  reduce using rule 193 (function_name)


State 391

  188 function_name: "operator" "?[" ']' .

    $default  reduce using rule 188 (function_name)


State 392

  201 function_name: "operator" '?' "as" .
  202              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 521

    $default  reduce using rule 201 (function_name)


State 393

  191 function_name: "operator" '.' "name" .
  192              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 522

    $default  reduce using rule 191 (function_name)


State 394

  187 function_name: "operator" '[' ']' .

    $default  reduce using rule 187 (function_name)


State 395

  521 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 523


State 396

  139 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 139 (optional_function_argument_list)


State 397

  520 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 524
    "var"  shift, and go to state 525

    $default  reduce using rule 296 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 526


State 398

  522 function_argument_list: function_argument_declaration .

    $default  reduce using rule 522 (function_argument_list)


State 399

  140 optional_function_argument_list: '(' function_argument_list . ')'
  523 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 527
    ';'  shift, and go to state 528


State 400

  142 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 529


State 401

  232 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 232 (function_declaration_header)


State 402

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 234 (function_declaration)


State 403

  241 expression_block: $@12 . '{' expressions $@13 '}' expression_block_finally

    '{'  shift, and go to state 530


State 404

  610 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 531

    $default  reduce using rule 606 (optional_structure_parent)

    optional_structure_parent  go to state 532


State 405

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 620 ($@47)

    $@47  go to state 533


State 406

  573 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 534
    "name"  shift, and go to state 535

    let_variable_name_with_pos_list  go to state 536
    let_variable_declaration         go to state 537


State 407

  118 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 118 (metadata_argument_list)


State 408

  119 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 538


State 409

  555 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 539


State 410

  562 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  563                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 540
    type_declaration_no_options_no_dim  go to state 272


State 411

  548 optional_ref: '&' .

    $default  reduce using rule 548 (optional_ref)


State 412

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 541
    ":="  shift, and go to state 542
    '='   shift, and go to state 543

    copy_or_move_or_clone  go to state 544


State 413

  690 type_declaration_no_options_no_dim: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 545


State 414

  713 type_declaration_no_options_no_dim: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 546


State 415

  716 type_declaration_no_options_no_dim: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    table_type_pair                     go to state 547
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 548


State 416

  790 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 549


State 417

  793 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 550


State 418

  404 expr: "true" .

    $default  reduce using rule 404 (expr)


State 419

  405 expr: "false" .

    $default  reduce using rule 405 (expr)


State 420

  280 expr_new: "new" . new_type_declaration
  281         | "new" . new_type_declaration '(' use_initializer ')'
  282         | "new" . new_type_declaration '(' expr_list ')'
  283         | "new" . new_type_declaration '(' make_struct_single ')'
  284         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  285         | "new" . make_decl

    "struct"       shift, and go to state 416
    "class"        shift, and go to state 417
    "array"        shift, and go to state 423
    "table"        shift, and go to state 425
    "fixed_array"  shift, and go to state 432
    "default"      shift, and go to state 433
    "tuple"        shift, and go to state 435
    "variant"      shift, and go to state 436
    "::"           shift, and go to state 58
    "name"         shift, and go to state 59
    '<'            shift, and go to state 551
    '['            shift, and go to state 460
    '{'            shift, and go to state 464

    name_in_namespace           go to state 266
    new_type_declaration        go to state 552
    structure_type_declaration  go to state 553
    make_decl                   go to state 554
    make_struct_decl            go to state 486
    make_tuple_call             go to state 487
    make_dim_decl               go to state 488
    make_table_decl             go to state 489
    array_comprehension         go to state 490


State 421

  320 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  321               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  322               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 555


State 422

  319 expr_type_decl: "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 556


State 423

  809 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  812              | "array" . "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  815              | "array" . "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  816              | "array" . '(' expr_list optional_comma ')'
  819              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 557
    "tuple"    shift, and go to state 558
    "variant"  shift, and go to state 559
    '<'        shift, and go to state 560
    '('        shift, and go to state 561


State 424

  398 expr: "null" .

    $default  reduce using rule 398 (expr)


State 425

  827 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  828                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  829                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 562
    '('  shift, and go to state 563


State 426

  448 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 564


State 427

  310 expr_cast: "cast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 565


State 428

  313 expr_cast: "upcast" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 566


State 429

  449 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 567


State 430

  316 expr_cast: "reinterpret" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 568


State 431

  479 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 569


State 432

  820 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  823              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 570
    '('  shift, and go to state 571


State 433

  799 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 572


State 434

  653 basic_type_declaration: "bitfield" .

    $default  reduce using rule 653 (basic_type_declaration)


State 435

  802 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  805                | "tuple" . '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 573
    '('  shift, and go to state 574


State 436

  796 make_struct_decl: "variant" . '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    '<'  shift, and go to state 575


State 437

  480 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  481               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  482               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 576


State 438

  434 expr: "++" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 577
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 439

  435 expr: "--" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 578
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 440

  483 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 579


State 441

  484 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 580


State 442

  485 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 581


State 443

  486 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 582


State 444

  487 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 583


State 445

  489 expr_mtag: "$c" . '(' expr ')' '(' ')'
  490          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 584


State 446

  488 expr_mtag: "..." .

    $default  reduce using rule 488 (expr_mtag)


State 447

  343 expr_numeric_const: "integer constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 448

  345 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 449

  344 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 450

  346 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 451

  347 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 452

  348 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 453

  349 expr_numeric_const: "double constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 454

   36 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 33 (string_builder_body)

    string_builder_body  go to state 585


State 455

  411 expr: '-' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 586
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 456

  410 expr: '+' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 587
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 457

  447 expr: '*' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 588
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 458

  409 expr: '~' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 589
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 459

  408 expr: '!' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 590
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 460

  806 make_dim_decl: '[' . expr_list optional_comma ']'
  834 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  835                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 591
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "iterator"                        shift, and go to state 592
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 593
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 461

  438 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 595
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 462

  328 block_or_lambda: '$' .

    $default  reduce using rule 328 (block_or_lambda)


State 463

  329 block_or_lambda: '@' .
  330                | '@' . '@'
  375 func_addr_expr: '@' . '@' func_addr_name
  378               | '@' . '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  381               | '@' . '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  498 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 596

    $default  reduce using rule 329 (block_or_lambda)


State 464

  826 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  836 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 598
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 599
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    expr_map_tuple_list     go to state 600
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 465

  402 expr: string_builder .

    $default  reduce using rule 402 (expr)


State 466

  401 expr: expr_reader .

    $default  reduce using rule 401 (expr)


State 467

  478 expr: expr_call_pipe .

    $default  reduce using rule 478 (expr)


State 468

  369 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  370                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  391 expr_call: name_in_namespace . '(' ')'
  392          | name_in_namespace . '(' "uninitialized" ')'
  393          | name_in_namespace . '(' make_struct_single ')'
  394          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  395          | name_in_namespace . '(' expr_list ')'
  399 expr: name_in_namespace .

    '('  shift, and go to state 601

    $default  reduce using rule 399 (expr)


State 469

  471 expr: expr_new .

    $default  reduce using rule 471 (expr)


State 470

  470 expr: expr_cast .

    $default  reduce using rule 470 (expr)


State 471

  469 expr: expr_type_decl .

    $default  reduce using rule 469 (expr)


State 472

  468 expr: expr_type_info .

    $default  reduce using rule 468 (expr)


State 473

  340 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 602

    $default  reduce using rule 134 (optional_annotation_list)

    optional_annotation_list  go to state 603


State 474

  474 expr: expr_full_block .

    $default  reduce using rule 474 (expr)


State 475

  400 expr: expr_numeric_const .

    $default  reduce using rule 400 (expr)


State 476

  473 expr: expr_named_call .

    $default  reduce using rule 473 (expr)


State 477

  472 expr: expr_method_call .

    $default  reduce using rule 472 (expr)


State 478

  445 expr: func_addr_expr .

    $default  reduce using rule 445 (expr)


State 479

  406 expr: expr_field .

    $default  reduce using rule 406 (expr)


State 480

  242 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  446 expr: expr_call .

    '$'  shift, and go to state 462
    '@'  shift, and go to state 604
    '{'  shift, and go to state 605

    $default  reduce using rule 446 (expr)

    block_or_lambda                go to state 606
    expr_full_block_assumed_piped  go to state 607


State 481

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  691 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 643


State 482

  450 expr: expr_generator .

    $default  reduce using rule 450 (expr)


State 483

  407 expr: expr_mtag .

    $default  reduce using rule 407 (expr)


State 484

  396 expr_call: basic_type_declaration . '(' ')'
  397          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 644


State 485

  403 expr: make_decl .

    $default  reduce using rule 403 (expr)


State 486

  765 make_decl: make_struct_decl .

    $default  reduce using rule 765 (make_decl)


State 487

  769 make_decl: make_tuple_call .

    $default  reduce using rule 769 (make_decl)


State 488

  766 make_decl: make_dim_decl .

    $default  reduce using rule 766 (make_decl)


State 489

  767 make_decl: make_table_decl .

    $default  reduce using rule 767 (make_decl)


State 490

  768 make_decl: array_comprehension .

    $default  reduce using rule 768 (make_decl)


State 491

  719 type_declaration_no_options_no_dim: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 645


State 492

  709 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 646


State 493

  664 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 647


State 494

  673 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 648

    bitfield_bits  go to state 649


State 495

  723 type_declaration_no_options_no_dim: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 650


State 496

  726 type_declaration_no_options_no_dim: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 651


State 497

  730 type_declaration_no_options_no_dim: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 652


State 498

  733 type_declaration_no_options_no_dim: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 653


State 499

  737 type_declaration_no_options_no_dim: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 654


State 500

  740 type_declaration_no_options_no_dim: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 655


State 501

  743 type_declaration_no_options_no_dim: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 656
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    tuple_type                          go to state 657
    tuple_type_list                     go to state 658
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 659


State 502

  746 type_declaration_no_options_no_dim: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 660

    variant_type       go to state 661
    variant_type_list  go to state 662


State 503

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  665 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 663


State 504

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 693 ($@52)

    $@52  go to state 664


State 505

  692 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 265 (optional_expr_list)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    optional_expr_list      go to state 665
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 666
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 506

  704 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 507

  705 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 508

  698 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 509

  700 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 510

  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 667


State 511

  703 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 703 (type_declaration_no_options_no_dim)


State 512

  679 dim_list: '[' ']' .

    $default  reduce using rule 679 (dim_list)


State 513

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  678 dim_list: '[' expr . ']'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ']'    shift, and go to state 668


State 514

  680 dim_list: dim_list '[' . expr ']'
  681         | dim_list '[' . ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    ']'                               shift, and go to state 669
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 670
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 515

  749 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 749 (type_declaration)


State 516

  748 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 748 (type_declaration)


State 517

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 . bitfield_alias_bits optional_commas $@88 '}'

    "name"  shift, and go to state 671

    $default  reduce using rule 668 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 672


State 518

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 . tuple_alias_type_list optional_semis $@80 '}'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 656
    '$'          shift, and go to state 265

    $default  reduce using rule 528 (tuple_alias_type_list)

    name_in_namespace                   go to state 266
    tuple_type                          go to state 673
    tuple_alias_type_list               go to state 674
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 659


State 519

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . variant_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 660

    $default  reduce using rule 534 (variant_alias_type_list)

    variant_type             go to state 675
    variant_alias_type_list  go to state 676


State 520

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@43 enum_list optional_commas $@44 '}'

    $default  reduce using rule 603 ($@43)

    $@43  go to state 677


State 521

  202 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 202 (function_name)


State 522

  192 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 192 (function_name)


State 523

  521 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 678
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 524

  294 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 294 (kwd_let_var_or_nothing)


State 525

  295 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 295 (kwd_let_var_or_nothing)


State 526

  520 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_declaration         go to state 681
    variable_name_with_pos_list  go to state 682


State 527

  140 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 140 (optional_function_argument_list)


State 528

  523 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 395
    '@'   shift, and go to state 217

    $default  reduce using rule 499 (optional_field_annotation)

    metadata_argument_list         go to state 218
    optional_field_annotation      go to state 397
    function_argument_declaration  go to state 683


State 529

  142 optional_function_type: ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 142 (optional_function_type)


State 530

  241 expression_block: $@12 '{' . expressions $@13 '}' expression_block_finally

    $default  reduce using rule 262 (expressions)

    expressions  go to state 684


State 531

  607 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 685


State 532

  610 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 610 (structure_name)


State 533

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 686
    '{'  shift, and go to state 687

    optional_struct_variable_declaration_list  go to state 688


State 534

  550 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 689


State 535

  549 let_variable_name_with_pos_list: "name" .
  551                                | "name" . "aka" "name"

    "aka"  shift, and go to state 690

    $default  reduce using rule 549 (let_variable_name_with_pos_list)


State 536

  552 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  553                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  559 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  560                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  561                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 691
    ':'  shift, and go to state 692
    '&'  shift, and go to state 411

    $default  reduce using rule 547 (optional_ref)

    optional_ref  go to state 693


State 537

  573 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 573 (global_variable_declaration_list)


State 538

  119 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 119 (metadata_argument_list)


State 539

  555 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 555 (global_let_variable_name_with_pos_list)


State 540

  562 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  563                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"                   shift, and go to state 541
    ":="                   shift, and go to state 542
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 543
    ';'                    shift, and go to state 16

    SEMICOLON              go to state 694
    copy_or_move_or_clone  go to state 695


State 541

  545 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 545 (copy_or_move_or_clone)


State 542

  546 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 546 (copy_or_move_or_clone)


State 543

  544 copy_or_move_or_clone: '=' .

    $default  reduce using rule 544 (copy_or_move_or_clone)


State 544

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 696
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 545

  690 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration . '>' $@51
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 697


State 546

  713 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration . '>' $@56
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 698


State 547

  716 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 699


State 548

  676 table_type_pair: type_declaration .
  677                | type_declaration . c_or_s type_declaration
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 700
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 701
    '|'                    shift, and go to state 374
    ';'                    shift, and go to state 16

    $default  reduce using rule 676 (table_type_pair)

    COMMA      go to state 702
    SEMICOLON  go to state 703
    c_or_s     go to state 704


State 549

  790 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 788 ($@89)

    $@89  go to state 705


State 550

  793 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 791 ($@91)

    $@91  go to state 706


State 551

  278 new_type_declaration: '<' . $@14 type_declaration '>' $@15

    $default  reduce using rule 276 ($@14)

    $@14  go to state 707


State 552

  280 expr_new: "new" new_type_declaration .
  281         | "new" new_type_declaration . '(' use_initializer ')'
  282         | "new" new_type_declaration . '(' expr_list ')'
  283         | "new" new_type_declaration . '(' make_struct_single ')'
  284         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 708

    $default  reduce using rule 280 (expr_new)


State 553

  279 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 279 (new_type_declaration)


State 554

  285 expr_new: "new" make_decl .

    $default  reduce using rule 285 (expr_new)


State 555

  320 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  321               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 709
    '('  shift, and go to state 710


State 556

  319 expr_type_decl: "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 317 ($@22)

    $@22  go to state 711


State 557

  809 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 712


State 558

  812 make_dim_decl: "array" "tuple" . '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 713


State 559

  815 make_dim_decl: "array" "variant" . '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 714


State 560

  819 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 817 ($@105)

    $@105  go to state 715


State 561

  816 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 716
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 562

  828 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  829                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 717
    type_declaration_no_options_no_dim  go to state 272


State 563

  827 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 598
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 599
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    expr_map_tuple_list     go to state 718
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 564

  448 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 719
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 565

  310 expr_cast: "cast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 308 ($@16)

    $@16  go to state 720


State 566

  313 expr_cast: "upcast" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 311 ($@18)

    $@18  go to state 721


State 567

  449 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 722
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 568

  316 expr_cast: "reinterpret" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 314 ($@20)

    $@20  go to state 723


State 569

  479 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 724
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 570

  823 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 821 ($@107)

    $@107  go to state 725


State 571

  820 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 726
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 572

  799 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 797 ($@95)

    $@95  go to state 727


State 573

  805 make_tuple_call: "tuple" '<' . $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 803 ($@97)

    $@97  go to state 728


State 574

  802 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 729
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 575

  796 make_struct_decl: "variant" '<' . $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    $default  reduce using rule 794 ($@93)

    $@93  go to state 730


State 576

  480 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  481               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  482               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 731
    type_declaration_no_options_no_dim  go to state 272


State 577

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  434     | "++" expr .
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 434 (expr)


State 578

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  435     | "--" expr .
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 435 (expr)


State 579

  483 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 732
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 580

  484 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 733
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 581

  485 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 734
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 582

  486 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 735
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 583

  487 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 736
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 584

  489 expr_mtag: "$c" '(' . expr ')' '(' ')'
  490          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 737
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 585

   34 string_builder_body: string_builder_body . character_sequence
   35                    | string_builder_body . "{" expr "}"
   36 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 160
    STRING_CHARACTER_ESC  shift, and go to state 161
    "end of the string"   shift, and go to state 738
    "{"                   shift, and go to state 739

    character_sequence  go to state 740


State 586

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  411 expr: '-' expr .
  412     | expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 411 (expr)


State 587

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  410 expr: '+' expr .
  412     | expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 410 (expr)


State 588

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  447     | '*' expr .
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 447 (expr)


State 589

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  409 expr: '~' expr .
  412     | expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 409 (expr)


State 590

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  408 expr: '!' expr .
  412     | expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 408 (expr)


State 591

  834 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 741


State 592

  835 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 742


State 593

  324 expr_list: expr_list . ',' expr
  806 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 744


State 594

  323 expr_list: expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 323 (expr_list)


State 595

  324 expr_list: expr_list . ',' expr
  438 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 745


State 596

  330 block_or_lambda: '@' '@' .
  375 func_addr_expr: '@' '@' . func_addr_name
  378               | '@' '@' . '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  381               | '@' '@' . '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  498 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 746
    "$c"    shift, and go to state 747
    "name"  shift, and go to state 59
    '<'     shift, and go to state 748

    $default  reduce using rule 330 (block_or_lambda)

    name_in_namespace  go to state 749
    func_addr_name     go to state 750


State 597

  836 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 751


State 598

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  800 make_map_tuple: expr . "=>" expr
  801               | expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "=>"   shift, and go to state 752
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 801 (make_map_tuple)


State 599

  824 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 824 (expr_map_tuple_list)


State 600

  825 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  826 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 753

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 754


State 601

  369 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  370                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  391 expr_call: name_in_namespace '(' . ')'
  392          | name_in_namespace '(' . "uninitialized" ')'
  393          | name_in_namespace '(' . make_struct_single ')'
  394          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  395          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "uninitialized"                   shift, and go to state 755
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 756
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 757
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 758
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 759
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 760
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 761
    make_struct_single      go to state 762
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 602

  135 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 763
    name_in_namespace             go to state 70


State 603

  340 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 764

    $default  reduce using rule 338 (optional_capture_list)

    optional_capture_list  go to state 765


State 604

  329 block_or_lambda: '@' .
  330                | '@' . '@'

    '@'  shift, and go to state 766

    $default  reduce using rule 329 (block_or_lambda)


State 605

  342 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 262 (expressions)

    expressions  go to state 767


State 606

  341 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 602

    $default  reduce using rule 134 (optional_annotation_list)

    optional_annotation_list  go to state 768


State 607

  242 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 242 (expr_call_pipe)


State 608

  455 expr: expr "is" . "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr "is" . basic_type_declaration
  457     | expr "is" . "name"
  497 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 769
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 770
    "name"      shift, and go to state 771

    basic_type_declaration  go to state 772


State 609

  458 expr: expr "as" . "name"
  461     | expr "as" . "type" '<' $@32 type_declaration '>' $@33
  462     | expr "as" . basic_type_declaration
  495 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 773
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 774
    "name"      shift, and go to state 775

    basic_type_declaration  go to state 776


State 610

  412 expr: expr "<<" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 777
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 611

  413 expr: expr ">>" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 778
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 612

  436 expr: expr "++" .

    $default  reduce using rule 436 (expr)


State 613

  437 expr: expr "--" .

    $default  reduce using rule 437 (expr)


State 614

  425 expr: expr "<=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 779
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 615

  426 expr: expr ">=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 780
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 616

  423 expr: expr "==" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 781
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 617

  424 expr: expr "!=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 782
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 618

  371 expr_method_call: expr "->" . "name" '(' ')'
  372                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 783


State 619

  451 expr: expr "??" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 784
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 620

  443 expr: expr "?." . "name"
  492 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 785
    "name"  shift, and go to state 786


State 621

  441 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 787
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 622

  475 expr: expr "<|" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 788
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 623

  476 expr: expr "|>" . expr
  477     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 789
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 790
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 624

  414 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 791
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 625

  415 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 792
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 626

  430 expr: expr "&&" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 793
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 627

  431 expr: expr "||" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 794
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 628

  432 expr: expr "^^" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 795
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 629

  433 expr: expr ".." . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 796
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 630

  452 expr: expr '?' . expr ':' expr
  463     | expr '?' . "as" "name"
  466     | expr '?' . "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr '?' . "as" basic_type_declaration
  496 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "as"                              shift, and go to state 797
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 798
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 631

  428 expr: expr '|' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 799
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 632

  429 expr: expr '^' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 800
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 633

  427 expr: expr '&' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 801
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 634

  421 expr: expr '<' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 802
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 635

  422 expr: expr '>' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 803
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 636

  417 expr: expr '-' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 804
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 637

  416 expr: expr '+' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 805
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 638

  418 expr: expr '*' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 806
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 639

  419 expr: expr '/' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 807
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 640

  420 expr: expr '%' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 808
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 641

  382 expr_field: expr '.' . "name"
  383           | expr '.' . '.' "name"
  384           | expr '.' . "name" '(' ')'
  385           | expr '.' . "name" '(' expr_list ')'
  386           | expr '.' . basic_type_declaration '(' ')'
  387           | expr '.' . basic_type_declaration '(' expr_list ')'
  390           | expr '.' . $@28 error $@29
  440 expr: expr '.' . '[' expr ']'
  442     | expr '.' . "?[" expr ']'
  444     | expr '.' . "?." "name"
  491 expr_mtag: expr '.' . "$f" '(' expr ')'
  493          | expr '.' . '.' "$f" '(' expr ')'
  494          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "?."        shift, and go to state 809
    "?["        shift, and go to state 810
    "$f"        shift, and go to state 811
    "name"      shift, and go to state 812
    '.'         shift, and go to state 813
    '['         shift, and go to state 814

    $default  reduce using rule 388 ($@28)

    $@28                    go to state 815
    basic_type_declaration  go to state 816


State 642

  439 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 817
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 643

  691 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 691 (type_declaration_no_options_no_dim)


State 644

  396 expr_call: basic_type_declaration '(' . ')'
  397          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 818
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 819
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 645

  719 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration . '>' $@60
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 820


State 646

  709 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 821


State 647

  664 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 664 (auto_type_declaration)


State 648

  666 bitfield_bits: "name" .

    $default  reduce using rule 666 (bitfield_bits)


State 649

  667 bitfield_bits: bitfield_bits . ';' "name"
  673 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    '>'  shift, and go to state 822
    ';'  shift, and go to state 823


State 650

  723 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration . '>' $@62
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 824


State 651

  726 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 825


State 652

  730 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration . '>' $@66
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 826


State 653

  733 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 827


State 654

  737 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration . '>' $@70
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 828


State 655

  740 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 829


State 656

  271 name_in_namespace: "name" .
  272                  | "name" . "::" "name"
  525 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 830

    $default  reduce using rule 271 (name_in_namespace)


State 657

  526 tuple_type_list: tuple_type .

    $default  reduce using rule 526 (tuple_type_list)


State 658

  527 tuple_type_list: tuple_type_list . c_or_s tuple_type
  743 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "new line, comma"      shift, and go to state 700
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 701
    '>'                    shift, and go to state 831
    ';'                    shift, and go to state 16

    COMMA      go to state 702
    SEMICOLON  go to state 703
    c_or_s     go to state 832


State 659

  524 tuple_type: type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 524 (tuple_type)


State 660

  531 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 833


State 661

  532 variant_type_list: variant_type .

    $default  reduce using rule 532 (variant_type_list)


State 662

  533 variant_type_list: variant_type_list . c_or_s variant_type
  746 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list . '>' $@76

    "new line, comma"      shift, and go to state 700
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 701
    '>'                    shift, and go to state 834
    ';'                    shift, and go to state 16

    COMMA      go to state 702
    SEMICOLON  go to state 703
    c_or_s     go to state 835


State 663

  665 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 665 (auto_type_declaration)


State 664

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    type_declaration_no_options_list    go to state 836
    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 837


State 665

  692 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 838


State 666

  266 optional_expr_list: expr_list . optional_comma
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 839


State 667

  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 668

  678 dim_list: '[' expr ']' .

    $default  reduce using rule 678 (dim_list)


State 669

  681 dim_list: dim_list '[' ']' .

    $default  reduce using rule 681 (dim_list)


State 670

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  680 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ']'    shift, and go to state 840


State 671

  669 bitfield_alias_bits: "name" .

    $default  reduce using rule 669 (bitfield_alias_bits)


State 672

  670 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits . optional_commas $@88 '}'

    "new line, comma"  shift, and go to state 700
    ','                shift, and go to state 701

    $default  reduce using rule 596 (optional_commas)

    COMMA            go to state 841
    commas           go to state 842
    optional_commas  go to state 843


State 673

  529 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 529 (tuple_alias_type_list)


State 674

  530 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list . optional_semis $@80 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 844
    semis           go to state 845
    optional_semis  go to state 846


State 675

  535 variant_alias_type_list: variant_type .

    $default  reduce using rule 535 (variant_alias_type_list)


State 676

  536 variant_alias_type_list: variant_alias_type_list . semis variant_type
  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 844
    semis           go to state 847
    optional_semis  go to state 848


State 677

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 . enum_list optional_commas $@44 '}'

    "name"  shift, and go to state 849

    $default  reduce using rule 581 (enum_list)

    enum_expression  go to state 850
    enum_list        go to state 851


State 678

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  521 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 852


State 679

  623 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 853


State 680

  622 variable_name_with_pos_list: "name" .
  624                            | "name" . "aka" "name"

    "aka"  shift, and go to state 854

    $default  reduce using rule 622 (variable_name_with_pos_list)


State 681

  520 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 520 (function_argument_declaration)


State 682

  539 variable_declaration: variable_name_with_pos_list .
  540                     | variable_name_with_pos_list . '&'
  541                     | variable_name_with_pos_list . ':' type_declaration
  542                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  543                     | variable_name_with_pos_list . copy_or_move expr
  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 855
    ','   shift, and go to state 856
    '='   shift, and go to state 857
    ':'   shift, and go to state 858
    '&'   shift, and go to state 859

    $default  reduce using rule 539 (variable_declaration)

    copy_or_move  go to state 860


State 683

  523 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 523 (function_argument_list)


State 684

  241 expression_block: $@12 '{' expressions . $@13 '}' expression_block_finally
  263 expressions: expressions . expression_any
  264            | expressions . error

    error                             shift, and go to state 861
    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 862
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 863
    "try"                             shift, and go to state 864
    "table"                           shift, and go to state 425
    "delete"                          shift, and go to state 865
    "deref"                           shift, and go to state 426
    "assume"                          shift, and go to state 866
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 867
    "pass"                            shift, and go to state 868
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 869
    "goto"                            shift, and go to state 870
    "unsafe"                          shift, and go to state 871
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 872
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 464

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 240 ($@13)

    SEMICOLON                         go to state 873
    string_builder                    go to state 465
    expr_reader                       go to state 466
    expression_label                  go to state 874
    expression_goto                   go to state 875
    expression_if_one_liner           go to state 876
    expression_if_then_else           go to state 877
    $@5                               go to state 878
    expression_if_then_else_oneliner  go to state 879
    expression_for_loop               go to state 880
    $@6                               go to state 881
    expression_unsafe                 go to state 882
    expression_while_loop             go to state 883
    $@7                               go to state 884
    expression_with                   go to state 885
    $@8                               go to state 886
    expression_with_alias             go to state 887
    $@13                              go to state 888
    expr_call_pipe                    go to state 467
    expression_any                    go to state 889
    name_in_namespace                 go to state 468
    expression_delete                 go to state 890
    expr_new                          go to state 469
    expression_break                  go to state 891
    expression_continue               go to state 892
    expression_return                 go to state 893
    expression_yield                  go to state 894
    expression_try_catch              go to state 895
    kwd_let                           go to state 896
    expression_let                    go to state 897
    expr_cast                         go to state 470
    expr_type_decl                    go to state 471
    expr_type_info                    go to state 472
    block_or_lambda                   go to state 473
    expr_full_block                   go to state 474
    expr_numeric_const                go to state 475
    expr_assign                       go to state 898
    expr_named_call                   go to state 476
    expr_method_call                  go to state 477
    func_addr_expr                    go to state 478
    expr_field                        go to state 479
    expr_call                         go to state 480
    expr                              go to state 899
    expr_generator                    go to state 482
    expr_mtag                         go to state 483
    basic_type_declaration            go to state 484
    make_decl                         go to state 485
    make_struct_decl                  go to state 486
    make_tuple_call                   go to state 487
    make_dim_decl                     go to state 488
    make_table_decl                   go to state 489
    array_comprehension               go to state 490


State 685

  607 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 607 (optional_structure_parent)


State 686

  616 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 616 (optional_struct_variable_declaration_list)


State 687

  617 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 512 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 900


State 688

  621 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 621 (structure_declaration)


State 689

  550 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 901
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 690

  551 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 902


State 691

  552 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  553                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 903


State 692

  559 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  560                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 904
    type_declaration_no_options_no_dim  go to state 272


State 693

  561 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 541
    ":="  shift, and go to state 542
    '='   shift, and go to state 543

    copy_or_move_or_clone  go to state 905


State 694

  562 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 562 (global_let_variable_declaration)


State 695

  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 906
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 696

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  564 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 608
    "as"                   shift, and go to state 609
    "<<"                   shift, and go to state 610
    ">>"                   shift, and go to state 611
    "++"                   shift, and go to state 612
    "--"                   shift, and go to state 613
    "<="                   shift, and go to state 614
    ">="                   shift, and go to state 615
    "=="                   shift, and go to state 616
    "!="                   shift, and go to state 617
    "->"                   shift, and go to state 618
    "??"                   shift, and go to state 619
    "?."                   shift, and go to state 620
    "?["                   shift, and go to state 621
    "<|"                   shift, and go to state 622
    "|>"                   shift, and go to state 623
    "<<<"                  shift, and go to state 624
    ">>>"                  shift, and go to state 625
    "&&"                   shift, and go to state 626
    "||"                   shift, and go to state 627
    "^^"                   shift, and go to state 628
    ".."                   shift, and go to state 629
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 630
    '|'                    shift, and go to state 631
    '^'                    shift, and go to state 632
    '&'                    shift, and go to state 633
    '<'                    shift, and go to state 634
    '>'                    shift, and go to state 635
    '-'                    shift, and go to state 636
    '+'                    shift, and go to state 637
    '*'                    shift, and go to state 638
    '/'                    shift, and go to state 639
    '%'                    shift, and go to state 640
    '.'                    shift, and go to state 641
    '['                    shift, and go to state 642
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 907


State 697

  690 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 689 ($@51)

    $@51  go to state 908


State 698

  713 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 712 ($@56)

    $@56  go to state 909


State 699

  716 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 715 ($@58)

    $@58  go to state 910


State 700

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 701

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 702

  674 c_or_s: COMMA .

    $default  reduce using rule 674 (c_or_s)


State 703

  675 c_or_s: SEMICOLON .

    $default  reduce using rule 675 (c_or_s)


State 704

  677 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 911


State 705

  790 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 912
    type_declaration_no_options_no_dim  go to state 272


State 706

  793 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 913
    type_declaration_no_options_no_dim  go to state 272


State 707

  278 new_type_declaration: '<' $@14 . type_declaration '>' $@15

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 914


State 708

  281 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  282         | "new" new_type_declaration '(' . expr_list ')'
  283         | "new" new_type_declaration '(' . make_struct_single ')'
  284         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "uninitialized"                   shift, and go to state 915
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 756
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 757
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 786 (use_initializer)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 916
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 761
    make_struct_single      go to state 917
    use_initializer         go to state 918
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 709

  321 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 919


State 710

  320 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 920
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 711

  319 expr_type_decl: "type" '<' $@22 . type_declaration '>' $@23

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 921


State 712

  809 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 807 ($@99)

    $@99  go to state 922


State 713

  812 make_dim_decl: "array" "tuple" '<' . $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 810 ($@101)

    $@101  go to state 923


State 714

  815 make_dim_decl: "array" "variant" '<' . $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 813 ($@103)

    $@103  go to state 924


State 715

  819 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 925
    type_declaration_no_options_no_dim  go to state 272


State 716

  324 expr_list: expr_list . ',' expr
  816 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 926


State 717

  828 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  829                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "new line, comma"      shift, and go to state 700
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 701
    '>'                    shift, and go to state 927
    ';'                    shift, and go to state 16

    COMMA      go to state 702
    SEMICOLON  go to state 703
    c_or_s     go to state 928


State 718

  825 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  827 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 753

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 929


State 719

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  448     | "deref" '(' expr . ')'
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 930


State 720

  310 expr_cast: "cast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 931
    type_declaration_no_options_no_dim  go to state 272


State 721

  313 expr_cast: "upcast" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 932
    type_declaration_no_options_no_dim  go to state 272


State 722

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  449     | "addr" '(' expr . ')'
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 933


State 723

  316 expr_cast: "reinterpret" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 934
    type_declaration_no_options_no_dim  go to state 272


State 724

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  479     | "unsafe" '(' expr . ')'
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 935


State 725

  823 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 936
    type_declaration_no_options_no_dim  go to state 272


State 726

  324 expr_list: expr_list . ',' expr
  820 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 937


State 727

  799 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 938
    type_declaration_no_options_no_dim  go to state 272


State 728

  805 make_tuple_call: "tuple" '<' $@97 . type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 939
    type_declaration_no_options_no_dim  go to state 272


State 729

  324 expr_list: expr_list . ',' expr
  802 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 940


State 730

  796 make_struct_decl: "variant" '<' $@93 . type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 941
    type_declaration_no_options_no_dim  go to state 272


State 731

  480 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  481               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  482               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block

    '>'  shift, and go to state 942


State 732

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  483 expr_mtag: "$$" '(' expr . ')'
  491          | expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 943


State 733

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  484 expr_mtag: "$i" '(' expr . ')'
  491          | expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 944


State 734

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  485 expr_mtag: "$v" '(' expr . ')'
  491          | expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 945


State 735

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  486 expr_mtag: "$b" '(' expr . ')'
  491          | expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 946


State 736

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  487 expr_mtag: "$a" '(' expr . ')'
  491          | expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 947


State 737

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  489 expr_mtag: "$c" '(' expr . ')' '(' ')'
  490          | "$c" '(' expr . ')' '(' expr_list ')'
  491          | expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 948


State 738

   36 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 36 (string_builder)


State 739

   35 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 949
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 740

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   34 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    $default  reduce using rule 34 (string_builder_body)


State 741

  834 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 950


State 742

  835 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 951


State 743

  324 expr_list: expr_list ',' . expr
  833 optional_comma: ',' .

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 833 (optional_comma)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 952
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 744

  806 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 953


State 745

  438 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 954


State 746

  374 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 955


State 747

  498 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 956


State 748

  378 func_addr_expr: '@' '@' '<' . $@24 type_declaration_no_options '>' $@25 func_addr_name
  381               | '@' '@' '<' . $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    ':'       reduce using rule 379 ($@26)
    '>'       reduce using rule 379 ($@26)
    '('       reduce using rule 379 ($@26)
    $default  reduce using rule 376 ($@24)

    $@24  go to state 957
    $@26  go to state 958


State 749

  373 func_addr_name: name_in_namespace .

    $default  reduce using rule 373 (func_addr_name)


State 750

  375 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 375 (func_addr_expr)


State 751

  836 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 959


State 752

  800 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 960
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 753

  825 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  833 optional_comma: ',' .

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 833 (optional_comma)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 598
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 961
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 754

  826 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 962


State 755

  392 expr_call: name_in_namespace '(' "uninitialized" . ')'
  394          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963
    ')'     shift, and go to state 964

    make_struct_fields  go to state 761
    make_struct_single  go to state 965


State 756

  774 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  775                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 966


State 757

  271 name_in_namespace: "name" .
  272                  | "name" . "::" "name"
  770 make_struct_fields: "name" . copy_or_move expr
  771                   | "name" . ":=" expr

    "<-"  shift, and go to state 855
    ":="  shift, and go to state 967
    "::"  shift, and go to state 96
    '='   shift, and go to state 857

    $default  reduce using rule 271 (name_in_namespace)

    copy_or_move  go to state 968


State 758

  369 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  806 make_dim_decl: '[' . expr_list optional_comma ']'
  834 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  835                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 591
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "iterator"                        shift, and go to state 592
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 756
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 757
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 593
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 969
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 759

  391 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 391 (expr_call)


State 760

  324 expr_list: expr_list . ',' expr
  370 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  395 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 970
    ')'  shift, and go to state 971


State 761

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  779 make_struct_single: make_struct_fields .

    ','  shift, and go to state 972

    $default  reduce using rule 779 (make_struct_single)


State 762

  393 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 973


State 763

  133 annotation_list: annotation_list . ',' annotation_declaration
  135 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 974


State 764

  339 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 975


State 765

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 976


State 766

  330 block_or_lambda: '@' '@' .

    $default  reduce using rule 330 (block_or_lambda)


State 767

  263 expressions: expressions . expression_any
  264            | expressions . error
  342 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 861
    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 862
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 863
    "try"                             shift, and go to state 864
    "table"                           shift, and go to state 425
    "delete"                          shift, and go to state 865
    "deref"                           shift, and go to state 426
    "assume"                          shift, and go to state 866
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 867
    "pass"                            shift, and go to state 868
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 869
    "goto"                            shift, and go to state 870
    "unsafe"                          shift, and go to state 871
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 872
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 464
    '}'                               shift, and go to state 977

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)

    SEMICOLON                         go to state 873
    string_builder                    go to state 465
    expr_reader                       go to state 466
    expression_label                  go to state 874
    expression_goto                   go to state 875
    expression_if_one_liner           go to state 876
    expression_if_then_else           go to state 877
    $@5                               go to state 878
    expression_if_then_else_oneliner  go to state 879
    expression_for_loop               go to state 880
    $@6                               go to state 881
    expression_unsafe                 go to state 882
    expression_while_loop             go to state 883
    $@7                               go to state 884
    expression_with                   go to state 885
    $@8                               go to state 886
    expression_with_alias             go to state 887
    expr_call_pipe                    go to state 467
    expression_any                    go to state 889
    name_in_namespace                 go to state 468
    expression_delete                 go to state 890
    expr_new                          go to state 469
    expression_break                  go to state 891
    expression_continue               go to state 892
    expression_return                 go to state 893
    expression_yield                  go to state 894
    expression_try_catch              go to state 895
    kwd_let                           go to state 896
    expression_let                    go to state 897
    expr_cast                         go to state 470
    expr_type_decl                    go to state 471
    expr_type_info                    go to state 472
    block_or_lambda                   go to state 473
    expr_full_block                   go to state 474
    expr_numeric_const                go to state 475
    expr_assign                       go to state 898
    expr_named_call                   go to state 476
    expr_method_call                  go to state 477
    func_addr_expr                    go to state 478
    expr_field                        go to state 479
    expr_call                         go to state 480
    expr                              go to state 899
    expr_generator                    go to state 482
    expr_mtag                         go to state 483
    basic_type_declaration            go to state 484
    make_decl                         go to state 485
    make_struct_decl                  go to state 486
    make_tuple_call                   go to state 487
    make_dim_decl                     go to state 488
    make_table_decl                   go to state 489
    array_comprehension               go to state 490


State 768

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 764

    $default  reduce using rule 338 (optional_capture_list)

    optional_capture_list  go to state 978


State 769

  455 expr: expr "is" "type" . '<' $@30 type_declaration_no_options '>' $@31

    '<'  shift, and go to state 979


State 770

  497 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 980


State 771

  457 expr: expr "is" "name" .

    $default  reduce using rule 457 (expr)


State 772

  456 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 456 (expr)


State 773

  461 expr: expr "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 981


State 774

  495 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 982


State 775

  458 expr: expr "as" "name" .

    $default  reduce using rule 458 (expr)


State 776

  462 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 462 (expr)


State 777

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  412     | expr "<<" expr .
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '-'   shift, and go to state 636
    '+'   shift, and go to state 637
    '*'   shift, and go to state 638
    '/'   shift, and go to state 639
    '%'   shift, and go to state 640
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 412 (expr)


State 778

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  413     | expr ">>" expr .
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '-'   shift, and go to state 636
    '+'   shift, and go to state 637
    '*'   shift, and go to state 638
    '/'   shift, and go to state 639
    '%'   shift, and go to state 640
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 413 (expr)


State 779

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  425     | expr "<=" expr .
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 425 (expr)


State 780

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  426     | expr ">=" expr .
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 426 (expr)


State 781

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  423     | expr "==" expr .
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 423 (expr)


State 782

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  424     | expr "!=" expr .
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 424 (expr)


State 783

  371 expr_method_call: expr "->" "name" . '(' ')'
  372                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 983


State 784

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  451     | expr "??" expr .
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 451 (expr)


State 785

  492 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 984


State 786

  443 expr: expr "?." "name" .

    $default  reduce using rule 443 (expr)


State 787

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  441     | expr "?[" expr . ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ']'    shift, and go to state 985


State 788

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  475     | expr "<|" expr .
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 475 (expr)


State 789

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  476     | expr "|>" expr .
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 618
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 476 (expr)


State 790

  396 expr_call: basic_type_declaration . '(' ')'
  397          | basic_type_declaration . '(' expr_list ')'
  477 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 644

    $default  reduce using rule 477 (expr)


State 791

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  414     | expr "<<<" expr .
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '-'   shift, and go to state 636
    '+'   shift, and go to state 637
    '*'   shift, and go to state 638
    '/'   shift, and go to state 639
    '%'   shift, and go to state 640
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 414 (expr)


State 792

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  415     | expr ">>>" expr .
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '-'   shift, and go to state 636
    '+'   shift, and go to state 637
    '*'   shift, and go to state 638
    '/'   shift, and go to state 639
    '%'   shift, and go to state 640
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 415 (expr)


State 793

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  430     | expr "&&" expr .
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 430 (expr)


State 794

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  431     | expr "||" expr .
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "^^"   shift, and go to state 628
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 431 (expr)


State 795

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  432     | expr "^^" expr .
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 432 (expr)


State 796

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  433     | expr ".." expr .
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    ".."  error (nonassociative)

    $default  reduce using rule 433 (expr)


State 797

  463 expr: expr '?' "as" . "name"
  466     | expr '?' "as" . "type" '<' $@34 type_declaration '>' $@35
  467     | expr '?' "as" . basic_type_declaration
  496 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 986
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 434
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 987
    "name"      shift, and go to state 988

    basic_type_declaration  go to state 989


State 798

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  452     | expr '?' expr . ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    ':'    shift, and go to state 990
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642


State 799

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  428     | expr '|' expr .
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 428 (expr)


State 800

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  429     | expr '^' expr .
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 429 (expr)


State 801

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  427     | expr '&' expr .
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 427 (expr)


State 802

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  421     | expr '<' expr .
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 421 (expr)


State 803

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  422     | expr '>' expr .
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 422 (expr)


State 804

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  417     | expr '-' expr .
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '*'   shift, and go to state 638
    '/'   shift, and go to state 639
    '%'   shift, and go to state 640
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 417 (expr)


State 805

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  416     | expr '+' expr .
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '*'   shift, and go to state 638
    '/'   shift, and go to state 639
    '%'   shift, and go to state 640
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 416 (expr)


State 806

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  418     | expr '*' expr .
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 418 (expr)


State 807

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  419     | expr '/' expr .
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 419 (expr)


State 808

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  420     | expr '%' expr .
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 608
    "as"  shift, and go to state 609
    "++"  shift, and go to state 612
    "--"  shift, and go to state 613
    "->"  shift, and go to state 618
    "??"  shift, and go to state 619
    "?."  shift, and go to state 620
    "?["  shift, and go to state 621
    "<|"  shift, and go to state 622
    "|>"  shift, and go to state 623
    '.'   shift, and go to state 641
    '['   shift, and go to state 642

    $default  reduce using rule 420 (expr)


State 809

  444 expr: expr '.' "?." . "name"
  494 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 991
    "name"  shift, and go to state 992


State 810

  442 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 993
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 811

  491 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 994


State 812

  382 expr_field: expr '.' "name" .
  384           | expr '.' "name" . '(' ')'
  385           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 995

    $default  reduce using rule 382 (expr_field)


State 813

  383 expr_field: expr '.' '.' . "name"
  493 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 996
    "name"  shift, and go to state 997


State 814

  440 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 998
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 815

  390 expr_field: expr '.' $@28 . error $@29

    error  shift, and go to state 999


State 816

  386 expr_field: expr '.' basic_type_declaration . '(' ')'
  387           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1000


State 817

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  439     | expr '[' expr . ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ']'    shift, and go to state 1001


State 818

  396 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 396 (expr_call)


State 819

  324 expr_list: expr_list . ',' expr
  397 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1003


State 820

  719 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 718 ($@60)

    $@60  go to state 1004


State 821

  709 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 708 ($@54)

    $@54  go to state 1005


State 822

  673 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 672 ($@49)

    $@49  go to state 1006


State 823

  667 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1007


State 824

  723 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 722 ($@62)

    $@62  go to state 1008


State 825

  726 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1009


State 826

  730 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 729 ($@66)

    $@66  go to state 1010


State 827

  733 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1011


State 828

  737 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 736 ($@70)

    $@70  go to state 1012


State 829

  740 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1013


State 830

  525 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 1014


State 831

  743 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 742 ($@74)

    $@74  go to state 1015


State 832

  527 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 656
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    tuple_type                          go to state 1016
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 659


State 833

  531 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 1017


State 834

  746 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 745 ($@76)

    $@76  go to state 1018


State 835

  533 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 660

    variant_type  go to state 1019


State 836

  270 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 700
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 701
    '>'                    shift, and go to state 1020
    ';'                    shift, and go to state 16

    COMMA      go to state 702
    SEMICOLON  go to state 703
    c_or_s     go to state 1021


State 837

  269 type_declaration_no_options_list: type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 269 (type_declaration_no_options_list)


State 838

  692 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 692 (type_declaration_no_options_no_dim)


State 839

  266 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 266 (optional_expr_list)


State 840

  680 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 680 (dim_list)


State 841

  579 commas: COMMA .

    $default  reduce using rule 579 (commas)


State 842

  580 commas: commas . COMMA
  597 optional_commas: commas .
  670 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1022
    "new line, comma"  shift, and go to state 700
    ','                shift, and go to state 701

    $default  reduce using rule 597 (optional_commas)

    COMMA  go to state 1023


State 843

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas . $@88 '}'

    $default  reduce using rule 763 ($@88)

    $@88  go to state 1024


State 844

   77 semis: SEMICOLON .

    $default  reduce using rule 77 (semis)


State 845

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  530 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 225
    "array"                shift, and go to state 226
    "table"                shift, and go to state 227
    "typedecl"             shift, and go to state 228
    "iterator"             shift, and go to state 229
    "smart_ptr"            shift, and go to state 230
    "bool"                 shift, and go to state 231
    "void"                 shift, and go to state 232
    "string"               shift, and go to state 233
    "auto"                 shift, and go to state 234
    "int"                  shift, and go to state 235
    "int2"                 shift, and go to state 236
    "int3"                 shift, and go to state 237
    "int4"                 shift, and go to state 238
    "uint"                 shift, and go to state 239
    "bitfield"             shift, and go to state 240
    "uint2"                shift, and go to state 241
    "uint3"                shift, and go to state 242
    "uint4"                shift, and go to state 243
    "float"                shift, and go to state 244
    "float2"               shift, and go to state 245
    "float3"               shift, and go to state 246
    "float4"               shift, and go to state 247
    "range"                shift, and go to state 248
    "urange"               shift, and go to state 249
    "range64"              shift, and go to state 250
    "urange64"             shift, and go to state 251
    "block"                shift, and go to state 252
    "int64"                shift, and go to state 253
    "uint64"               shift, and go to state 254
    "double"               shift, and go to state 255
    "function"             shift, and go to state 256
    "lambda"               shift, and go to state 257
    "int8"                 shift, and go to state 258
    "uint8"                shift, and go to state 259
    "int16"                shift, and go to state 260
    "uint16"               shift, and go to state 261
    "tuple"                shift, and go to state 262
    "variant"              shift, and go to state 263
    "::"                   shift, and go to state 58
    "$t"                   shift, and go to state 264
    "name"                 shift, and go to state 656
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 265
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON                           go to state 1025
    name_in_namespace                   go to state 266
    tuple_type                          go to state 1026
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 659


State 846

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis . $@80 '}'

    $default  reduce using rule 753 ($@80)

    $@80  go to state 1027


State 847

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  536 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 660
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON     go to state 1025
    variant_type  go to state 1028


State 848

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 758 ($@84)

    $@84  go to state 1029


State 849

  577 enum_expression: "name" .
  578                | "name" . '=' expr

    '='  shift, and go to state 1030

    $default  reduce using rule 577 (enum_expression)


State 850

  582 enum_list: enum_expression .

    $default  reduce using rule 582 (enum_list)


State 851

  583 enum_list: enum_list . commas enum_expression
  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list . optional_commas $@44 '}'

    "new line, comma"  shift, and go to state 700
    ','                shift, and go to state 701

    $default  reduce using rule 596 (optional_commas)

    COMMA            go to state 841
    commas           go to state 1031
    optional_commas  go to state 1032


State 852

  521 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 521 (function_argument_declaration)


State 853

  623 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1033
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 854

  624 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1034


State 855

  538 copy_or_move: "<-" .

    $default  reduce using rule 538 (copy_or_move)


State 856

  625 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  626                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1035


State 857

  537 copy_or_move: '=' .

    $default  reduce using rule 537 (copy_or_move)


State 858

  541 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  542                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 1036


State 859

  540 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 540 (variable_declaration)


State 860

  543 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1037
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 861

  264 expressions: expressions error .

    $default  reduce using rule 264 (expressions)


State 862

  288 expression_return: "return" .
  289                  | "return" . expr
  290                  | "return" . "<-" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 1038
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 288 (expression_return)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1039
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 863

  286 expression_break: "break" .

    $default  reduce using rule 286 (expression_break)


State 864

  293 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1040
    $@12              go to state 403


State 865

  274 expression_delete: "delete" . expr
  275                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "explicit"                        shift, and go to state 1041
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1042
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 866

   96 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1043


State 867

  287 expression_continue: "continue" .

    $default  reduce using rule 287 (expression_continue)


State 868

  261 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1044


State 869

   56 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1045


State 870

   57 expression_goto: "goto" . "label" "integer constant"
   58                | "goto" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 1046
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1047
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 871

   91 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  479 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 148
    '('                    shift, and go to state 569

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1048


State 872

  291 expression_yield: "yield" . expr
  292                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 1049
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1050
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 873

  243 expression_any: SEMICOLON .

    $default  reduce using rule 243 (expression_any)


State 874

  259 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1051


State 875

  260 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1052


State 876

   88 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1053


State 877

  256 expression_any: expression_if_then_else .

    $default  reduce using rule 256 (expression_any)


State 878

   87 expression_if_then_else: $@5 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1054
    "static_if"  shift, and go to state 1055

    if_or_static_if  go to state 1056


State 879

  257 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 257 (expression_any)


State 880

  251 expression_any: expression_for_loop .

    $default  reduce using rule 251 (expression_any)


State 881

   90 expression_for_loop: $@6 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1057


State 882

  248 expression_any: expression_unsafe .

    $default  reduce using rule 248 (expression_any)


State 883

  247 expression_any: expression_while_loop .

    $default  reduce using rule 247 (expression_any)


State 884

   93 expression_while_loop: $@7 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1058


State 885

  249 expression_any: expression_with .

    $default  reduce using rule 249 (expression_any)


State 886

   95 expression_with: $@8 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1059


State 887

  250 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1060


State 888

  241 expression_block: $@12 '{' expressions $@13 . '}' expression_block_finally

    '}'  shift, and go to state 1061


State 889

  263 expressions: expressions expression_any .

    $default  reduce using rule 263 (expressions)


State 890

  245 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1062


State 891

   75 expression_if_one_liner: expression_break .
  252 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 75 (expression_if_one_liner)

    SEMICOLON  go to state 1063


State 892

   76 expression_if_one_liner: expression_continue .
  253 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 76 (expression_if_one_liner)

    SEMICOLON  go to state 1064


State 893

   73 expression_if_one_liner: expression_return .
  254 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 73 (expression_if_one_liner)

    SEMICOLON  go to state 1065


State 894

   74 expression_if_one_liner: expression_yield .
  255 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 74 (expression_if_one_liner)

    SEMICOLON  go to state 1066


State 895

  258 expression_any: expression_try_catch .

    $default  reduce using rule 258 (expression_any)


State 896

  305 expression_let: kwd_let . optional_in_scope let_variable_declaration
  306               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  307               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1067

    $default  reduce using rule 300 (optional_in_scope)

    optional_in_scope  go to state 1068


State 897

  246 expression_any: expression_let .

    $default  reduce using rule 246 (expression_any)


State 898

  244 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1069


State 899

   72 expression_if_one_liner: expr .
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 608
    "as"    shift, and go to state 609
    "+="    shift, and go to state 1070
    "-="    shift, and go to state 1071
    "/="    shift, and go to state 1072
    "*="    shift, and go to state 1073
    "%="    shift, and go to state 1074
    "&="    shift, and go to state 1075
    "|="    shift, and go to state 1076
    "^="    shift, and go to state 1077
    "<<"    shift, and go to state 610
    ">>"    shift, and go to state 611
    "++"    shift, and go to state 612
    "--"    shift, and go to state 613
    "<="    shift, and go to state 614
    "<<="   shift, and go to state 1078
    ">>="   shift, and go to state 1079
    ">="    shift, and go to state 615
    "=="    shift, and go to state 616
    "!="    shift, and go to state 617
    "->"    shift, and go to state 618
    "<-"    shift, and go to state 1080
    "??"    shift, and go to state 619
    "?."    shift, and go to state 620
    "?["    shift, and go to state 621
    "<|"    shift, and go to state 622
    "|>"    shift, and go to state 623
    ":="    shift, and go to state 1081
    "<<<"   shift, and go to state 624
    ">>>"   shift, and go to state 625
    "<<<="  shift, and go to state 1082
    ">>>="  shift, and go to state 1083
    "&&"    shift, and go to state 626
    "||"    shift, and go to state 627
    "^^"    shift, and go to state 628
    "&&="   shift, and go to state 1084
    "||="   shift, and go to state 1085
    "^^="   shift, and go to state 1086
    ".."    shift, and go to state 629
    '='     shift, and go to state 1087
    '?'     shift, and go to state 630
    '|'     shift, and go to state 631
    '^'     shift, and go to state 632
    '&'     shift, and go to state 633
    '<'     shift, and go to state 634
    '>'     shift, and go to state 635
    '-'     shift, and go to state 636
    '+'     shift, and go to state 637
    '*'     shift, and go to state 638
    '/'     shift, and go to state 639
    '%'     shift, and go to state 640
    '.'     shift, and go to state 641
    '['     shift, and go to state 642

    "if"      reduce using rule 72 (expression_if_one_liner)
    $default  reduce using rule 350 (expr_assign)


State 900

  513 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  515                                 | struct_variable_declaration_list . $@36 structure_variable_declaration SEMICOLON
  517                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  519                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block
  617 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1088
    '['                    shift, and go to state 1089
    '}'                    shift, and go to state 1090

    "def"     reduce using rule 136 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 514 ($@36)

    optional_annotation_list_with_emit_semis  go to state 1091
    $@36                                      go to state 1092


State 901

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  550 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1093


State 902

  551 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 551 (let_variable_name_with_pos_list)


State 903

  552 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  553                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1094

    $default  reduce using rule 552 (let_variable_name_with_pos_list)


State 904

  559 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  560                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"                   shift, and go to state 541
    ":="                   shift, and go to state 542
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 543
    ';'                    shift, and go to state 16

    SEMICOLON              go to state 1095
    copy_or_move_or_clone  go to state 1096


State 905

  561 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1097
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 906

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 608
    "as"                   shift, and go to state 609
    "<<"                   shift, and go to state 610
    ">>"                   shift, and go to state 611
    "++"                   shift, and go to state 612
    "--"                   shift, and go to state 613
    "<="                   shift, and go to state 614
    ">="                   shift, and go to state 615
    "=="                   shift, and go to state 616
    "!="                   shift, and go to state 617
    "->"                   shift, and go to state 618
    "??"                   shift, and go to state 619
    "?."                   shift, and go to state 620
    "?["                   shift, and go to state 621
    "<|"                   shift, and go to state 622
    "|>"                   shift, and go to state 623
    "<<<"                  shift, and go to state 624
    ">>>"                  shift, and go to state 625
    "&&"                   shift, and go to state 626
    "||"                   shift, and go to state 627
    "^^"                   shift, and go to state 628
    ".."                   shift, and go to state 629
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 630
    '|'                    shift, and go to state 631
    '^'                    shift, and go to state 632
    '&'                    shift, and go to state 633
    '<'                    shift, and go to state 634
    '>'                    shift, and go to state 635
    '-'                    shift, and go to state 636
    '+'                    shift, and go to state 637
    '*'                    shift, and go to state 638
    '/'                    shift, and go to state 639
    '%'                    shift, and go to state 640
    '.'                    shift, and go to state 641
    '['                    shift, and go to state 642
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1098


State 907

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 564 (global_let_variable_declaration)


State 908

  690 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 909

  713 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 910

  716 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 911

  677 table_type_pair: type_declaration c_or_s type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 677 (table_type_pair)


State 912

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1099


State 913

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1100


State 914

  278 new_type_declaration: '<' $@14 type_declaration . '>' $@15
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1101


State 915

  284 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  787 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963

    $default  reduce using rule 787 (use_initializer)

    make_struct_fields  go to state 761
    make_struct_single  go to state 1102


State 916

  282 expr_new: "new" new_type_declaration '(' expr_list . ')'
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1103


State 917

  283 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1104


State 918

  281 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1105


State 919

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 700
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 701
    '>'                    shift, and go to state 1106
    ';'                    shift, and go to state 16

    COMMA      go to state 702
    SEMICOLON  go to state 703
    c_or_s     go to state 1107


State 920

  320 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1108


State 921

  319 expr_type_decl: "type" '<' $@22 type_declaration . '>' $@23
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1109


State 922

  809 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1110
    type_declaration_no_options_no_dim  go to state 272


State 923

  812 make_dim_decl: "array" "tuple" '<' $@101 . type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1111
    type_declaration_no_options_no_dim  go to state 272


State 924

  815 make_dim_decl: "array" "variant" '<' $@103 . type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1112
    type_declaration_no_options_no_dim  go to state 272


State 925

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    '>'  shift, and go to state 1113


State 926

  816 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1114


State 927

  828 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1115


State 928

  829 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1116
    type_declaration_no_options_no_dim  go to state 272


State 929

  827 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1117


State 930

  448 expr: "deref" '(' expr ')' .

    $default  reduce using rule 448 (expr)


State 931

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options . '>' $@17 expr

    '>'  shift, and go to state 1118


State 932

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options . '>' $@19 expr

    '>'  shift, and go to state 1119


State 933

  449 expr: "addr" '(' expr ')' .

    $default  reduce using rule 449 (expr)


State 934

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options . '>' $@21 expr

    '>'  shift, and go to state 1120


State 935

  479 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 479 (expr)


State 936

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1121


State 937

  820 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1122


State 938

  799 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    '>'  shift, and go to state 1123


State 939

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1124


State 940

  802 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1125


State 941

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options . '>' $@94 '(' make_variant_dim ')'

    '>'  shift, and go to state 1126


State 942

  480 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  481               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  482               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 764

    $default  reduce using rule 338 (optional_capture_list)

    optional_capture_list  go to state 1127


State 943

  483 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 483 (expr_mtag)


State 944

  484 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 484 (expr_mtag)


State 945

  485 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 485 (expr_mtag)


State 946

  486 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 486 (expr_mtag)


State 947

  487 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 487 (expr_mtag)


State 948

  489 expr_mtag: "$c" '(' expr ')' . '(' ')'
  490          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1128


State 949

   35 string_builder_body: string_builder_body "{" expr . "}"
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    "}"    shift, and go to state 1129
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642


State 950

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1130
    ','   shift, and go to state 856


State 951

  835 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 1131


State 952

  324 expr_list: expr_list ',' expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 324 (expr_list)


State 953

  806 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 806 (make_dim_decl)


State 954

  438 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 438 (expr)


State 955

  374 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1132
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 956

  498 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1133
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 957

  378 func_addr_expr: '@' '@' '<' $@24 . type_declaration_no_options '>' $@25 func_addr_name

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1134
    type_declaration_no_options_no_dim  go to state 272


State 958

  381 func_addr_expr: '@' '@' '<' $@26 . optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 1135


State 959

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1136
    ','   shift, and go to state 856


State 960

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  800 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 800 (make_map_tuple)


State 961

  825 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 825 (expr_map_tuple_list)


State 962

  826 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 826 (make_table_decl)


State 963

  770 make_struct_fields: "name" . copy_or_move expr
  771                   | "name" . ":=" expr

    "<-"  shift, and go to state 855
    ":="  shift, and go to state 967
    '='   shift, and go to state 857

    copy_or_move  go to state 968


State 964

  392 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 392 (expr_call)


State 965

  394 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1137


State 966

  774 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  775                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1138
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 967

  771 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1139
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 968

  770 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1140
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 969

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 972
    ']'  shift, and go to state 1141


State 970

  324 expr_list: expr_list ',' . expr
  370 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 1142
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 952
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 971

  395 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 395 (expr_call)


State 972

  772 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  773                   | make_struct_fields ',' . "name" ":=" expr
  776                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1143
    "name"  shift, and go to state 1144


State 973

  393 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 393 (expr_call)


State 974

  135 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 135 (optional_annotation_list)


State 975

  339 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1145
    ":="    shift, and go to state 1146
    "name"  shift, and go to state 1147
    '='     shift, and go to state 1148
    '&'     shift, and go to state 1149

    capture_entry  go to state 1150
    capture_list   go to state 1151


State 976

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 1152


State 977

  342 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 342 (expr_full_block_assumed_piped)


State 978

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 333

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 1153


State 979

  455 expr: expr "is" "type" '<' . $@30 type_declaration_no_options '>' $@31

    $default  reduce using rule 453 ($@30)

    $@30  go to state 1154


State 980

  497 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1155
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 981

  461 expr: expr "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 459 ($@32)

    $@32  go to state 1156


State 982

  495 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1157
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 983

  371 expr_method_call: expr "->" "name" '(' . ')'
  372                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1158
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1159
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 984

  492 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1160
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 985

  441 expr: expr "?[" expr ']' .

    $default  reduce using rule 441 (expr)


State 986

  466 expr: expr '?' "as" "type" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 1161


State 987

  496 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1162


State 988

  463 expr: expr '?' "as" "name" .

    $default  reduce using rule 463 (expr)


State 989

  467 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 467 (expr)


State 990

  452 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1163
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 991

  494 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1164


State 992

  444 expr: expr '.' "?." "name" .

    $default  reduce using rule 444 (expr)


State 993

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  442     | expr '.' "?[" expr . ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ']'    shift, and go to state 1165


State 994

  491 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1166
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 995

  384 expr_field: expr '.' "name" '(' . ')'
  385           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1167
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1168
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 996

  493 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1169


State 997

  383 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 383 (expr_field)


State 998

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  440     | expr '.' '[' expr . ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ']'    shift, and go to state 1170


State 999

  390 expr_field: expr '.' $@28 error . $@29

    $default  reduce using rule 389 ($@29)

    $@29  go to state 1171


State 1000

  386 expr_field: expr '.' basic_type_declaration '(' . ')'
  387           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1172
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1173
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1001

  439 expr: expr '[' expr ']' .

    $default  reduce using rule 439 (expr)


State 1002

  324 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 952
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1003

  397 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 397 (expr_call)


State 1004

  719 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 1005

  709 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 1006

  673 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 673 (bitfield_type_declaration)


State 1007

  667 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 667 (bitfield_bits)


State 1008

  723 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 1009

  726 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 725 ($@64)

    $@64  go to state 1174


State 1010

  730 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 1011

  733 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 732 ($@68)

    $@68  go to state 1175


State 1012

  737 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 1013

  740 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 739 ($@72)

    $@72  go to state 1176


State 1014

  525 tuple_type: "name" ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 525 (tuple_type)


State 1015

  743 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 1016

  527 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 527 (tuple_type_list)


State 1017

  531 variant_type: "name" ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 531 (variant_type)


State 1018

  746 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 1019

  533 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 533 (variant_type_list)


State 1020

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1177


State 1021

  270 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 1178


State 1022

  670 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 670 (bitfield_alias_bits)


State 1023

  580 commas: commas COMMA .

    $default  reduce using rule 580 (commas)


State 1024

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 . '}'

    '}'  shift, and go to state 1179


State 1025

   78 semis: semis SEMICOLON .

    $default  reduce using rule 78 (semis)


State 1026

  530 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 530 (tuple_alias_type_list)


State 1027

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 . '}'

    '}'  shift, and go to state 1180


State 1028

  536 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 536 (variant_alias_type_list)


State 1029

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1181


State 1030

  578 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1182
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1031

  580 commas: commas . COMMA
  583 enum_list: enum_list commas . enum_expression
  597 optional_commas: commas .

    "name"             shift, and go to state 849
    "new line, comma"  shift, and go to state 700
    ','                shift, and go to state 701

    $default  reduce using rule 597 (optional_commas)

    COMMA            go to state 1023
    enum_expression  go to state 1183


State 1032

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas . $@44 '}'

    $default  reduce using rule 604 ($@44)

    $@44  go to state 1184


State 1033

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  623 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1185


State 1034

  624 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 624 (variable_name_with_pos_list)


State 1035

  625 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  626                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1186

    $default  reduce using rule 625 (variable_name_with_pos_list)


State 1036

  541 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  542                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 855
    '='   shift, and go to state 857
    '|'   shift, and go to state 374

    $default  reduce using rule 541 (variable_declaration)

    copy_or_move  go to state 1187


State 1037

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  543 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 543 (variable_declaration)


State 1038

  290 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1188
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1039

  289 expression_return: "return" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 289 (expression_return)


State 1040

  293 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1189


State 1041

  275 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1190
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1042

  274 expression_delete: "delete" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 274 (expression_delete)


State 1043

   96 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1191


State 1044

  261 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1045

   56 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1192


State 1046

   57 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1193


State 1047

   58 expression_goto: "goto" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 58 (expression_goto)


State 1048

   91 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1194
    $@12              go to state 403


State 1049

  292 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1195
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1050

  291 expression_yield: "yield" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 291 (expression_yield)


State 1051

  259 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 259 (expression_any)


State 1052

  260 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 260 (expression_any)


State 1053

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1196


State 1054

   68 if_or_static_if: "if" .

    $default  reduce using rule 68 (if_or_static_if)


State 1055

   69 if_or_static_if: "static_if" .

    $default  reduce using rule 69 (if_or_static_if)


State 1056

   87 expression_if_then_else: $@5 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1197


State 1057

   90 expression_for_loop: $@6 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1198


State 1058

   93 expression_while_loop: $@7 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1199


State 1059

   95 expression_with: $@8 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1200


State 1060

  250 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 250 (expression_any)


State 1061

  241 expression_block: $@12 '{' expressions $@13 '}' . expression_block_finally

    "finally"  shift, and go to state 1201

    $default  reduce using rule 235 (expression_block_finally)

    expression_block_finally  go to state 1202


State 1062

  245 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 245 (expression_any)


State 1063

  252 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 252 (expression_any)


State 1064

  253 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 253 (expression_any)


State 1065

  254 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 254 (expression_any)


State 1066

  255 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 255 (expression_any)


State 1067

  299 optional_in_scope: "inscope" .

    $default  reduce using rule 299 (optional_in_scope)


State 1068

  305 expression_let: kwd_let optional_in_scope . let_variable_declaration
  306               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  307               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 534
    "name"  shift, and go to state 535
    '('     shift, and go to state 1203
    '{'     shift, and go to state 1204

    tuple_expansion_variable_declaration  go to state 1205
    let_variable_name_with_pos_list       go to state 536
    let_variable_declaration              go to state 1206


State 1069

  244 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 244 (expression_any)


State 1070

  360 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1207
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1071

  361 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1208
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1072

  363 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1209
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1073

  362 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1210
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1074

  364 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1211
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1075

  354 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1212
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1076

  355 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1213
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1077

  356 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1214
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1078

  365 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1215
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1079

  366 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1216
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1080

  352 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1217
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1081

  353 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1218
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1082

  367 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1219
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1083

  368 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1220
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1084

  357 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1221
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1085

  358 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1222
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1086

  359 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1223
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1087

  351 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1224
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1088

  513 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 513 (struct_variable_declaration_list)


State 1089

  137 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1225
    name_in_namespace             go to state 70


State 1090

  617 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 617 (optional_struct_variable_declaration_list)


State 1091

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  519                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1226


State 1092

  515 struct_variable_declaration_list: struct_variable_declaration_list $@36 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 217

    $default  reduce using rule 499 (optional_field_annotation)

    metadata_argument_list          go to state 218
    optional_field_annotation       go to state 1227
    structure_variable_declaration  go to state 1228


State 1093

  550 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 550 (let_variable_name_with_pos_list)


State 1094

  553 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1229


State 1095

  559 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 559 (let_variable_declaration)


State 1096

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1230
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1097

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  561 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 608
    "as"                   shift, and go to state 609
    "<<"                   shift, and go to state 610
    ">>"                   shift, and go to state 611
    "++"                   shift, and go to state 612
    "--"                   shift, and go to state 613
    "<="                   shift, and go to state 614
    ">="                   shift, and go to state 615
    "=="                   shift, and go to state 616
    "!="                   shift, and go to state 617
    "->"                   shift, and go to state 618
    "??"                   shift, and go to state 619
    "?."                   shift, and go to state 620
    "?["                   shift, and go to state 621
    "<|"                   shift, and go to state 622
    "|>"                   shift, and go to state 623
    "<<<"                  shift, and go to state 624
    ">>>"                  shift, and go to state 625
    "&&"                   shift, and go to state 626
    "||"                   shift, and go to state 627
    "^^"                   shift, and go to state 628
    ".."                   shift, and go to state 629
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 630
    '|'                    shift, and go to state 631
    '^'                    shift, and go to state 632
    '&'                    shift, and go to state 633
    '<'                    shift, and go to state 634
    '>'                    shift, and go to state 635
    '-'                    shift, and go to state 636
    '+'                    shift, and go to state 637
    '*'                    shift, and go to state 638
    '/'                    shift, and go to state 639
    '%'                    shift, and go to state 640
    '.'                    shift, and go to state 641
    '['                    shift, and go to state 642
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1231


State 1098

  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 563 (global_let_variable_declaration)


State 1099

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 789 ($@90)

    $@90  go to state 1232


State 1100

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 792 ($@92)

    $@92  go to state 1233


State 1101

  278 new_type_declaration: '<' $@14 type_declaration '>' . $@15

    $default  reduce using rule 277 ($@15)

    $@15  go to state 1234


State 1102

  284 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1235


State 1103

  282 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 282 (expr_new)


State 1104

  283 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 283 (expr_new)


State 1105

  281 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 281 (expr_new)


State 1106

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1236


State 1107

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1237


State 1108

  320 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 320 (expr_type_info)


State 1109

  319 expr_type_decl: "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 318 ($@23)

    $@23  go to state 1238


State 1110

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1239


State 1111

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1240


State 1112

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options . '>' $@104 '(' make_variant_dim ')'

    '>'  shift, and go to state 1241


State 1113

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 818 ($@106)

    $@106  go to state 1242


State 1114

  816 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 816 (make_dim_decl)


State 1115

  828 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 465
    expr_reader                   go to state 466
    expr_call_pipe                go to state 467
    optional_expr_map_tuple_list  go to state 1243
    name_in_namespace             go to state 468
    expr_new                      go to state 469
    expr_cast                     go to state 470
    expr_type_decl                go to state 471
    expr_type_info                go to state 472
    block_or_lambda               go to state 473
    expr_full_block               go to state 474
    expr_numeric_const            go to state 475
    expr_named_call               go to state 476
    expr_method_call              go to state 477
    func_addr_expr                go to state 478
    expr_field                    go to state 479
    expr_call                     go to state 480
    expr                          go to state 598
    expr_generator                go to state 482
    expr_mtag                     go to state 483
    basic_type_declaration        go to state 484
    make_decl                     go to state 485
    make_struct_decl              go to state 486
    make_map_tuple                go to state 599
    make_tuple_call               go to state 487
    make_dim_decl                 go to state 488
    expr_map_tuple_list           go to state 1244
    make_table_decl               go to state 489
    array_comprehension           go to state 490


State 1116

  829 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1245


State 1117

  827 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 827 (make_table_decl)


State 1118

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 309 ($@17)

    $@17  go to state 1246


State 1119

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 312 ($@19)

    $@19  go to state 1247


State 1120

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 315 ($@21)

    $@21  go to state 1248


State 1121

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 822 ($@108)

    $@108  go to state 1249


State 1122

  820 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 820 (make_dim_decl)


State 1123

  799 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 798 ($@96)

    $@96  go to state 1250


State 1124

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 804 ($@98)

    $@98  go to state 1251


State 1125

  802 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 802 (make_tuple_call)


State 1126

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' . $@94 '(' make_variant_dim ')'

    $default  reduce using rule 795 ($@94)

    $@94  go to state 1252


State 1127

  480 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  481               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  482               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148
    '('                    shift, and go to state 1253

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1254


State 1128

  489 expr_mtag: "$c" '(' expr ')' '(' . ')'
  490          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1255
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1256
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1129

   35 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 35 (string_builder_body)


State 1130

  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1257
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1131

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1258
    ','   shift, and go to state 856


State 1132

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  374 func_addr_name: "$i" '(' expr . ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1259


State 1133

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  498          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1260


State 1134

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options . '>' $@25 func_addr_name

    '>'  shift, and go to state 1261


State 1135

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list . optional_function_type '>' $@27 func_addr_name

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 1262


State 1136

  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1263
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1137

  394 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 394 (expr_call)


State 1138

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  775                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1264


State 1139

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 771 (make_struct_fields)


State 1140

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 770 (make_struct_fields)


State 1141

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1265


State 1142

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  806 make_dim_decl: '[' . expr_list optional_comma ']'
  834 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  835                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 591
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "iterator"                        shift, and go to state 592
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "$f"                              shift, and go to state 756
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 757
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 593
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 1266
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1143

  776 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1267


State 1144

  772 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  773                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 855
    ":="  shift, and go to state 1268
    '='   shift, and go to state 857

    copy_or_move  go to state 1269


State 1145

  333 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1270


State 1146

  334 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1271


State 1147

  335 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1272


State 1148

  332 capture_entry: '=' . "name"

    "name"  shift, and go to state 1273


State 1149

  331 capture_entry: '&' . "name"

    "name"  shift, and go to state 1274


State 1150

  336 capture_list: capture_entry .

    $default  reduce using rule 336 (capture_list)


State 1151

  337 capture_list: capture_list . ',' capture_entry
  339 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1275
    ')'  shift, and go to state 1276


State 1152

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1277


State 1153

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 400

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 1278


State 1154

  455 expr: expr "is" "type" '<' $@30 . type_declaration_no_options '>' $@31

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1279
    type_declaration_no_options_no_dim  go to state 272


State 1155

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  497          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1280


State 1156

  461 expr: expr "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 1281


State 1157

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  495          | expr "as" "$f" '(' expr . ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1282


State 1158

  371 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 371 (expr_method_call)


State 1159

  324 expr_list: expr_list . ',' expr
  372 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1283


State 1160

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  492          | expr "?." "$f" '(' expr . ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1284


State 1161

  466 expr: expr '?' "as" "type" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 464 ($@34)

    $@34  go to state 1285


State 1162

  496 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1286
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1163

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  452     | expr '?' expr ':' expr .
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 452 (expr)


State 1164

  494 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1287
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1165

  442 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 442 (expr)


State 1166

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  491          | expr '.' "$f" '(' expr . ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1288


State 1167

  384 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 384 (expr_field)


State 1168

  324 expr_list: expr_list . ',' expr
  385 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1289


State 1169

  493 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1290
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1170

  440 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 440 (expr)


State 1171

  390 expr_field: expr '.' $@28 error $@29 .

    $default  reduce using rule 390 (expr_field)


State 1172

  386 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 386 (expr_field)


State 1173

  324 expr_list: expr_list . ',' expr
  387 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1291


State 1174

  726 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 1175

  733 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 1176

  740 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 1177

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 265 (optional_expr_list)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    optional_expr_list      go to state 1292
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 666
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1178

  270 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 270 (type_declaration_no_options_list)


State 1179

  764 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}' .

    $default  reduce using rule 764 (bitfield_alias_declaration)


State 1180

  754 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}' .

    $default  reduce using rule 754 (tuple_alias_declaration)


State 1181

  759 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 759 (variant_alias_declaration)


State 1182

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  578 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 578 (enum_expression)


State 1183

  583 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 583 (enum_list)


State 1184

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 . '}'

    '}'  shift, and go to state 1293


State 1185

  623 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 623 (variable_name_with_pos_list)


State 1186

  626 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1294


State 1187

  542 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1295
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1188

  290 expression_return: "return" "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 290 (expression_return)


State 1189

  293 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1296
    $@12              go to state 403


State 1190

  275 expression_delete: "delete" "explicit" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 275 (expression_delete)


State 1191

   96 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1297
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1192

   56 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 56 (expression_label)


State 1193

   57 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 57 (expression_goto)


State 1194

   91 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 91 (expression_unsafe)


State 1195

  292 expression_yield: "yield" "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 292 (expression_yield)


State 1196

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1298
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1197

   87 expression_if_then_else: $@5 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1299
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1198

   90 expression_for_loop: $@6 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 1300


State 1199

   93 expression_while_loop: $@7 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1301
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1200

   95 expression_with: $@8 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1302
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1201

  238 expression_block_finally: "finally" . $@10 '{' expressions $@11 '}'

    $default  reduce using rule 236 ($@10)

    $@10  go to state 1303


State 1202

  241 expression_block: $@12 '{' expressions $@13 '}' expression_block_finally .

    $default  reduce using rule 241 (expression_block)


State 1203

  303 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1304

    tuple_expansion  go to state 1305


State 1204

  307 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 556 (variable_declaration_list)

    variable_declaration_list  go to state 1306


State 1205

  306 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 306 (expression_let)


State 1206

  305 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 305 (expression_let)


State 1207

  360 expr_assign: expr "+=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 360 (expr_assign)


State 1208

  361 expr_assign: expr "-=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 361 (expr_assign)


State 1209

  363 expr_assign: expr "/=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 363 (expr_assign)


State 1210

  362 expr_assign: expr "*=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 362 (expr_assign)


State 1211

  364 expr_assign: expr "%=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 364 (expr_assign)


State 1212

  354 expr_assign: expr "&=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 354 (expr_assign)


State 1213

  355 expr_assign: expr "|=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 355 (expr_assign)


State 1214

  356 expr_assign: expr "^=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 356 (expr_assign)


State 1215

  365 expr_assign: expr "<<=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 365 (expr_assign)


State 1216

  366 expr_assign: expr ">>=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 366 (expr_assign)


State 1217

  352 expr_assign: expr "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 352 (expr_assign)


State 1218

  353 expr_assign: expr ":=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 353 (expr_assign)


State 1219

  367 expr_assign: expr "<<<=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 367 (expr_assign)


State 1220

  368 expr_assign: expr ">>>=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 368 (expr_assign)


State 1221

  357 expr_assign: expr "&&=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 357 (expr_assign)


State 1222

  358 expr_assign: expr "||=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 358 (expr_assign)


State 1223

  359 expr_assign: expr "^^=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 359 (expr_assign)


State 1224

  351 expr_assign: expr '=' expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 351 (expr_assign)


State 1225

  133 annotation_list: annotation_list . ',' annotation_declaration
  137 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 1307


State 1226

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  519                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1308
    "private"  shift, and go to state 1309

    $default  reduce using rule 506 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1310


State 1227

  511 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1311

    $default  reduce using rule 509 (optional_static_member_variable)

    optional_static_member_variable  go to state 1312


State 1228

  515 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1313


State 1229

  553 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 553 (let_variable_name_with_pos_list)


State 1230

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 608
    "as"                   shift, and go to state 609
    "<<"                   shift, and go to state 610
    ">>"                   shift, and go to state 611
    "++"                   shift, and go to state 612
    "--"                   shift, and go to state 613
    "<="                   shift, and go to state 614
    ">="                   shift, and go to state 615
    "=="                   shift, and go to state 616
    "!="                   shift, and go to state 617
    "->"                   shift, and go to state 618
    "??"                   shift, and go to state 619
    "?."                   shift, and go to state 620
    "?["                   shift, and go to state 621
    "<|"                   shift, and go to state 622
    "|>"                   shift, and go to state 623
    "<<<"                  shift, and go to state 624
    ">>>"                  shift, and go to state 625
    "&&"                   shift, and go to state 626
    "||"                   shift, and go to state 627
    "^^"                   shift, and go to state 628
    ".."                   shift, and go to state 629
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 630
    '|'                    shift, and go to state 631
    '^'                    shift, and go to state 632
    '&'                    shift, and go to state 633
    '<'                    shift, and go to state 634
    '>'                    shift, and go to state 635
    '-'                    shift, and go to state 636
    '+'                    shift, and go to state 637
    '*'                    shift, and go to state 638
    '/'                    shift, and go to state 639
    '%'                    shift, and go to state 640
    '.'                    shift, and go to state 641
    '['                    shift, and go to state 642
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1314


State 1231

  561 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 561 (let_variable_declaration)


State 1232

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1315


State 1233

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1316


State 1234

  278 new_type_declaration: '<' $@14 type_declaration '>' $@15 .

    $default  reduce using rule 278 (new_type_declaration)


State 1235

  284 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 284 (expr_new)


State 1236

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1317
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1237

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1318


State 1238

  319 expr_type_decl: "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 319 (expr_type_decl)


State 1239

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 808 ($@100)

    $@100  go to state 1319


State 1240

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 811 ($@102)

    $@102  go to state 1320


State 1241

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 814 ($@104)

    $@104  go to state 1321


State 1242

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1322


State 1243

  828 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1323


State 1244

  268 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  825 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 753

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 1324


State 1245

  829 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1325


State 1246

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1326
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1247

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1327
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1248

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1328
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1249

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1329


State 1250

  799 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1330

    $default  reduce using rule 786 (use_initializer)

    use_initializer  go to state 1331


State 1251

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1332


State 1252

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 . '(' make_variant_dim ')'

    '('  shift, and go to state 1333


State 1253

  480 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  481               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1334
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1335
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1254

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1336
    $@12              go to state 403


State 1255

  489 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1256

  324 expr_list: expr_list . ',' expr
  490 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1337


State 1257

  324 expr_list: expr_list . ',' expr
  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1338


State 1258

  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1339
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1259

  374 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 374 (func_addr_name)


State 1260

  498 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1261

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' . $@25 func_addr_name

    $default  reduce using rule 377 ($@25)

    $@25  go to state 1340


State 1262

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type . '>' $@27 func_addr_name

    '>'  shift, and go to state 1341


State 1263

  324 expr_list: expr_list . ',' expr
  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1342


State 1264

  774 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  775                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 855
    ":="  shift, and go to state 1343
    '='   shift, and go to state 857

    copy_or_move  go to state 1344


State 1265

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 369 (expr_named_call)


State 1266

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 972
    ']'  shift, and go to state 1345


State 1267

  776 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1346
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1268

  773 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1347
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1269

  772 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1348
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1270

  333 capture_entry: "<-" "name" .

    $default  reduce using rule 333 (capture_entry)


State 1271

  334 capture_entry: ":=" "name" .

    $default  reduce using rule 334 (capture_entry)


State 1272

  335 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1349


State 1273

  332 capture_entry: '=' "name" .

    $default  reduce using rule 332 (capture_entry)


State 1274

  331 capture_entry: '&' "name" .

    $default  reduce using rule 331 (capture_entry)


State 1275

  337 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1145
    ":="    shift, and go to state 1146
    "name"  shift, and go to state 1147
    '='     shift, and go to state 1148
    '&'     shift, and go to state 1149

    capture_entry  go to state 1350


State 1276

  339 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 339 (optional_capture_list)


State 1277

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1351

    $default  reduce using rule 239 ($@12)

    expression_block       go to state 1352
    $@12                   go to state 403
    block_or_simple_block  go to state 1353


State 1278

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1354


State 1279

  455 expr: expr "is" "type" '<' $@30 type_declaration_no_options . '>' $@31

    '>'  shift, and go to state 1355


State 1280

  497 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1281

  461 expr: expr "as" "type" '<' $@32 type_declaration . '>' $@33
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1356


State 1282

  495 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1283

  372 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 372 (expr_method_call)


State 1284

  492 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1285

  466 expr: expr '?' "as" "type" '<' $@34 . type_declaration '>' $@35

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 271
    type_declaration_no_options_no_dim  go to state 272
    type_declaration                    go to state 1357


State 1286

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  496          | expr '?' "as" "$f" '(' expr . ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1358


State 1287

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  494          | expr '.' "?." "$f" '(' expr . ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1359


State 1288

  491 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1289

  385 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 385 (expr_field)


State 1290

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  493          | expr '.' '.' "$f" '(' expr . ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1360


State 1291

  387 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 387 (expr_field)


State 1292

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1361


State 1293

  605 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}' .

    $default  reduce using rule 605 (enum_declaration)


State 1294

  626 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 1295

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  542 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 542 (variable_declaration)


State 1296

  293 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 293 (expression_try_catch)


State 1297

   96 expression_with_alias: "assume" "name" '=' expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 96 (expression_with_alias)


State 1298

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1362


State 1299

   87 expression_if_then_else: $@5 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1363


State 1300

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1364
    ','   shift, and go to state 856


State 1301

   93 expression_while_loop: $@7 "while" '(' expr . ')' optional_emit_semis expression_block
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1365


State 1302

   95 expression_with: $@8 "with" '(' expr . ')' optional_emit_semis expression_block
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1366


State 1303

  238 expression_block_finally: "finally" $@10 . '{' expressions $@11 '}'

    '{'  shift, and go to state 1367


State 1304

  301 tuple_expansion: "name" .

    $default  reduce using rule 301 (tuple_expansion)


State 1305

  302 tuple_expansion: tuple_expansion . ',' "name"
  303 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1368
    ')'  shift, and go to state 1369


State 1306

  307 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  557 variable_declaration_list: variable_declaration_list . SEMICOLON
  558                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 534
    "name"                 shift, and go to state 535
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1370

    SEMICOLON                        go to state 1371
    let_variable_name_with_pos_list  go to state 536
    let_variable_declaration         go to state 1372


State 1307

  137 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 150


State 1308

  507 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 507 (optional_public_or_private_member_variable)


State 1309

  508 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 508 (optional_public_or_private_member_variable)


State 1310

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  519                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1373
    "static"    shift, and go to state 1311

    $default  reduce using rule 509 (optional_static_member_variable)

    optional_static_member_variable  go to state 1374


State 1311

  510 optional_static_member_variable: "static" .

    $default  reduce using rule 510 (optional_static_member_variable)


State 1312

  511 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1375
    "sealed"    shift, and go to state 1376

    $default  reduce using rule 501 (optional_override)

    optional_override  go to state 1377


State 1313

  515 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 515 (struct_variable_declaration_list)


State 1314

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 560 (let_variable_declaration)


State 1315

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1330

    $default  reduce using rule 786 (use_initializer)

    use_initializer  go to state 1378


State 1316

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1330

    $default  reduce using rule 786 (use_initializer)

    use_initializer  go to state 1379


State 1317

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1380


State 1318

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1381


State 1319

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1382


State 1320

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1383


State 1321

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1384


State 1322

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 265 (optional_expr_list)

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    optional_expr_list      go to state 1385
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 666
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1323

  828 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 828 (make_table_decl)


State 1324

  268 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 268 (optional_expr_map_tuple_list)


State 1325

  829 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 465
    expr_reader                   go to state 466
    expr_call_pipe                go to state 467
    optional_expr_map_tuple_list  go to state 1386
    name_in_namespace             go to state 468
    expr_new                      go to state 469
    expr_cast                     go to state 470
    expr_type_decl                go to state 471
    expr_type_info                go to state 472
    block_or_lambda               go to state 473
    expr_full_block               go to state 474
    expr_numeric_const            go to state 475
    expr_named_call               go to state 476
    expr_method_call              go to state 477
    func_addr_expr                go to state 478
    expr_field                    go to state 479
    expr_call                     go to state 480
    expr                          go to state 598
    expr_generator                go to state 482
    expr_mtag                     go to state 483
    basic_type_declaration        go to state 484
    make_decl                     go to state 485
    make_struct_decl              go to state 486
    make_map_tuple                go to state 599
    make_tuple_call               go to state 487
    make_dim_decl                 go to state 488
    expr_map_tuple_list           go to state 1244
    make_table_decl               go to state 489
    array_comprehension           go to state 490


State 1326

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 310 (expr_cast)


State 1327

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 313 (expr_cast)


State 1328

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 316 (expr_cast)


State 1329

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1387
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1330

  787 use_initializer: "uninitialized" .

    $default  reduce using rule 787 (use_initializer)


State 1331

  799 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 799 (make_struct_decl)


State 1332

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1330

    $default  reduce using rule 786 (use_initializer)

    use_initializer  go to state 1388


State 1333

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963

    make_struct_fields  go to state 1389
    make_variant_dim    go to state 1390


State 1334

  480 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 480 (expr_generator)


State 1335

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  481 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1391


State 1336

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 482 (expr_generator)


State 1337

  490 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1338

  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1392


State 1339

  324 expr_list: expr_list . ',' expr
  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1393


State 1340

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 746
    "name"  shift, and go to state 59

    name_in_namespace  go to state 749
    func_addr_name     go to state 1394


State 1341

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' . $@27 func_addr_name

    $default  reduce using rule 380 ($@27)

    $@27  go to state 1395


State 1342

  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1396


State 1343

  775 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1397
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1344

  774 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1398
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1345

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1399


State 1346

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1400


State 1347

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  773 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 773 (make_struct_fields)


State 1348

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 772 (make_struct_fields)


State 1349

  335 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1401


State 1350

  337 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 337 (capture_list)


State 1351

  326 block_or_simple_block: "=>" . expr
  327                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "<-"                              shift, and go to state 1402
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1403
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1352

  325 block_or_simple_block: expression_block .

    $default  reduce using rule 325 (block_or_simple_block)


State 1353

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 340 (expr_full_block)


State 1354

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1404
    $@12              go to state 403


State 1355

  455 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' . $@31

    $default  reduce using rule 454 ($@31)

    $@31  go to state 1405


State 1356

  461 expr: expr "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 460 ($@33)

    $@33  go to state 1406


State 1357

  466 expr: expr '?' "as" "type" '<' $@34 type_declaration . '>' $@35
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1407


State 1358

  496 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1359

  494 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1360

  493 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1361

  694 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 1362

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1408

    $default  reduce using rule 70 (expression_else_one_liner)

    expression_else_one_liner  go to state 1409


State 1363

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1410


State 1364

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    expr_list               go to state 1411
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 594
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1365

   93 expression_while_loop: $@7 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1412


State 1366

   95 expression_with: $@8 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1413


State 1367

  238 expression_block_finally: "finally" $@10 '{' . expressions $@11 '}'

    $default  reduce using rule 262 (expressions)

    expressions  go to state 1414


State 1368

  302 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1415


State 1369

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1416
    '&'  shift, and go to state 411

    $default  reduce using rule 547 (optional_ref)

    optional_ref  go to state 1417


State 1370

  307 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 307 (expression_let)


State 1371

  557 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 557 (variable_declaration_list)


State 1372

  558 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 558 (variable_declaration_list)


State 1373

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@37 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1418

    $default  reduce using rule 504 (optional_constant)

    optional_constant  go to state 1419


State 1374

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1375
    "sealed"    shift, and go to state 1376

    $default  reduce using rule 501 (optional_override)

    optional_override  go to state 1420


State 1375

  502 optional_override: "override" .

    $default  reduce using rule 502 (optional_override)


State 1376

  503 optional_override: "sealed" .

    $default  reduce using rule 503 (optional_override)


State 1377

  511 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1308
    "private"  shift, and go to state 1309

    $default  reduce using rule 506 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1421


State 1378

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963
    '('     shift, and go to state 1422

    $default  reduce using rule 785 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1423
    make_struct_dim_list           go to state 1424
    make_struct_dim_decl           go to state 1425
    optional_make_struct_dim_decl  go to state 1426


State 1379

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963
    '('     shift, and go to state 1422

    $default  reduce using rule 785 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1423
    make_struct_dim_list           go to state 1424
    make_struct_dim_decl           go to state 1425
    optional_make_struct_dim_decl  go to state 1427


State 1380

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1381

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1428
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1382

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1330

    $default  reduce using rule 786 (use_initializer)

    use_initializer  go to state 1429


State 1383

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1330

    $default  reduce using rule 786 (use_initializer)

    use_initializer  go to state 1430


State 1384

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963

    make_struct_fields  go to state 1389
    make_variant_dim    go to state 1431


State 1385

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1432


State 1386

  829 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1433


State 1387

  324 expr_list: expr_list . ',' expr
  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 743

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 1434


State 1388

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963
    '('     shift, and go to state 1422

    $default  reduce using rule 785 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1423
    make_struct_dim_list           go to state 1424
    make_struct_dim_decl           go to state 1425
    optional_make_struct_dim_decl  go to state 1435


State 1389

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  778 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 972

    $default  reduce using rule 778 (make_variant_dim)


State 1390

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1436


State 1391

  481 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 481 (expr_generator)


State 1392

  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1437
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1393

  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1438


State 1394

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name .

    $default  reduce using rule 378 (func_addr_expr)


State 1395

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 746
    "name"  shift, and go to state 59

    name_in_namespace  go to state 749
    func_addr_name     go to state 1439


State 1396

  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 598
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 1440
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1397

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 775 (make_struct_fields)


State 1398

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 774 (make_struct_fields)


State 1399

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 370 (expr_named_call)


State 1400

  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 855
    ":="  shift, and go to state 1441
    '='   shift, and go to state 857

    copy_or_move  go to state 1442


State 1401

  335 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 335 (capture_entry)


State 1402

  327 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1443
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1403

  326 block_or_simple_block: "=>" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    ".."  error (nonassociative)

    $default  reduce using rule 326 (block_or_simple_block)


State 1404

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 341 (expr_full_block_assumed_piped)


State 1405

  455 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31 .

    $default  reduce using rule 455 (expr)


State 1406

  461 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 461 (expr)


State 1407

  466 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 465 ($@35)

    $@35  go to state 1444


State 1408

   71 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 862
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 863
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 867
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 872
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder           go to state 465
    expr_reader              go to state 466
    expression_if_one_liner  go to state 1445
    expr_call_pipe           go to state 467
    name_in_namespace        go to state 468
    expr_new                 go to state 469
    expression_break         go to state 1446
    expression_continue      go to state 1447
    expression_return        go to state 1448
    expression_yield         go to state 1449
    expr_cast                go to state 470
    expr_type_decl           go to state 471
    expr_type_info           go to state 472
    block_or_lambda          go to state 473
    expr_full_block          go to state 474
    expr_numeric_const       go to state 475
    expr_named_call          go to state 476
    expr_method_call         go to state 477
    func_addr_expr           go to state 478
    expr_field               go to state 479
    expr_call                go to state 480
    expr                     go to state 1450
    expr_generator           go to state 482
    expr_mtag                go to state 483
    basic_type_declaration   go to state 484
    make_decl                go to state 485
    make_struct_decl         go to state 486
    make_tuple_call          go to state 487
    make_dim_decl            go to state 488
    make_table_decl          go to state 489
    array_comprehension      go to state 490


State 1409

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1451


State 1410

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 81 ($@2)
    '{'       [reduce using rule 84 ($@4)]
    $default  reduce using rule 84 ($@4)

    expression_if_block  go to state 1452
    $@2                  go to state 1453
    $@4                  go to state 1454


State 1411

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1002
    ')'  shift, and go to state 1455


State 1412

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1456
    $@12              go to state 403


State 1413

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1457
    $@12              go to state 403


State 1414

  238 expression_block_finally: "finally" $@10 '{' expressions . $@11 '}'
  263 expressions: expressions . expression_any
  264            | expressions . error

    error                             shift, and go to state 861
    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 862
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 863
    "try"                             shift, and go to state 864
    "table"                           shift, and go to state 425
    "delete"                          shift, and go to state 865
    "deref"                           shift, and go to state 426
    "assume"                          shift, and go to state 866
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 867
    "pass"                            shift, and go to state 868
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 869
    "goto"                            shift, and go to state 870
    "unsafe"                          shift, and go to state 871
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 872
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 464

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 237 ($@11)

    SEMICOLON                         go to state 873
    string_builder                    go to state 465
    expr_reader                       go to state 466
    expression_label                  go to state 874
    expression_goto                   go to state 875
    expression_if_one_liner           go to state 876
    expression_if_then_else           go to state 877
    $@5                               go to state 878
    expression_if_then_else_oneliner  go to state 879
    expression_for_loop               go to state 880
    $@6                               go to state 881
    expression_unsafe                 go to state 882
    expression_while_loop             go to state 883
    $@7                               go to state 884
    expression_with                   go to state 885
    $@8                               go to state 886
    expression_with_alias             go to state 887
    $@11                              go to state 1458
    expr_call_pipe                    go to state 467
    expression_any                    go to state 889
    name_in_namespace                 go to state 468
    expression_delete                 go to state 890
    expr_new                          go to state 469
    expression_break                  go to state 891
    expression_continue               go to state 892
    expression_return                 go to state 893
    expression_yield                  go to state 894
    expression_try_catch              go to state 895
    kwd_let                           go to state 896
    expression_let                    go to state 897
    expr_cast                         go to state 470
    expr_type_decl                    go to state 471
    expr_type_info                    go to state 472
    block_or_lambda                   go to state 473
    expr_full_block                   go to state 474
    expr_numeric_const                go to state 475
    expr_assign                       go to state 898
    expr_named_call                   go to state 476
    expr_method_call                  go to state 477
    func_addr_expr                    go to state 478
    expr_field                        go to state 479
    expr_call                         go to state 480
    expr                              go to state 899
    expr_generator                    go to state 482
    expr_mtag                         go to state 483
    basic_type_declaration            go to state 484
    make_decl                         go to state 485
    make_struct_decl                  go to state 486
    make_tuple_call                   go to state 487
    make_dim_decl                     go to state 488
    make_table_decl                   go to state 489
    array_comprehension               go to state 490


State 1415

  302 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 302 (tuple_expansion)


State 1416

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 59
    '$'          shift, and go to state 265

    name_in_namespace                   go to state 266
    basic_type_declaration              go to state 267
    structure_type_declaration          go to state 268
    auto_type_declaration               go to state 269
    bitfield_type_declaration           go to state 270
    type_declaration_no_options         go to state 1459
    type_declaration_no_options_no_dim  go to state 272


State 1417

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 541
    ":="  shift, and go to state 542
    '='   shift, and go to state 543

    copy_or_move_or_clone  go to state 1460


State 1418

  505 optional_constant: "const" .

    $default  reduce using rule 505 (optional_constant)


State 1419

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@37 function_declaration_header SEMICOLON

    $default  reduce using rule 516 ($@37)

    $@37  go to state 1461


State 1420

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1418

    $default  reduce using rule 504 (optional_constant)

    optional_constant  go to state 1462


State 1421

  511 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_declaration         go to state 1463
    variable_name_with_pos_list  go to state 682


State 1422

  780 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963

    make_struct_fields  go to state 1464


State 1423

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  782 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 972

    $default  reduce using rule 782 (make_struct_dim_decl)


State 1424

  781 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  783 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1465

    $default  reduce using rule 832 (optional_comma)

    optional_comma  go to state 1466


State 1425

  784 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 784 (optional_make_struct_dim_decl)


State 1426

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1467


State 1427

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1468


State 1428

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1469


State 1429

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963
    '('     shift, and go to state 1422

    $default  reduce using rule 785 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1423
    make_struct_dim_list           go to state 1424
    make_struct_dim_decl           go to state 1425
    optional_make_struct_dim_decl  go to state 1470


State 1430

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963
    '('     shift, and go to state 1422

    $default  reduce using rule 785 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1423
    make_struct_dim_list           go to state 1424
    make_struct_dim_decl           go to state 1425
    optional_make_struct_dim_decl  go to state 1471


State 1431

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1472


State 1432

  819 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 819 (make_dim_decl)


State 1433

  829 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 829 (make_table_decl)


State 1434

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1473


State 1435

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1474


State 1436

  796 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')' .

    $default  reduce using rule 796 (make_struct_decl)


State 1437

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ';'    shift, and go to state 1475

    $default  reduce using rule 830 (array_comprehension_where)

    array_comprehension_where  go to state 1476


State 1438

  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1477
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1439

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name .

    $default  reduce using rule 381 (func_addr_expr)


State 1440

  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1475

    $default  reduce using rule 830 (array_comprehension_where)

    array_comprehension_where  go to state 1478


State 1441

  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1479
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1442

  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1480
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1443

  327 block_or_simple_block: "=>" "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 327 (block_or_simple_block)


State 1444

  466 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 466 (expr)


State 1445

   71 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 71 (expression_else_one_liner)


State 1446

   75 expression_if_one_liner: expression_break .

    $default  reduce using rule 75 (expression_if_one_liner)


State 1447

   76 expression_if_one_liner: expression_continue .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1448

   73 expression_if_one_liner: expression_return .

    $default  reduce using rule 73 (expression_if_one_liner)


State 1449

   74 expression_if_one_liner: expression_yield .

    $default  reduce using rule 74 (expression_if_one_liner)


State 1450

   72 expression_if_one_liner: expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 72 (expression_if_one_liner)


State 1451

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 88 (expression_if_then_else_oneliner)


State 1452

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1481
    "elif"         shift, and go to state 1482
    "static_elif"  shift, and go to state 1483

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1484
    expression_else      go to state 1485


State 1453

   83 expression_if_block: $@2 . '{' expressions $@3 '}' expression_block_finally

    '{'  shift, and go to state 1486


State 1454

   85 expression_if_block: $@4 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 862
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 863
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 867
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 872
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder           go to state 465
    expr_reader              go to state 466
    expression_if_one_liner  go to state 1487
    expr_call_pipe           go to state 467
    name_in_namespace        go to state 468
    expr_new                 go to state 469
    expression_break         go to state 1446
    expression_continue      go to state 1447
    expression_return        go to state 1448
    expression_yield         go to state 1449
    expr_cast                go to state 470
    expr_type_decl           go to state 471
    expr_type_info           go to state 472
    block_or_lambda          go to state 473
    expr_full_block          go to state 474
    expr_numeric_const       go to state 475
    expr_named_call          go to state 476
    expr_method_call         go to state 477
    func_addr_expr           go to state 478
    expr_field               go to state 479
    expr_call                go to state 480
    expr                     go to state 1450
    expr_generator           go to state 482
    expr_mtag                go to state 483
    basic_type_declaration   go to state 484
    make_decl                go to state 485
    make_struct_decl         go to state 486
    make_tuple_call          go to state 487
    make_dim_decl            go to state 488
    make_table_decl          go to state 489
    array_comprehension      go to state 490


State 1455

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1488


State 1456

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 93 (expression_while_loop)


State 1457

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 95 (expression_with)


State 1458

  238 expression_block_finally: "finally" $@10 '{' expressions $@11 . '}'

    '}'  shift, and go to state 1489


State 1459

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 541
    ":="  shift, and go to state 542
    '='   shift, and go to state 543

    copy_or_move_or_clone  go to state 1490


State 1460

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1491
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1461

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 184
    "bool"      shift, and go to state 185
    "string"    shift, and go to state 186
    "int"       shift, and go to state 187
    "int2"      shift, and go to state 188
    "int3"      shift, and go to state 189
    "int4"      shift, and go to state 190
    "uint"      shift, and go to state 191
    "uint2"     shift, and go to state 192
    "uint3"     shift, and go to state 193
    "uint4"     shift, and go to state 194
    "float"     shift, and go to state 195
    "float2"    shift, and go to state 196
    "float3"    shift, and go to state 197
    "float4"    shift, and go to state 198
    "range"     shift, and go to state 199
    "urange"    shift, and go to state 200
    "range64"   shift, and go to state 201
    "urange64"  shift, and go to state 202
    "int64"     shift, and go to state 203
    "uint64"    shift, and go to state 204
    "double"    shift, and go to state 205
    "int8"      shift, and go to state 206
    "uint8"     shift, and go to state 207
    "int16"     shift, and go to state 208
    "uint16"    shift, and go to state 209
    "++"        shift, and go to state 210
    "--"        shift, and go to state 211
    "name"      shift, and go to state 212

    function_name                go to state 213
    function_declaration_header  go to state 1492


State 1462

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@38 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 518 ($@38)

    $@38  go to state 1493


State 1463

  511 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 511 (structure_variable_declaration)


State 1464

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  780 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 972
    ')'  shift, and go to state 1494


State 1465

  781 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  833 optional_comma: ',' .

    '('  shift, and go to state 1495

    $default  reduce using rule 833 (optional_comma)


State 1466

  783 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 783 (make_struct_dim_decl)


State 1467

  790 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 790 (make_struct_decl)


State 1468

  793 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 793 (make_struct_decl)


State 1469

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 322 (expr_type_info)


State 1470

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1496


State 1471

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1497


State 1472

  815 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 815 (make_dim_decl)


State 1473

  823 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 823 (make_dim_decl)


State 1474

  805 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 805 (make_tuple_call)


State 1475

  831 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1498


State 1476

  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1499


State 1477

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ';'    shift, and go to state 1475

    $default  reduce using rule 830 (array_comprehension_where)

    array_comprehension_where  go to state 1500


State 1478

  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1501


State 1479

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 777 (make_struct_fields)


State 1480

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 776 (make_struct_fields)


State 1481

   66 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1502


State 1482

   59 elif_or_static_elif: "elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1483

   60 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 60 (elif_or_static_elif)


State 1484

   67 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1503


State 1485

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 87 (expression_if_then_else)


State 1486

   83 expression_if_block: $@2 '{' . expressions $@3 '}' expression_block_finally

    $default  reduce using rule 262 (expressions)

    expressions  go to state 1504


State 1487

   85 expression_if_block: $@4 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1505


State 1488

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1506
    $@12              go to state 403


State 1489

  238 expression_block_finally: "finally" $@10 '{' expressions $@11 '}' .

    $default  reduce using rule 238 (expression_block_finally)


State 1490

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1507
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1491

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 608
    "as"                   shift, and go to state 609
    "<<"                   shift, and go to state 610
    ">>"                   shift, and go to state 611
    "++"                   shift, and go to state 612
    "--"                   shift, and go to state 613
    "<="                   shift, and go to state 614
    ">="                   shift, and go to state 615
    "=="                   shift, and go to state 616
    "!="                   shift, and go to state 617
    "->"                   shift, and go to state 618
    "??"                   shift, and go to state 619
    "?."                   shift, and go to state 620
    "?["                   shift, and go to state 621
    "<|"                   shift, and go to state 622
    "|>"                   shift, and go to state 623
    "<<<"                  shift, and go to state 624
    ">>>"                  shift, and go to state 625
    "&&"                   shift, and go to state 626
    "||"                   shift, and go to state 627
    "^^"                   shift, and go to state 628
    ".."                   shift, and go to state 629
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 630
    '|'                    shift, and go to state 631
    '^'                    shift, and go to state 632
    '&'                    shift, and go to state 633
    '<'                    shift, and go to state 634
    '>'                    shift, and go to state 635
    '-'                    shift, and go to state 636
    '+'                    shift, and go to state 637
    '*'                    shift, and go to state 638
    '/'                    shift, and go to state 639
    '%'                    shift, and go to state 640
    '.'                    shift, and go to state 641
    '['                    shift, and go to state 642
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1508


State 1492

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1509


State 1493

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 184
    "bool"      shift, and go to state 185
    "string"    shift, and go to state 186
    "int"       shift, and go to state 187
    "int2"      shift, and go to state 188
    "int3"      shift, and go to state 189
    "int4"      shift, and go to state 190
    "uint"      shift, and go to state 191
    "uint2"     shift, and go to state 192
    "uint3"     shift, and go to state 193
    "uint4"     shift, and go to state 194
    "float"     shift, and go to state 195
    "float2"    shift, and go to state 196
    "float3"    shift, and go to state 197
    "float4"    shift, and go to state 198
    "range"     shift, and go to state 199
    "urange"    shift, and go to state 200
    "range64"   shift, and go to state 201
    "urange64"  shift, and go to state 202
    "int64"     shift, and go to state 203
    "uint64"    shift, and go to state 204
    "double"    shift, and go to state 205
    "int8"      shift, and go to state 206
    "uint8"     shift, and go to state 207
    "int16"     shift, and go to state 208
    "uint16"    shift, and go to state 209
    "++"        shift, and go to state 210
    "--"        shift, and go to state 211
    "name"      shift, and go to state 212

    function_name                go to state 213
    function_declaration_header  go to state 1510


State 1494

  780 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 780 (make_struct_dim_list)


State 1495

  781 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 756
    "name"  shift, and go to state 963

    make_struct_fields  go to state 1511


State 1496

  809 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 809 (make_dim_decl)


State 1497

  812 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 812 (make_dim_decl)


State 1498

  831 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1512
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1499

  834 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 834 (array_comprehension)


State 1500

  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1513


State 1501

  836 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 836 (array_comprehension)


State 1502

   66 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1514
    $@12              go to state 403


State 1503

   67 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "unsafe"                          shift, and go to state 431
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    '{'                               shift, and go to state 464

    string_builder          go to state 465
    expr_reader             go to state 466
    expr_call_pipe          go to state 467
    name_in_namespace       go to state 468
    expr_new                go to state 469
    expr_cast               go to state 470
    expr_type_decl          go to state 471
    expr_type_info          go to state 472
    block_or_lambda         go to state 473
    expr_full_block         go to state 474
    expr_numeric_const      go to state 475
    expr_named_call         go to state 476
    expr_method_call        go to state 477
    func_addr_expr          go to state 478
    expr_field              go to state 479
    expr_call               go to state 480
    expr                    go to state 1515
    expr_generator          go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1504

   83 expression_if_block: $@2 '{' expressions . $@3 '}' expression_block_finally
  263 expressions: expressions . expression_any
  264            | expressions . error

    error                             shift, and go to state 861
    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 862
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 863
    "try"                             shift, and go to state 864
    "table"                           shift, and go to state 425
    "delete"                          shift, and go to state 865
    "deref"                           shift, and go to state 426
    "assume"                          shift, and go to state 866
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 867
    "pass"                            shift, and go to state 868
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 869
    "goto"                            shift, and go to state 870
    "unsafe"                          shift, and go to state 871
    "fixed_array"                     shift, and go to state 432
    "default"                         shift, and go to state 433
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 434
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 435
    "variant"                         shift, and go to state 436
    "generator"                       shift, and go to state 437
    "yield"                           shift, and go to state 872
    "++"                              shift, and go to state 438
    "--"                              shift, and go to state 439
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 440
    "$i"                              shift, and go to state 441
    "$v"                              shift, and go to state 442
    "$b"                              shift, and go to state 443
    "$a"                              shift, and go to state 444
    "$c"                              shift, and go to state 445
    "..."                             shift, and go to state 446
    "integer constant"                shift, and go to state 447
    "long integer constant"           shift, and go to state 448
    "unsigned integer constant"       shift, and go to state 449
    "unsigned long integer constant"  shift, and go to state 450
    "unsigned int8 constant"          shift, and go to state 451
    "floating point constant"         shift, and go to state 452
    "double constant"                 shift, and go to state 453
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 464

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 82 ($@3)

    SEMICOLON                         go to state 873
    string_builder                    go to state 465
    expr_reader                       go to state 466
    expression_label                  go to state 874
    expression_goto                   go to state 875
    expression_if_one_liner           go to state 876
    $@3                               go to state 1516
    expression_if_then_else           go to state 877
    $@5                               go to state 878
    expression_if_then_else_oneliner  go to state 879
    expression_for_loop               go to state 880
    $@6                               go to state 881
    expression_unsafe                 go to state 882
    expression_while_loop             go to state 883
    $@7                               go to state 884
    expression_with                   go to state 885
    $@8                               go to state 886
    expression_with_alias             go to state 887
    expr_call_pipe                    go to state 467
    expression_any                    go to state 889
    name_in_namespace                 go to state 468
    expression_delete                 go to state 890
    expr_new                          go to state 469
    expression_break                  go to state 891
    expression_continue               go to state 892
    expression_return                 go to state 893
    expression_yield                  go to state 894
    expression_try_catch              go to state 895
    kwd_let                           go to state 896
    expression_let                    go to state 897
    expr_cast                         go to state 470
    expr_type_decl                    go to state 471
    expr_type_info                    go to state 472
    block_or_lambda                   go to state 473
    expr_full_block                   go to state 474
    expr_numeric_const                go to state 475
    expr_assign                       go to state 898
    expr_named_call                   go to state 476
    expr_method_call                  go to state 477
    func_addr_expr                    go to state 478
    expr_field                        go to state 479
    expr_call                         go to state 480
    expr                              go to state 899
    expr_generator                    go to state 482
    expr_mtag                         go to state 483
    basic_type_declaration            go to state 484
    make_decl                         go to state 485
    make_struct_decl                  go to state 486
    make_tuple_call                   go to state 487
    make_dim_decl                     go to state 488
    make_table_decl                   go to state 489
    array_comprehension               go to state 490


State 1505

   85 expression_if_block: $@4 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 85 (expression_if_block)


State 1506

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 90 (expression_for_loop)


State 1507

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 608
    "as"                   shift, and go to state 609
    "<<"                   shift, and go to state 610
    ">>"                   shift, and go to state 611
    "++"                   shift, and go to state 612
    "--"                   shift, and go to state 613
    "<="                   shift, and go to state 614
    ">="                   shift, and go to state 615
    "=="                   shift, and go to state 616
    "!="                   shift, and go to state 617
    "->"                   shift, and go to state 618
    "??"                   shift, and go to state 619
    "?."                   shift, and go to state 620
    "?["                   shift, and go to state 621
    "<|"                   shift, and go to state 622
    "|>"                   shift, and go to state 623
    "<<<"                  shift, and go to state 624
    ">>>"                  shift, and go to state 625
    "&&"                   shift, and go to state 626
    "||"                   shift, and go to state 627
    "^^"                   shift, and go to state 628
    ".."                   shift, and go to state 629
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 630
    '|'                    shift, and go to state 631
    '^'                    shift, and go to state 632
    '&'                    shift, and go to state 633
    '<'                    shift, and go to state 634
    '>'                    shift, and go to state 635
    '-'                    shift, and go to state 636
    '+'                    shift, and go to state 637
    '*'                    shift, and go to state 638
    '/'                    shift, and go to state 639
    '%'                    shift, and go to state 640
    '.'                    shift, and go to state 641
    '['                    shift, and go to state 642
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1517


State 1508

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1509

  517 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON .

    $default  reduce using rule 517 (struct_variable_declaration_list)


State 1510

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1518


State 1511

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  781 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 972
    ')'  shift, and go to state 1519


State 1512

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'
  831 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642

    $default  reduce using rule 831 (array_comprehension_where)


State 1513

  835 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 835 (array_comprehension)


State 1514

   66 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 66 (expression_else)


State 1515

   67 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' basic_type_declaration '(' ')'
  387           | expr . '.' basic_type_declaration '(' expr_list ')'
  390           | expr . '.' $@28 error $@29
  412 expr: expr . "<<" expr
  413     | expr . ">>" expr
  414     | expr . "<<<" expr
  415     | expr . ">>>" expr
  416     | expr . '+' expr
  417     | expr . '-' expr
  418     | expr . '*' expr
  419     | expr . '/' expr
  420     | expr . '%' expr
  421     | expr . '<' expr
  422     | expr . '>' expr
  423     | expr . "==" expr
  424     | expr . "!=" expr
  425     | expr . "<=" expr
  426     | expr . ">=" expr
  427     | expr . '&' expr
  428     | expr . '|' expr
  429     | expr . '^' expr
  430     | expr . "&&" expr
  431     | expr . "||" expr
  432     | expr . "^^" expr
  433     | expr . ".." expr
  436     | expr . "++"
  437     | expr . "--"
  439     | expr . '[' expr ']'
  440     | expr . '.' '[' expr ']'
  441     | expr . "?[" expr ']'
  442     | expr . '.' "?[" expr ']'
  443     | expr . "?." "name"
  444     | expr . '.' "?." "name"
  451     | expr . "??" expr
  452     | expr . '?' expr ':' expr
  455     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  456     | expr . "is" basic_type_declaration
  457     | expr . "is" "name"
  458     | expr . "as" "name"
  461     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  462     | expr . "as" basic_type_declaration
  463     | expr . '?' "as" "name"
  466     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  467     | expr . '?' "as" basic_type_declaration
  475     | expr . "<|" expr
  476     | expr . "|>" expr
  477     | expr . "|>" basic_type_declaration
  491 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr . "?." "$f" '(' expr ')'
  493          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr . "as" "$f" '(' expr ')'
  496          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 608
    "as"   shift, and go to state 609
    "<<"   shift, and go to state 610
    ">>"   shift, and go to state 611
    "++"   shift, and go to state 612
    "--"   shift, and go to state 613
    "<="   shift, and go to state 614
    ">="   shift, and go to state 615
    "=="   shift, and go to state 616
    "!="   shift, and go to state 617
    "->"   shift, and go to state 618
    "??"   shift, and go to state 619
    "?."   shift, and go to state 620
    "?["   shift, and go to state 621
    "<|"   shift, and go to state 622
    "|>"   shift, and go to state 623
    "<<<"  shift, and go to state 624
    ">>>"  shift, and go to state 625
    "&&"   shift, and go to state 626
    "||"   shift, and go to state 627
    "^^"   shift, and go to state 628
    ".."   shift, and go to state 629
    '?'    shift, and go to state 630
    '|'    shift, and go to state 631
    '^'    shift, and go to state 632
    '&'    shift, and go to state 633
    '<'    shift, and go to state 634
    '>'    shift, and go to state 635
    '-'    shift, and go to state 636
    '+'    shift, and go to state 637
    '*'    shift, and go to state 638
    '/'    shift, and go to state 639
    '%'    shift, and go to state 640
    '.'    shift, and go to state 641
    '['    shift, and go to state 642
    ')'    shift, and go to state 1520


State 1516

   83 expression_if_block: $@2 '{' expressions $@3 . '}' expression_block_finally

    '}'  shift, and go to state 1521


State 1517

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1518

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1522
    $@12              go to state 403


State 1519

  781 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 781 (make_struct_dim_list)


State 1520

   67 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 148

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 149
    optional_emit_semis  go to state 1523


State 1521

   83 expression_if_block: $@2 '{' expressions $@3 '}' . expression_block_finally

    "finally"  shift, and go to state 1201

    $default  reduce using rule 235 (expression_block_finally)

    expression_block_finally  go to state 1524


State 1522

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 519 (struct_variable_declaration_list)


State 1523

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1525
    $@12              go to state 403


State 1524

   83 expression_if_block: $@2 '{' expressions $@3 '}' expression_block_finally .

    $default  reduce using rule 83 (expression_if_block)


State 1525

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1481
    "elif"         shift, and go to state 1482
    "static_elif"  shift, and go to state 1483

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1484
    expression_else      go to state 1526


State 1526

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 67 (expression_else)
