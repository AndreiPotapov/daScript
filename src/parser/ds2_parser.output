Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"


State 60 conflicts: 1 shift/reduce
State 376 conflicts: 1 shift/reduce
State 467 conflicts: 2 shift/reduce
State 472 conflicts: 1 shift/reduce
State 572 conflicts: 2 shift/reduce
State 592 conflicts: 1 shift/reduce
State 610 conflicts: 1 shift/reduce
State 755 conflicts: 1 shift/reduce
State 765 conflicts: 1 shift/reduce
State 847 conflicts: 2 shift/reduce
State 913 conflicts: 1 shift/reduce
State 1307 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty
   65                          | "else" expression_if_one_liner

   66 expression_if_one_liner: expr
   67                        | expression_return_no_pipe
   68                        | expression_yield_no_pipe
   69                        | expression_break
   70                        | expression_continue

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else
   72                        | expression_if_one_liner "if" expr expression_else_one_liner "end of expression"

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 expression_with_alias: "assume" "name" '=' expr

   78 annotation_argument_value: string_constant
   79                          | "name"
   80                          | "integer constant"
   81                          | "floating point constant"
   82                          | "true"
   83                          | "false"

   84 annotation_argument_value_list: annotation_argument_value
   85                               | annotation_argument_value_list ',' annotation_argument_value

   86 annotation_argument_name: "name"
   87                         | "type"
   88                         | "in"

   89 annotation_argument: annotation_argument_name '=' string_constant
   90                    | annotation_argument_name '=' "name"
   91                    | annotation_argument_name '=' "integer constant"
   92                    | annotation_argument_name '=' "floating point constant"
   93                    | annotation_argument_name '=' "true"
   94                    | annotation_argument_name '=' "false"
   95                    | annotation_argument_name
   96                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   97 annotation_argument_list: annotation_argument
   98                         | annotation_argument_list ',' annotation_argument

   99 annotation_declaration_name: name_in_namespace
  100                            | "require"
  101                            | "private"

  102 annotation_declaration_basic: annotation_declaration_name
  103                             | annotation_declaration_name '(' annotation_argument_list ')'

  104 annotation_declaration: annotation_declaration_basic
  105                       | '!' annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration
  109                       | '(' annotation_declaration ')'
  110                       | "|>" annotation_declaration

  111 annotation_list: annotation_declaration
  112                | annotation_list ',' annotation_declaration

  113 optional_annotation_list: %empty
  114                         | '[' annotation_list ']'

  115 optional_function_argument_list: %empty
  116                                | '(' ')'
  117                                | '(' function_argument_list ')'

  118 optional_function_type: %empty
  119                       | ':' type_declaration

  120 function_name: "name"
  121              | "operator" '!'
  122              | "operator" '~'
  123              | "operator" "+="
  124              | "operator" "-="
  125              | "operator" "*="
  126              | "operator" "/="
  127              | "operator" "%="
  128              | "operator" "&="
  129              | "operator" "|="
  130              | "operator" "^="
  131              | "operator" "&&="
  132              | "operator" "||="
  133              | "operator" "^^="
  134              | "operator" "&&"
  135              | "operator" "||"
  136              | "operator" "^^"
  137              | "operator" '+'
  138              | "operator" '-'
  139              | "operator" '*'
  140              | "operator" '/'
  141              | "operator" '%'
  142              | "operator" '<'
  143              | "operator" '>'
  144              | "operator" ".."
  145              | "operator" "=="
  146              | "operator" "!="
  147              | "operator" "<="
  148              | "operator" ">="
  149              | "operator" '&'
  150              | "operator" '|'
  151              | "operator" '^'
  152              | "++" "operator"
  153              | "--" "operator"
  154              | "operator" "++"
  155              | "operator" "--"
  156              | "operator" "<<"
  157              | "operator" ">>"
  158              | "operator" "<<="
  159              | "operator" ">>="
  160              | "operator" "<<<"
  161              | "operator" ">>>"
  162              | "operator" "<<<="
  163              | "operator" ">>>="
  164              | "operator" '[' ']'
  165              | "operator" "?[" ']'
  166              | "operator" '.'
  167              | "operator" "?."
  168              | "operator" '.' "name"
  169              | "operator" '.' "name" ":="
  170              | "operator" "?." "name"
  171              | "operator" ":="
  172              | "operator" "delete"
  173              | "operator" "??"
  174              | "operator" "is"
  175              | "operator" "as"
  176              | "operator" "is" "name"
  177              | "operator" "as" "name"
  178              | "operator" '?' "as"
  179              | "operator" '?' "as" "name"
  180              | "bool"
  181              | "string"
  182              | "int"
  183              | "int2"
  184              | "int3"
  185              | "int4"
  186              | "uint"
  187              | "uint2"
  188              | "uint3"
  189              | "uint4"
  190              | "float"
  191              | "float2"
  192              | "float3"
  193              | "float4"
  194              | "range"
  195              | "urange"
  196              | "range64"
  197              | "urange64"
  198              | "int64"
  199              | "uint64"
  200              | "double"
  201              | "int8"
  202              | "uint8"
  203              | "int16"
  204              | "uint16"

  205 global_function_declaration: optional_annotation_list "def" function_declaration

  206 optional_public_or_private_function: %empty
  207                                    | "private"
  208                                    | "public"

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type

  210 $@2: %empty

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  212 expression_block: "begin of code block" expressions "end of code block"
  213                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  214 expr_call_pipe: expr expr_full_block_assumed_piped
  215               | expression_keyword expr_full_block_assumed_piped

  216 expression_any: "end of expression"
  217               | expr_pipe
  218               | expr_keyword
  219               | expr_assign_pipe
  220               | expr_assign "end of expression"
  221               | expression_delete "end of expression"
  222               | expression_let
  223               | expression_while_loop
  224               | expression_unsafe
  225               | expression_with
  226               | expression_with_alias
  227               | expression_for_loop
  228               | expression_break "end of expression"
  229               | expression_continue "end of expression"
  230               | expression_return
  231               | expression_yield
  232               | expression_if_then_else
  233               | expression_try_catch
  234               | expression_label "end of expression"
  235               | expression_goto "end of expression"
  236               | "pass" "end of expression"

  237 expressions: %empty
  238            | expressions expression_any
  239            | expressions error

  240 expr_keyword: "keyword" expr expression_block

  241 optional_expr_list: %empty
  242                   | expr_list

  243 optional_expr_list_in_braces: %empty
  244                             | '(' optional_expr_list ')'

  245 type_declaration_no_options_list: type_declaration
  246                                 | type_declaration_no_options_list "end of expression" type_declaration

  247 $@3: %empty

  248 $@4: %empty

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr

  250 $@5: %empty

  251 $@6: %empty

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

  253 expr_pipe: expr_assign " <|" expr_block
  254          | "@ <|" expr_block
  255          | "@@ <|" expr_block
  256          | "$ <|" expr_block
  257          | expr_call_pipe

  258 name_in_namespace: "name"
  259                  | "name" "::" "name"
  260                  | "::" "name"

  261 expression_delete: "delete" expr
  262                  | "delete" "explicit" expr

  263 $@7: %empty

  264 $@8: %empty

  265 new_type_declaration: '<' $@7 type_declaration '>' $@8
  266                     | structure_type_declaration

  267 expr_new: "new" new_type_declaration
  268         | "new" new_type_declaration '(' ')'
  269         | "new" new_type_declaration '(' expr_list ')'
  270         | "new" new_type_declaration '(' make_struct_single ')'
  271         | "new" make_decl

  272 expression_break: "break"

  273 expression_continue: "continue"

  274 expression_return_no_pipe: "return"
  275                          | "return" expr_list
  276                          | "return" "<-" expr_list

  277 expression_return: expression_return_no_pipe "end of expression"
  278                  | "return" expr_pipe
  279                  | "return" "<-" expr_pipe

  280 expression_yield_no_pipe: "yield" expr
  281                         | "yield" "<-" expr

  282 expression_yield: expression_yield_no_pipe "end of expression"
  283                 | "yield" expr_pipe
  284                 | "yield" "<-" expr_pipe

  285 expression_try_catch: "try" expression_block "recover" expression_block

  286 kwd_let_var_or_nothing: "let"
  287                       | "var"
  288                       | %empty

  289 kwd_let: "let"
  290        | "var"

  291 optional_in_scope: "inscope"
  292                  | %empty

  293 tuple_expansion: "name"
  294                | tuple_expansion ',' "name"

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  297 expression_let: kwd_let optional_in_scope let_variable_declaration
  298               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  299 $@9: %empty

  300 $@10: %empty

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr

  302 $@11: %empty

  303 $@12: %empty

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr

  305 $@13: %empty

  306 $@14: %empty

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr

  308 $@15: %empty

  309 $@16: %empty

  310 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16

  311 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  312               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  314 expr_list: expr
  315          | expr_list ',' expr

  316 block_or_simple_block: expression_block
  317                      | "=>" expr
  318                      | "=>" "<-" expr

  319 block_or_lambda: '$'
  320                | '@'
  321                | '@' '@'

  322 capture_entry: '&' "name"
  323              | '=' "name"
  324              | "<-" "name"
  325              | ":=" "name"

  326 capture_list: capture_entry
  327             | capture_list ',' capture_entry

  328 optional_capture_list: %empty
  329                      | '[' '[' capture_list ']' ']'

  330 expr_block: expression_block
  331           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  334 expr_numeric_const: "integer constant"
  335                   | "unsigned integer constant"
  336                   | "long integer constant"
  337                   | "unsigned long integer constant"
  338                   | "unsigned int8 constant"
  339                   | "floating point constant"
  340                   | "double constant"

  341 expr_assign: expr
  342            | expr '=' expr
  343            | expr "<-" expr
  344            | expr ":=" expr
  345            | expr "&=" expr
  346            | expr "|=" expr
  347            | expr "^=" expr
  348            | expr "&&=" expr
  349            | expr "||=" expr
  350            | expr "^^=" expr
  351            | expr "+=" expr
  352            | expr "-=" expr
  353            | expr "*=" expr
  354            | expr "/=" expr
  355            | expr "%=" expr
  356            | expr "<<=" expr
  357            | expr ">>=" expr
  358            | expr "<<<=" expr
  359            | expr ">>>=" expr

  360 expr_assign_pipe_right: "@ <|" expr_block
  361                       | "@@ <|" expr_block
  362                       | "$ <|" expr_block
  363                       | expr_call_pipe

  364 expr_assign_pipe: expr '=' expr_assign_pipe_right
  365                 | expr "<-" expr_assign_pipe_right
  366                 | expr "&=" expr_assign_pipe_right
  367                 | expr "|=" expr_assign_pipe_right
  368                 | expr "^=" expr_assign_pipe_right
  369                 | expr "&&=" expr_assign_pipe_right
  370                 | expr "||=" expr_assign_pipe_right
  371                 | expr "^^=" expr_assign_pipe_right
  372                 | expr "+=" expr_assign_pipe_right
  373                 | expr "-=" expr_assign_pipe_right
  374                 | expr "*=" expr_assign_pipe_right
  375                 | expr "/=" expr_assign_pipe_right
  376                 | expr "%=" expr_assign_pipe_right
  377                 | expr "<<=" expr_assign_pipe_right
  378                 | expr ">>=" expr_assign_pipe_right
  379                 | expr "<<<=" expr_assign_pipe_right
  380                 | expr ">>>=" expr_assign_pipe_right

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  382                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  383 expr_method_call: expr "->" "name" '(' ')'
  384                 | expr "->" "name" '(' expr_list ')'

  385 func_addr_name: name_in_namespace
  386               | "$i" '(' expr ')'

  387 func_addr_expr: '@' '@' func_addr_name

  388 $@17: %empty

  389 $@18: %empty

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name

  391 $@19: %empty

  392 $@20: %empty

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

  394 expr_field: expr '.' "name"
  395           | expr '.' '.' "name"
  396           | expr '.' "name" '(' ')'
  397           | expr '.' "name" '(' expr_list ')'

  398 $@21: %empty

  399 $@22: %empty

  400 expr_field: expr '.' $@21 error $@22

  401 expr_call: name_in_namespace '(' ')'
  402          | name_in_namespace '(' make_struct_single ')'
  403          | name_in_namespace '(' expr_list ')'
  404          | basic_type_declaration '(' ')'
  405          | basic_type_declaration '(' expr_list ')'

  406 expr: "null"
  407     | name_in_namespace
  408     | expr_numeric_const
  409     | expr_reader
  410     | string_builder
  411     | make_decl
  412     | "true"
  413     | "false"
  414     | expr_field
  415     | expr_mtag
  416     | '!' expr
  417     | '~' expr
  418     | '+' expr
  419     | '-' expr
  420     | expr "<<" expr
  421     | expr ">>" expr
  422     | expr "<<<" expr
  423     | expr ">>>" expr
  424     | expr '+' expr
  425     | expr '-' expr
  426     | expr '*' expr
  427     | expr '/' expr
  428     | expr '%' expr
  429     | expr '<' expr
  430     | expr '>' expr
  431     | expr "==" expr
  432     | expr "!=" expr
  433     | expr "<=" expr
  434     | expr ">=" expr
  435     | expr '&' expr
  436     | expr '|' expr
  437     | expr '^' expr
  438     | expr "&&" expr
  439     | expr "||" expr
  440     | expr "^^" expr
  441     | expr ".." expr
  442     | "++" expr
  443     | "--" expr
  444     | expr "++"
  445     | expr "--"
  446     | '(' expr_list optional_comma ')'
  447     | expr '[' expr ']'
  448     | expr '.' '[' expr ']'
  449     | expr "?[" expr ']'
  450     | expr '.' "?[" expr ']'
  451     | expr "?." "name"
  452     | expr '.' "?." "name"
  453     | func_addr_expr
  454     | expr_call
  455     | '*' expr
  456     | "deref" '(' expr ')'
  457     | "addr" '(' expr ')'
  458     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  460     | expr "??" expr
  461     | expr '?' expr ':' expr

  462 $@23: %empty

  463 $@24: %empty

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr "is" basic_type_declaration
  466     | expr "is" "name"
  467     | expr "as" "name"

  468 $@25: %empty

  469 $@26: %empty

  470 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr "as" basic_type_declaration
  472     | expr '?' "as" "name"

  473 $@27: %empty

  474 $@28: %empty

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr '?' "as" basic_type_declaration
  477     | expr_type_info
  478     | expr_type_decl
  479     | expr_cast
  480     | expr_new
  481     | expr_method_call
  482     | expr_named_call
  483     | expr_full_block
  484     | expr "<|" expr
  485     | expr "|>" expr
  486     | expr "|>" basic_type_declaration
  487     | name_in_namespace "name"
  488     | "unsafe" '(' expr ')'
  489     | expression_keyword

  490 expr_mtag: "$$" '(' expr ')'
  491          | "$i" '(' expr ')'
  492          | "$v" '(' expr ')'
  493          | "$b" '(' expr ')'
  494          | "$a" '(' expr ')'
  495          | "..."
  496          | "$c" '(' expr ')' '(' ')'
  497          | "$c" '(' expr ')' '(' expr_list ')'
  498          | expr '.' "$f" '(' expr ')'
  499          | expr "?." "$f" '(' expr ')'
  500          | expr '.' '.' "$f" '(' expr ')'
  501          | expr '.' "?." "$f" '(' expr ')'
  502          | expr "as" "$f" '(' expr ')'
  503          | expr '?' "as" "$f" '(' expr ')'
  504          | expr "is" "$f" '(' expr ')'
  505          | '@' '@' "$c" '(' expr ')'

  506 optional_field_annotation: %empty
  507                          | '[' '[' annotation_argument_list ']' ']'

  508 optional_override: %empty
  509                  | "override"
  510                  | "sealed"

  511 optional_constant: %empty
  512                  | "const"

  513 optional_public_or_private_member_variable: %empty
  514                                           | "public"
  515                                           | "private"

  516 optional_static_member_variable: %empty
  517                                | "static"

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  519 struct_variable_declaration_list: %empty

  520 $@29: %empty

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression"

  522 $@30: %empty

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"

  524 $@31: %empty

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  526                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  527 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  528                              | "$a" '(' expr ')'

  529 function_argument_list: function_argument_declaration
  530                       | function_argument_list "end of expression" function_argument_declaration

  531 tuple_type: type_declaration
  532           | "name" ':' type_declaration

  533 tuple_type_list: tuple_type
  534                | tuple_type_list "end of expression" tuple_type

  535 tuple_alias_type_list: %empty
  536                      | tuple_alias_type_list "end of expression"
  537                      | tuple_alias_type_list tuple_type "end of expression"

  538 variant_type: "name" ':' type_declaration

  539 variant_type_list: variant_type
  540                  | variant_type_list "end of expression" variant_type

  541 variant_alias_type_list: %empty
  542                        | variant_alias_type_list "end of expression"
  543                        | variant_alias_type_list variant_type "end of expression"

  544 copy_or_move: '='
  545             | "<-"

  546 variable_declaration: variable_name_with_pos_list
  547                     | variable_name_with_pos_list '&'
  548                     | variable_name_with_pos_list ':' type_declaration
  549                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  550                     | variable_name_with_pos_list copy_or_move expr
  551                     | variable_name_with_pos_list copy_or_move expr_pipe

  552 copy_or_move_or_clone: '='
  553                      | "<-"
  554                      | ":="

  555 optional_ref: %empty
  556             | '&'

  557 let_variable_name_with_pos_list: "name"
  558                                | "$i" '(' expr ')'
  559                                | "name" "aka" "name"
  560                                | let_variable_name_with_pos_list ',' "name"
  561                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  563                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  565                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  566                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  567 global_variable_declaration_list: %empty

  568 $@32: %empty

  569 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration

  570 optional_shared: %empty
  571                | "shared"

  572 optional_public_or_private_variable: %empty
  573                                    | "private"
  574                                    | "public"

  575 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  576 $@33: %empty

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

  578 enum_list: %empty
  579          | enum_list "end of expression"
  580          | enum_list "name" "end of expression"
  581          | enum_list "name" '=' expr "end of expression"

  582 optional_public_or_private_alias: %empty
  583                                 | "private"
  584                                 | "public"

  585 $@34: %empty

  586 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration

  587 alias_list: single_alias "end of expression"
  588           | alias_list single_alias "end of expression"

  589 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"
  590                  | "typedef" single_alias "end of expression"

  591 optional_public_or_private_enum: %empty
  592                                | "private"
  593                                | "public"

  594 enum_name: "name"

  595 $@35: %empty

  596 $@36: %empty

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block"

  598 $@37: %empty

  599 $@38: %empty

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

  601 optional_structure_parent: %empty
  602                          | ':' name_in_namespace

  603 optional_sealed: %empty
  604                | "sealed"

  605 structure_name: optional_sealed "name" optional_structure_parent

  606 class_or_struct: "class"
  607                | "struct"

  608 optional_public_or_private_structure: %empty
  609                                     | "private"
  610                                     | "public"

  611 optional_struct_variable_declaration_list: %empty
  612                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  613 $@39: %empty

  614 $@40: %empty

  615 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list

  616 variable_name_with_pos_list: "name"
  617                            | "$i" '(' expr ')'
  618                            | "name" "aka" "name"
  619                            | variable_name_with_pos_list ',' "name"
  620                            | variable_name_with_pos_list ',' "name" "aka" "name"

  621 basic_type_declaration: "bool"
  622                       | "string"
  623                       | "int"
  624                       | "int8"
  625                       | "int16"
  626                       | "int64"
  627                       | "int2"
  628                       | "int3"
  629                       | "int4"
  630                       | "uint"
  631                       | "uint8"
  632                       | "uint16"
  633                       | "uint64"
  634                       | "uint2"
  635                       | "uint3"
  636                       | "uint4"
  637                       | "float"
  638                       | "float2"
  639                       | "float3"
  640                       | "float4"
  641                       | "void"
  642                       | "range"
  643                       | "urange"
  644                       | "range64"
  645                       | "urange64"
  646                       | "double"
  647                       | "bitfield"

  648 enum_basic_type_declaration: "int"
  649                            | "int8"
  650                            | "int16"
  651                            | "uint"
  652                            | "uint8"
  653                            | "uint16"

  654 structure_type_declaration: name_in_namespace

  655 auto_type_declaration: "auto"
  656                      | "auto" '(' "name" ')'
  657                      | "$t" '(' expr ')'

  658 bitfield_bits: "name"
  659              | bitfield_bits "end of expression" "name"

  660 bitfield_alias_bits: %empty
  661                    | bitfield_alias_bits "end of expression"
  662                    | bitfield_alias_bits "name" "end of expression"

  663 $@41: %empty

  664 $@42: %empty

  665 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits '>' $@42

  666 table_type_pair: type_declaration
  667                | type_declaration "end of expression" type_declaration

  668 dim_list: '[' expr ']'
  669         | dim_list '[' expr ']'

  670 type_declaration_no_options: basic_type_declaration
  671                            | auto_type_declaration
  672                            | bitfield_type_declaration
  673                            | structure_type_declaration
  674                            | type_declaration_no_options dim_list
  675                            | type_declaration_no_options '[' ']'

  676 $@43: %empty

  677 $@44: %empty

  678 type_declaration_no_options: "type" '<' $@43 type_declaration '>' $@44
  679                            | "typedecl" '(' expr ')'
  680                            | '$' name_in_namespace '(' optional_expr_list ')'

  681 $@45: %empty

  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  683                            | type_declaration_no_options '-' '[' ']'
  684                            | type_declaration_no_options "explicit"
  685                            | type_declaration_no_options "const"
  686                            | type_declaration_no_options '-' "const"
  687                            | type_declaration_no_options '&'
  688                            | type_declaration_no_options '-' '&'
  689                            | type_declaration_no_options '#'
  690                            | type_declaration_no_options "implicit"
  691                            | type_declaration_no_options '-' '#'
  692                            | type_declaration_no_options "==" "const"
  693                            | type_declaration_no_options "==" '&'
  694                            | type_declaration_no_options '?'

  695 $@46: %empty

  696 $@47: %empty

  697 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration '>' $@47
  698                            | type_declaration_no_options "??"

  699 $@48: %empty

  700 $@49: %empty

  701 type_declaration_no_options: "array" '<' $@48 type_declaration '>' $@49

  702 $@50: %empty

  703 $@51: %empty

  704 type_declaration_no_options: "table" '<' $@50 table_type_pair '>' $@51

  705 $@52: %empty

  706 $@53: %empty

  707 type_declaration_no_options: "iterator" '<' $@52 type_declaration '>' $@53
  708                            | "block"

  709 $@54: %empty

  710 $@55: %empty

  711 type_declaration_no_options: "block" '<' $@54 type_declaration '>' $@55

  712 $@56: %empty

  713 $@57: %empty

  714 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type '>' $@57
  715                            | "function"

  716 $@58: %empty

  717 $@59: %empty

  718 type_declaration_no_options: "function" '<' $@58 type_declaration '>' $@59

  719 $@60: %empty

  720 $@61: %empty

  721 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type '>' $@61
  722                            | "lambda"

  723 $@62: %empty

  724 $@63: %empty

  725 type_declaration_no_options: "lambda" '<' $@62 type_declaration '>' $@63

  726 $@64: %empty

  727 $@65: %empty

  728 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type '>' $@65

  729 $@66: %empty

  730 $@67: %empty

  731 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list '>' $@67

  732 $@68: %empty

  733 $@69: %empty

  734 type_declaration_no_options: "variant" '<' $@68 variant_type_list '>' $@69

  735 type_declaration: type_declaration_no_options
  736                 | type_declaration '|' type_declaration_no_options
  737                 | type_declaration '|' '#'

  738 $@70: %empty

  739 $@71: %empty

  740 $@72: %empty

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

  742 $@73: %empty

  743 $@74: %empty

  744 $@75: %empty

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

  746 $@76: %empty

  747 $@77: %empty

  748 $@78: %empty

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

  750 make_decl: make_struct_decl
  751          | make_dim_decl
  752          | make_table_decl
  753          | array_comprehension
  754          | make_tuple_call

  755 make_struct_fields: "name" copy_or_move expr
  756                   | "name" ":=" expr
  757                   | make_struct_fields ',' "name" copy_or_move expr
  758                   | make_struct_fields ',' "name" ":=" expr
  759                   | "$f" '(' expr ')' copy_or_move expr
  760                   | "$f" '(' expr ')' ":=" expr
  761                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  763 make_struct_single: make_struct_fields

  764 $@79: %empty

  765 $@80: %empty

  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

  767 $@81: %empty

  768 $@82: %empty

  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

  770 $@83: %empty

  771 $@84: %empty

  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')'

  773 $@85: %empty

  774 $@86: %empty

  775 make_struct_decl: "default" '<' $@85 type_declaration_no_options '>' $@86

  776 make_map_tuple: expr "=>" expr
  777               | expr

  778 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  779 $@87: %empty

  780 $@88: %empty

  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')'

  782 make_dim_decl: '[' expr_list optional_comma ']'
  783              | "array" '(' expr_list optional_comma ')'

  784 $@89: %empty

  785 $@90: %empty

  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'
  787              | "fixed_array" '(' expr_list optional_comma ')'

  788 $@91: %empty

  789 $@92: %empty

  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

  791 expr_map_tuple_list: make_map_tuple
  792                    | expr_map_tuple_list ',' make_map_tuple

  793 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  794                | "table" '(' expr_map_tuple_list optional_comma ')'
  795                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  796                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  797 array_comprehension_where: %empty
  798                          | "end of expression" "where" expr

  799 optional_comma: %empty
  800               | ','

  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  802                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 105 121 416
    '#' (35) 689 691 737
    '$' (36) 20 319 680 682
    '%' (37) 35 42 141 428
    '&' (38) 149 322 435 547 556 687 688 693
    '(' (40) 96 103 109 116 117 244 268 269 270 295 296 311 312 313 381 382 383 384 386 396 397 401 402 403 404 405 446 456 457 458 459 488 490 491 492 493 494 496 497 498 499 500 501 502 503 504 505 528 558 617 656 657 679 680 682 759 760 761 762 766 769 772 778 781 783 786 787 790 794 795 796
    ')' (41) 96 103 109 116 117 244 268 269 270 295 296 311 312 313 381 382 383 384 386 396 397 401 402 403 404 405 446 456 457 458 459 488 490 491 492 493 494 496 497 498 499 500 501 502 503 504 505 528 558 617 656 657 679 680 682 759 760 761 762 766 769 772 778 781 783 786 787 790 794 795 796
    '*' (42) 139 426 455
    '+' (43) 137 418 424
    ',' (44) 51 85 98 112 294 315 327 382 560 561 619 620 757 758 761 762 792 800
    '-' (45) 138 419 425 683 686 688 691
    '.' (46) 43 166 168 169 394 395 396 397 400 448 450 452 498 500 501
    '/' (47) 44 140 427
    ':' (58) 53 54 119 295 461 532 538 548 549 562 563 564 600 602
    "end of expression" (59) 15 16 72 216 220 221 228 229 234 235 236 246 277 282 295 296 313 521 523 526 530 534 536 537 540 542 543 562 563 565 579 580 581 587 588 590 659 661 662 667 796 798 801 802
    '<' (60) 142 249 252 265 301 304 307 310 312 313 390 393 429 458 459 464 470 475 665 678 682 697 701 704 707 711 714 718 721 725 728 731 734 766 769 772 775 781 786 790 795 796
    '=' (61) 77 89 90 91 92 93 94 96 323 342 364 544 552 581 586
    '>' (62) 143 249 252 265 301 304 307 310 312 313 390 393 430 458 459 464 470 475 665 678 682 697 701 704 707 711 714 718 721 725 728 731 734 766 769 772 775 781 786 790 795 796
    '?' (63) 178 179 461 472 475 476 503 694
    '@' (64) 320 321 387 390 393 505
    '[' (91) 114 164 329 381 382 447 448 507 526 668 669 675 683 782 801
    ']' (93) 114 164 165 329 381 382 447 448 449 450 507 526 668 669 675 683 782 801
    '^' (94) 151 437
    "begin of code block" (123) 212 213 575 589 597 600 612 741 745 749 793 802
    '|' (124) 150 436 736 737
    "end of code block" (125) 212 213 575 589 597 600 612 741 745 749 793 802
    '~' (126) 122 417
    error (256) 239 400
    "lexer error" (258)
    "struct" (259) 607 766
    "class" (260) 606 769
    "let" (261) 286 289
    "def" (262) 205 523 525
    "while" (263) 75
    "if" (264) 62 72
    "static_if" (265) 63
    "else" (266) 60 65
    "for" (267) 73 801 802
    "recover" (268) 285
    "true" (269) 82 93 412
    "false" (270) 83 94 413
    "new" (271) 267 268 269 270 271
    "typeinfo" (272) 311 312 313
    "type" (273) 87 310 464 470 475 678
    "in" (274) 73 88 801 802
    "is" (275) 174 176 464 465 466 504
    "as" (276) 46 175 177 178 179 467 470 471 472 475 476 502 503
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 701 783 786
    "return" (280) 274 275 276 278 279
    "null" (281) 406
    "break" (282) 272
    "try" (283) 285
    "options" (284) 36
    "table" (285) 704 794 795 796
    "expect" (286) 49
    "const" (287) 512 685 686 692
    "require" (288) 37 100
    "operator" (289) 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    "enum" (290) 597 600
    "finally" (291) 213
    "delete" (292) 172 261 262
    "deref" (293) 456
    "typedef" (294) 589 590
    "typedecl" (295) 679
    "with" (296) 76
    "aka" (297) 559 561 618 620
    "assume" (298) 77
    "cast" (299) 301
    "override" (300) 509
    "abstract" (301) 523
    "upcast" (302) 304
    "iterator" (303) 707
    "var" (304) 287 290
    "addr" (305) 457
    "continue" (306) 273
    "where" (307) 798
    "pass" (308) 236
    "reinterpret" (309) 307
    "module" (310) 22
    "public" (311) 18 48 208 514 574 584 593 610
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 690
    "explicit" (315) 262 684
    "shared" (316) 571
    "private" (317) 19 101 207 515 573 583 592 609
    "smart_ptr" (318) 697
    "unsafe" (319) 74 488
    "inscope" (320) 291
    "static" (321) 517
    "fixed_array" (322) 787 790
    "default" (323) 775
    "bool" (324) 180 621
    "void" (325) 641
    "string" (326) 181 622
    "auto" (327) 655 656
    "int" (328) 182 623 648
    "int2" (329) 183 627
    "int3" (330) 184 628
    "int4" (331) 185 629
    "uint" (332) 186 630 651
    "bitfield" (333) 647 665 749
    "uint2" (334) 187 634
    "uint3" (335) 188 635
    "uint4" (336) 189 636
    "float" (337) 190 637
    "float2" (338) 191 638
    "float3" (339) 192 639
    "float4" (340) 193 640
    "range" (341) 194 642
    "urange" (342) 195 643
    "range64" (343) 196 644
    "urange64" (344) 197 645
    "block" (345) 708 711 714
    "int64" (346) 198 626
    "uint64" (347) 199 633
    "double" (348) 200 646
    "function" (349) 715 718 721
    "lambda" (350) 722 725 728
    "int8" (351) 201 624 649
    "uint8" (352) 202 631 652
    "int16" (353) 203 625 650
    "uint16" (354) 204 632 653
    "tuple" (355) 731 741 778 781
    "variant" (356) 734 745 772
    "generator" (357) 458 459
    "yield" (358) 280 281 283 284
    "sealed" (359) 510 604
    "+=" (360) 123 351 372
    "-=" (361) 124 352 373
    "/=" (362) 126 354 375
    "*=" (363) 125 353 374
    "%=" (364) 127 355 376
    "&=" (365) 128 345 366
    "|=" (366) 129 346 367
    "^=" (367) 130 347 368
    "<<" (368) 156 420
    ">>" (369) 157 421
    "++" (370) 152 154 442 444
    "--" (371) 153 155 443 445
    "<=" (372) 147 433
    "<<=" (373) 158 356 377
    ">>=" (374) 159 357 378
    ">=" (375) 148 434
    "==" (376) 145 431 692 693
    "!=" (377) 146 432
    "->" (378) 383 384
    "<-" (379) 276 279 281 284 318 324 343 365 545 553
    "??" (380) 173 460 698
    "?." (381) 167 170 451 452 499 501
    "?[" (382) 165 449 450
    "<|" (383) 484
    " <|" (384) 253
    "$ <|" (385) 256 362
    "@ <|" (386) 254 360
    "@@ <|" (387) 255 361
    "|>" (388) 110 485 486
    ":=" (389) 169 171 325 344 554 756 758 760 762
    "<<<" (390) 160 422
    ">>>" (391) 161 423
    "<<<=" (392) 162 358 379
    ">>>=" (393) 163 359 380
    "=>" (394) 317 318 776
    "::" (395) 259 260
    "&&" (396) 106 134 438
    "||" (397) 107 135 439
    "^^" (398) 108 136 440
    "&&=" (399) 131 348 369
    "||=" (400) 132 349 370
    "^^=" (401) 133 350 371
    ".." (402) 144 441
    "$$" (403) 490
    "$i" (404) 386 491 558 617
    "$v" (405) 492
    "$b" (406) 493
    "$a" (407) 494 528
    "$t" (408) 657
    "$c" (409) 496 497 505
    "$f" (410) 498 499 500 501 502 503 504 759 760 761 762
    "..." (411) 495
    "integer constant" <i> (412) 52 53 54 55 80 91 334
    "long integer constant" <i64> (413) 336
    "unsigned integer constant" <ui> (414) 335
    "unsigned long integer constant" <ui64> (415) 337
    "unsigned int8 constant" <ui> (416) 338
    "floating point constant" <fd> (417) 81 92 339
    "double constant" <d> (418) 340
    "name" <s> (419) 21 38 46 77 79 86 90 120 168 169 170 176 177 179 258 259 260 293 294 312 313 322 323 324 325 383 384 394 395 396 397 451 452 466 467 472 487 532 538 557 559 560 561 580 581 586 594 605 616 618 619 620 656 658 659 662 741 745 749 755 756 757 758
    "keyword" <s> (420) 39 240 249
    "type function" <s> (421) 40 252
    "start of the string" (422) 27 31
    STRING_CHARACTER <ch> (423) 23 25 32 33
    STRING_CHARACTER_ESC (424) 24 26
    "end of the string" (425) 27 31
    "{" (426) 30
    "}" (427) 30
    "end of failed eader macro" (428)
    ";}}" (429)
    ";}]" (430)
    ";]]" (431)
    ",]]" (432)
    ",}]" (433)
    UNARY_MINUS (434)
    UNARY_PLUS (435)
    PRE_INC (436)
    PRE_DEC (437)
    POST_INC (438)
    POST_DEC (439)
    DEREF (440)


Nonterminals, with rules where they appear

    $accept (213)
        on left: 0
    program (214)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (215)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (216)
        on left: 17 18 19
        on right: 22
    module_name <s> (217)
        on left: 20 21
        on right: 22
    module_declaration (218)
        on left: 22
        on right: 2
    character_sequence <s> (219)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (220)
        on left: 27
        on right: 78 89
    string_builder_body <pExpression> (221)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (222)
        on left: 31
        on right: 410
    reader_character_sequence (223)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (224)
        on left: 35
        on right: 16 409
    $@1 (225)
        on left: 34
        on right: 35
    options_declaration (226)
        on left: 36
        on right: 9
    require_declaration (227)
        on left: 37
        on right: 8
    keyword_or_name <s> (228)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (229)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (230)
        on left: 45 46
        on right: 37
    is_public_module <b> (231)
        on left: 47 48
        on right: 45 46
    expect_declaration (232)
        on left: 49
        on right: 7
    expect_list (233)
        on left: 50 51
        on right: 49 51
    expect_error (234)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (235)
        on left: 54
        on right: 234
    expression_goto <pExpression> (236)
        on left: 55 56
        on right: 235
    elif_or_static_elif <b> (237)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (238)
        on left: 59 60 61
        on right: 61 71
    if_or_static_if <b> (239)
        on left: 62 63
        on right: 71
    expression_else_one_liner <pExpression> (240)
        on left: 64 65
        on right: 72
    expression_if_one_liner <pExpression> (241)
        on left: 66 67 68 69 70
        on right: 65 72
    expression_if_then_else <pExpression> (242)
        on left: 71 72
        on right: 232
    expression_for_loop <pExpression> (243)
        on left: 73
        on right: 227
    expression_unsafe <pExpression> (244)
        on left: 74
        on right: 224
    expression_while_loop <pExpression> (245)
        on left: 75
        on right: 223
    expression_with <pExpression> (246)
        on left: 76
        on right: 225
    expression_with_alias <pExpression> (247)
        on left: 77
        on right: 226
    annotation_argument_value <aa> (248)
        on left: 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_value_list <aaList> (249)
        on left: 84 85
        on right: 85 96
    annotation_argument_name <s> (250)
        on left: 86 87 88
        on right: 89 90 91 92 93 94 95 96
    annotation_argument <aa> (251)
        on left: 89 90 91 92 93 94 95 96
        on right: 97 98
    annotation_argument_list <aaList> (252)
        on left: 97 98
        on right: 36 98 103 507
    annotation_declaration_name <s> (253)
        on left: 99 100 101
        on right: 102 103
    annotation_declaration_basic <fa> (254)
        on left: 102 103
        on right: 104
    annotation_declaration <fa> (255)
        on left: 104 105 106 107 108 109 110
        on right: 105 106 107 108 109 110 111 112
    annotation_list <faList> (256)
        on left: 111 112
        on right: 112 114 526
    optional_annotation_list <faList> (257)
        on left: 113 114
        on right: 205 331 332 333 523 525 597 600 615
    optional_function_argument_list <pVarDeclList> (258)
        on left: 115 116 117
        on right: 209 331 332 333 393 714 721 728
    optional_function_type <pTypeDecl> (259)
        on left: 118 119
        on right: 209 331 332 333 393 714 721 728
    function_name <s> (260)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
        on right: 209
    global_function_declaration (261)
        on left: 205
        on right: 6
    optional_public_or_private_function <b> (262)
        on left: 206 207 208
        on right: 211
    function_declaration_header <pFuncDecl> (263)
        on left: 209
        on right: 211 523 525
    function_declaration <pFuncDecl> (264)
        on left: 211
        on right: 205
    $@2 (265)
        on left: 210
        on right: 211
    expression_block <pExpression> (266)
        on left: 212 213
        on right: 60 61 71 73 74 75 76 211 240 285 316 330 333 525
    expr_call_pipe <pExpression> (267)
        on left: 214 215
        on right: 257 363
    expression_any <pExpression> (268)
        on left: 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236
        on right: 238
    expressions <pExpression> (269)
        on left: 237 238 239
        on right: 212 213 238 239
    expr_keyword <pExpression> (270)
        on left: 240
        on right: 218
    optional_expr_list <pExpression> (271)
        on left: 241 242
        on right: 244 680 682
    optional_expr_list_in_braces <pExpression> (272)
        on left: 243 244
        on right: 252
    type_declaration_no_options_list <pTypeDeclList> (273)
        on left: 245 246
        on right: 246 249 252 682
    expression_keyword <pExpression> (274)
        on left: 249 252
        on right: 215 489
    $@3 (275)
        on left: 247
        on right: 249
    $@4 (276)
        on left: 248
        on right: 249
    $@5 (277)
        on left: 250
        on right: 252
    $@6 (278)
        on left: 251
        on right: 252
    expr_pipe <pExpression> (279)
        on left: 253 254 255 256 257
        on right: 217 278 279 283 284 551 564 566
    name_in_namespace <s> (280)
        on left: 258 259 260
        on right: 35 99 311 312 313 381 382 385 401 402 403 407 487 602 654 680 682
    expression_delete <pExpression> (281)
        on left: 261 262
        on right: 221
    new_type_declaration <pTypeDecl> (282)
        on left: 265 266
        on right: 267 268 269 270
    $@7 (283)
        on left: 263
        on right: 265
    $@8 (284)
        on left: 264
        on right: 265
    expr_new <pExpression> (285)
        on left: 267 268 269 270 271
        on right: 480
    expression_break <pExpression> (286)
        on left: 272
        on right: 69 228
    expression_continue <pExpression> (287)
        on left: 273
        on right: 70 229
    expression_return_no_pipe <pExpression> (288)
        on left: 274 275 276
        on right: 67 277
    expression_return <pExpression> (289)
        on left: 277 278 279
        on right: 230
    expression_yield_no_pipe <pExpression> (290)
        on left: 280 281
        on right: 68 282
    expression_yield <pExpression> (291)
        on left: 282 283 284
        on right: 231
    expression_try_catch <pExpression> (292)
        on left: 285
        on right: 233
    kwd_let_var_or_nothing <b> (293)
        on left: 286 287 288
        on right: 527
    kwd_let <b> (294)
        on left: 289 290
        on right: 297 298 575 577
    optional_in_scope <b> (295)
        on left: 291 292
        on right: 297 298
    tuple_expansion <pNameList> (296)
        on left: 293 294
        on right: 294 295 296
    tuple_expansion_variable_declaration <pVarDecl> (297)
        on left: 295 296
        on right: 298
    expression_let <pExpression> (298)
        on left: 297 298
        on right: 222
    expr_cast <pExpression> (299)
        on left: 301 304 307
        on right: 479
    $@9 (300)
        on left: 299
        on right: 301
    $@10 (301)
        on left: 300
        on right: 301
    $@11 (302)
        on left: 302
        on right: 304
    $@12 (303)
        on left: 303
        on right: 304
    $@13 (304)
        on left: 305
        on right: 307
    $@14 (305)
        on left: 306
        on right: 307
    expr_type_decl <pExpression> (306)
        on left: 310
        on right: 478
    $@15 (307)
        on left: 308
        on right: 310
    $@16 (308)
        on left: 309
        on right: 310
    expr_type_info <pExpression> (309)
        on left: 311 312 313
        on right: 477
    expr_list <pExpression> (310)
        on left: 314 315
        on right: 73 242 269 275 276 315 382 384 397 403 405 446 497 778 782 783 786 787 790 801 802
    block_or_simple_block <pExpression> (311)
        on left: 316 317 318
        on right: 331 332
    block_or_lambda <i> (312)
        on left: 319 320 321
        on right: 331 332 333
    capture_entry <pCapt> (313)
        on left: 322 323 324 325
        on right: 326 327
    capture_list <pCaptList> (314)
        on left: 326 327
        on right: 327 329
    optional_capture_list <pCaptList> (315)
        on left: 328 329
        on right: 331 332 333 458 459
    expr_block <pExpression> (316)
        on left: 330 331
        on right: 253 254 255 256 360 361 362
    expr_full_block <pExpression> (317)
        on left: 332
        on right: 483
    expr_full_block_assumed_piped <pExpression> (318)
        on left: 333
        on right: 214 215
    expr_numeric_const <pExpression> (319)
        on left: 334 335 336 337 338 339 340
        on right: 408
    expr_assign <pExpression> (320)
        on left: 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
        on right: 220 253
    expr_assign_pipe_right <pExpression> (321)
        on left: 360 361 362 363
        on right: 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380
    expr_assign_pipe <pExpression> (322)
        on left: 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380
        on right: 219
    expr_named_call <pExpression> (323)
        on left: 381 382
        on right: 482
    expr_method_call <pExpression> (324)
        on left: 383 384
        on right: 481
    func_addr_name <pExpression> (325)
        on left: 385 386
        on right: 387 390 393
    func_addr_expr <pExpression> (326)
        on left: 387 390 393
        on right: 453
    $@17 (327)
        on left: 388
        on right: 390
    $@18 (328)
        on left: 389
        on right: 390
    $@19 (329)
        on left: 391
        on right: 393
    $@20 (330)
        on left: 392
        on right: 393
    expr_field <pExpression> (331)
        on left: 394 395 396 397 400
        on right: 414
    $@21 (332)
        on left: 398
        on right: 400
    $@22 (333)
        on left: 399
        on right: 400
    expr_call <pExpression> (334)
        on left: 401 402 403 404 405
        on right: 454
    expr <pExpression> (335)
        on left: 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 464 465 466 467 470 471 472 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489
        on right
    $@23 (336)
        on left: 462
        on right: 464
    $@24 (337)
        on left: 463
        on right: 464
    $@25 (338)
        on left: 468
        on right: 470
    $@26 (339)
        on left: 469
        on right: 470
    $@27 (340)
        on left: 473
        on right: 475
    $@28 (341)
        on left: 474
        on right: 475
    expr_mtag <pExpression> (342)
        on left: 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505
        on right: 415
    optional_field_annotation <aaList> (343)
        on left: 506 507
        on right: 518 527 569 577
    optional_override <i> (344)
        on left: 508 509 510
        on right: 518 525
    optional_constant <b> (345)
        on left: 511 512
        on right: 523 525
    optional_public_or_private_member_variable <b> (346)
        on left: 513 514 515
        on right: 518 523 525
    optional_static_member_variable <b> (347)
        on left: 516 517
        on right: 518 525
    structure_variable_declaration <pVarDecl> (348)
        on left: 518
        on right: 521
    struct_variable_declaration_list <pVarDeclList> (349)
        on left: 519 521 523 525 526
        on right: 521 523 525 526 612
    $@29 (350)
        on left: 520
        on right: 521
    $@30 (351)
        on left: 522
        on right: 523
    $@31 (352)
        on left: 524
        on right: 525
    function_argument_declaration <pVarDecl> (353)
        on left: 527 528
        on right: 529 530
    function_argument_list <pVarDeclList> (354)
        on left: 529 530
        on right: 117 530
    tuple_type <pVarDecl> (355)
        on left: 531 532
        on right: 533 534 537
    tuple_type_list <pVarDeclList> (356)
        on left: 533 534
        on right: 534 731
    tuple_alias_type_list <pVarDeclList> (357)
        on left: 535 536 537
        on right: 536 537 741
    variant_type <pVarDecl> (358)
        on left: 538
        on right: 539 540 543
    variant_type_list <pVarDeclList> (359)
        on left: 539 540
        on right: 540 734
    variant_alias_type_list <pVarDeclList> (360)
        on left: 541 542 543
        on right: 542 543 745
    copy_or_move <b> (361)
        on left: 544 545
        on right: 549 550 551 755 757 759 761
    variable_declaration <pVarDecl> (362)
        on left: 546 547 548 549 550 551
        on right: 518 527
    copy_or_move_or_clone <i> (363)
        on left: 552 553 554
        on right: 295 296 563 564 565 566
    optional_ref <b> (364)
        on left: 555 556
        on right: 296 565 566
    let_variable_name_with_pos_list <pNameWithPosList> (365)
        on left: 557 558 559 560 561
        on right: 560 561 562 563 564 565 566
    let_variable_declaration <pVarDecl> (366)
        on left: 562 563 564 565 566
        on right: 297 569 577
    global_variable_declaration_list <pVarDeclList> (367)
        on left: 567 569
        on right: 569 575
    $@32 (368)
        on left: 568
        on right: 569
    optional_shared <b> (369)
        on left: 570 571
        on right: 22 575 577
    optional_public_or_private_variable <b> (370)
        on left: 572 573 574
        on right: 575 577
    global_let (371)
        on left: 575 577
        on right: 5
    $@33 (372)
        on left: 576
        on right: 577
    enum_list <pEnum> (373)
        on left: 578 579 580 581
        on right: 579 580 581 597 600
    optional_public_or_private_alias <b> (374)
        on left: 582 583 584
        on right: 586 741 745 749
    single_alias (375)
        on left: 586
        on right: 587 588 590
    $@34 (376)
        on left: 585
        on right: 586
    alias_list (377)
        on left: 587 588
        on right: 588 589
    alias_declaration (378)
        on left: 589 590
        on right: 10
    optional_public_or_private_enum <b> (379)
        on left: 591 592 593
        on right: 597 600
    enum_name <pEnum> (380)
        on left: 594
        on right: 597 600
    enum_declaration (381)
        on left: 597 600
        on right: 4
    $@35 (382)
        on left: 595
        on right: 597
    $@36 (383)
        on left: 596
        on right: 597
    $@37 (384)
        on left: 598
        on right: 600
    $@38 (385)
        on left: 599
        on right: 600
    optional_structure_parent <s> (386)
        on left: 601 602
        on right: 605
    optional_sealed <b> (387)
        on left: 603 604
        on right: 605
    structure_name <pStructure> (388)
        on left: 605
        on right: 615
    class_or_struct <b> (389)
        on left: 606 607
        on right: 615
    optional_public_or_private_structure <b> (390)
        on left: 608 609 610
        on right: 615
    optional_struct_variable_declaration_list <pVarDeclList> (391)
        on left: 611 612
        on right: 615
    structure_declaration (392)
        on left: 615
        on right: 3
    $@39 (393)
        on left: 613
        on right: 615
    $@40 (394)
        on left: 614
        on right: 615
    variable_name_with_pos_list <pNameWithPosList> (395)
        on left: 616 617 618 619 620
        on right: 73 546 547 548 549 550 551 619 620 801 802
    basic_type_declaration <type> (396)
        on left: 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647
        on right: 404 405 465 471 476 486 670
    enum_basic_type_declaration <type> (397)
        on left: 648 649 650 651 652 653
        on right: 600
    structure_type_declaration <pTypeDecl> (398)
        on left: 654
        on right: 266 673
    auto_type_declaration <pTypeDecl> (399)
        on left: 655 656 657
        on right: 671
    bitfield_bits <pNameList> (400)
        on left: 658 659
        on right: 659 665
    bitfield_alias_bits <pNameList> (401)
        on left: 660 661 662
        on right: 661 662 749
    bitfield_type_declaration <pTypeDecl> (402)
        on left: 665
        on right: 672
    $@41 (403)
        on left: 663
        on right: 665
    $@42 (404)
        on left: 664
        on right: 665
    table_type_pair <aTypePair> (405)
        on left: 666 667
        on right: 704
    dim_list <pTypeDecl> (406)
        on left: 668 669
        on right: 669 674
    type_declaration_no_options <pTypeDecl> (407)
        on left: 670 671 672 673 674 675 678 679 680 682 683 684 685 686 687 688 689 690 691 692 693 694 697 698 701 704 707 708 711 714 715 718 721 722 725 728 731 734
        on right: 295 301 304 307 390 458 459 464 562 563 564 674 675 683 684 685 686 687 688 689 690 691 692 693 694 698 735 736 766 769 772 775 781 786 790 795 796
    $@43 (408)
        on left: 676
        on right: 678
    $@44 (409)
        on left: 677
        on right: 678
    $@45 (410)
        on left: 681
        on right: 682
    $@46 (411)
        on left: 695
        on right: 697
    $@47 (412)
        on left: 696
        on right: 697
    $@48 (413)
        on left: 699
        on right: 701
    $@49 (414)
        on left: 700
        on right: 701
    $@50 (415)
        on left: 702
        on right: 704
    $@51 (416)
        on left: 703
        on right: 704
    $@52 (417)
        on left: 705
        on right: 707
    $@53 (418)
        on left: 706
        on right: 707
    $@54 (419)
        on left: 709
        on right: 711
    $@55 (420)
        on left: 710
        on right: 711
    $@56 (421)
        on left: 712
        on right: 714
    $@57 (422)
        on left: 713
        on right: 714
    $@58 (423)
        on left: 716
        on right: 718
    $@59 (424)
        on left: 717
        on right: 718
    $@60 (425)
        on left: 719
        on right: 721
    $@61 (426)
        on left: 720
        on right: 721
    $@62 (427)
        on left: 723
        on right: 725
    $@63 (428)
        on left: 724
        on right: 725
    $@64 (429)
        on left: 726
        on right: 728
    $@65 (430)
        on left: 727
        on right: 728
    $@66 (431)
        on left: 729
        on right: 731
    $@67 (432)
        on left: 730
        on right: 731
    $@68 (433)
        on left: 732
        on right: 734
    $@69 (434)
        on left: 733
        on right: 734
    type_declaration <pTypeDecl> (435)
        on left: 735 736 737
        on right: 119 245 246 265 310 470 475 531 532 538 548 549 586 666 667 678 697 701 707 711 718 725 736 737
    tuple_alias_declaration (436)
        on left: 741
        on right: 12
    $@70 (437)
        on left: 738
        on right: 741
    $@71 (438)
        on left: 739
        on right: 741
    $@72 (439)
        on left: 740
        on right: 741
    variant_alias_declaration (440)
        on left: 745
        on right: 11
    $@73 (441)
        on left: 742
        on right: 745
    $@74 (442)
        on left: 743
        on right: 745
    $@75 (443)
        on left: 744
        on right: 745
    bitfield_alias_declaration (444)
        on left: 749
        on right: 13
    $@76 (445)
        on left: 746
        on right: 749
    $@77 (446)
        on left: 747
        on right: 749
    $@78 (447)
        on left: 748
        on right: 749
    make_decl <pExpression> (448)
        on left: 750 751 752 753 754
        on right: 271 411
    make_struct_fields <pMakeStruct> (449)
        on left: 755 756 757 758 759 760 761 762
        on right: 381 382 757 758 761 762 763
    make_struct_single <pExpression> (450)
        on left: 763
        on right: 270 402 766 769 772 781
    make_struct_decl <pExpression> (451)
        on left: 766 769 772 775
        on right: 750
    $@79 (452)
        on left: 764
        on right: 766
    $@80 (453)
        on left: 765
        on right: 766
    $@81 (454)
        on left: 767
        on right: 769
    $@82 (455)
        on left: 768
        on right: 769
    $@83 (456)
        on left: 770
        on right: 772
    $@84 (457)
        on left: 771
        on right: 772
    $@85 (458)
        on left: 773
        on right: 775
    $@86 (459)
        on left: 774
        on right: 775
    make_map_tuple <pExpression> (460)
        on left: 776 777
        on right: 791 792 802
    make_tuple_call <pExpression> (461)
        on left: 778 781
        on right: 754
    $@87 (462)
        on left: 779
        on right: 781
    $@88 (463)
        on left: 780
        on right: 781
    make_dim_decl <pExpression> (464)
        on left: 782 783 786 787 790
        on right: 751
    $@89 (465)
        on left: 784
        on right: 786
    $@90 (466)
        on left: 785
        on right: 786
    $@91 (467)
        on left: 788
        on right: 790
    $@92 (468)
        on left: 789
        on right: 790
    expr_map_tuple_list <pExpression> (469)
        on left: 791 792
        on right: 792 793 794 795 796
    make_table_decl <pExpression> (470)
        on left: 793 794 795 796
        on right: 752
    array_comprehension_where <pExpression> (471)
        on left: 797 798
        on right: 801 802
    optional_comma <b> (472)
        on left: 799 800
        on right: 446 778 782 783 786 787 790 793 794 795 796
    array_comprehension <pExpression> (473)
        on left: 801 802
        on right: 753


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  289 kwd_let: "let" .

    $default  reduce using rule 289 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  589 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  590                  | "typedef" . single_alias "end of expression"

    "public"               shift, and go to state 48
    "private"              shift, and go to state 49
    "begin of code block"  shift, and go to state 50

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 52


State 8

  290 kwd_let: "var" .

    $default  reduce using rule 290 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 53
    '$'     shift, and go to state 54

    module_name  go to state 55


State 10

  749 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 11

  741 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 12

  745 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 58


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 61


State 15

  114 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  205 global_function_declaration: optional_annotation_list . "def" function_declaration
  597 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block"
  600                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"
  615 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 73
    "class"   shift, and go to state 74
    "def"     shift, and go to state 75
    "enum"    shift, and go to state 76

    class_or_struct  go to state 77


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  575 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  577           | kwd_let . optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 78

    $default  reduce using rule 570 (optional_shared)

    optional_shared  go to state 79


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   87 annotation_argument_name: "type" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   88 annotation_argument_name: "in" .

    $default  reduce using rule 88 (annotation_argument_name)


State 34

   86 annotation_argument_name: "name" .

    $default  reduce using rule 86 (annotation_argument_name)


State 35

   89 annotation_argument: annotation_argument_name . '=' string_constant
   90                    | annotation_argument_name . '=' "name"
   91                    | annotation_argument_name . '=' "integer constant"
   92                    | annotation_argument_name . '=' "floating point constant"
   93                    | annotation_argument_name . '=' "true"
   94                    | annotation_argument_name . '=' "false"
   95                    | annotation_argument_name .
   96                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 80

    $default  reduce using rule 95 (annotation_argument)


State 36

   97 annotation_argument_list: annotation_argument .

    $default  reduce using rule 97 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 81

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 82

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 83

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 84


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 85
    "public"  shift, and go to state 86
    '/'       shift, and go to state 87
    '.'       shift, and go to state 88

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 89


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  584 optional_public_or_private_alias: "public" .

    $default  reduce using rule 584 (optional_public_or_private_alias)


State 49

  583 optional_public_or_private_alias: "private" .

    $default  reduce using rule 583 (optional_public_or_private_alias)


State 50

  589 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 90
    alias_list                        go to state 91


State 51

  586 single_alias: optional_public_or_private_alias . "name" $@34 '=' type_declaration

    "name"  shift, and go to state 92


State 52

  590 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 93


State 53

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 54

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 55

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 78

    $default  reduce using rule 570 (optional_shared)

    optional_shared  go to state 94


State 56

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    "name"  shift, and go to state 95


State 57

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    "name"  shift, and go to state 96


State 58

  745 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    "name"  shift, and go to state 97


State 59

  260 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 98


State 60

  258 name_in_namespace: "name" .
  259                  | "name" . "::" "name"

    "::"  shift, and go to state 99

    "::"      [reduce using rule 258 (name_in_namespace)]
    $default  reduce using rule 258 (name_in_namespace)


State 61

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 100


State 62

  100 annotation_declaration_name: "require" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 63

  101 annotation_declaration_name: "private" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 64

  110 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 101
    name_in_namespace             go to state 71


State 65

  105 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 66

  109 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 67

  102 annotation_declaration_basic: annotation_declaration_name .
  103                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 104

    $default  reduce using rule 102 (annotation_declaration_basic)


State 68

  104 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 104 (annotation_declaration)


State 69

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 111 (annotation_list)


State 70

  112 annotation_list: annotation_list . ',' annotation_declaration
  114 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 108
    ']'  shift, and go to state 109


State 71

   99 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 99 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  607 class_or_struct: "struct" .

    $default  reduce using rule 607 (class_or_struct)


State 74

  606 class_or_struct: "class" .

    $default  reduce using rule 606 (class_or_struct)


State 75

  205 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 206 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 112
    function_declaration                 go to state 113


State 76

  597 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block"
  600                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 591 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 116


State 77

  615 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 608 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 119


State 78

  571 optional_shared: "shared" .

    $default  reduce using rule 571 (optional_shared)


State 79

  575 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  577           | kwd_let optional_shared . optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 572 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 122


State 80

   89 annotation_argument: annotation_argument_name '=' . string_constant
   90                    | annotation_argument_name '=' . "name"
   91                    | annotation_argument_name '=' . "integer constant"
   92                    | annotation_argument_name '=' . "floating point constant"
   93                    | annotation_argument_name '=' . "true"
   94                    | annotation_argument_name '=' . "false"
   96                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 123
    "false"                    shift, and go to state 124
    "integer constant"         shift, and go to state 125
    "floating point constant"  shift, and go to state 126
    "name"                     shift, and go to state 127
    "start of the string"      shift, and go to state 128
    '('                        shift, and go to state 129

    string_constant  go to state 130


State 81

   98 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 131


State 82

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 132


State 83

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 133


State 84

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 88

    $default  reduce using rule 42 (require_module_name)


State 85

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 134


State 86

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 87

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 136


State 89

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 90

  587 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  588 alias_list: alias_list . single_alias "end of expression"
  589 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 48
    "private"            shift, and go to state 49
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 139


State 92

  586 single_alias: optional_public_or_private_alias "name" . $@34 '=' type_declaration

    $default  reduce using rule 585 ($@34)

    $@34  go to state 140


State 93

  590 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 590 (alias_declaration)


State 94

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 95

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    $default  reduce using rule 746 ($@76)

    $@76  go to state 144


State 96

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    $default  reduce using rule 738 ($@70)

    $@70  go to state 145


State 97

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    $default  reduce using rule 742 ($@73)

    $@73  go to state 146


State 98

  260 name_in_namespace: "::" "name" .

    $default  reduce using rule 260 (name_in_namespace)


State 99

  259 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 100

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 101

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  110                       | "|>" annotation_declaration .

    $default  reduce using rule 110 (annotation_declaration)


State 102

  105 annotation_declaration: '!' annotation_declaration .
  106                       | annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 103

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  109                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107
    ')'   shift, and go to state 150


State 104

  103 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 105

  106 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 152
    name_in_namespace             go to state 71


State 106

  107 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 153
    name_in_namespace             go to state 71


State 107

  108 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 154
    name_in_namespace             go to state 71


State 108

  112 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 155
    name_in_namespace             go to state 71


State 109

  114 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 114 (optional_annotation_list)


State 110

  208 optional_public_or_private_function: "public" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 111

  207 optional_public_or_private_function: "private" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 112

  211 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 210 ($@2)

    $@2  go to state 156


State 113

  205 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 205 (global_function_declaration)


State 114

  593 optional_public_or_private_enum: "public" .

    $default  reduce using rule 593 (optional_public_or_private_enum)


State 115

  592 optional_public_or_private_enum: "private" .

    $default  reduce using rule 592 (optional_public_or_private_enum)


State 116

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@35 enum_list $@36 "end of code block"
  600                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 117

  610 optional_public_or_private_structure: "public" .

    $default  reduce using rule 610 (optional_public_or_private_structure)


State 118

  609 optional_public_or_private_structure: "private" .

    $default  reduce using rule 609 (optional_public_or_private_structure)


State 119

  615 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@39 structure_name $@40 optional_struct_variable_declaration_list

    $default  reduce using rule 613 ($@39)

    $@39  go to state 159


State 120

  574 optional_public_or_private_variable: "public" .

    $default  reduce using rule 574 (optional_public_or_private_variable)


State 121

  573 optional_public_or_private_variable: "private" .

    $default  reduce using rule 573 (optional_public_or_private_variable)


State 122

  575 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  577           | kwd_let optional_shared optional_public_or_private_variable . $@33 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 576 ($@33)

    $@33  go to state 161


State 123

   93 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 93 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   91 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 91 (annotation_argument)


State 126

   92 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 92 (annotation_argument)


State 127

   90 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 90 (annotation_argument)


State 128

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 129

   96 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 130

   89 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 89 (annotation_argument)


State 131

   98 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 132

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 133

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 134

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 86

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 135

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 136

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 137

  587 alias_list: single_alias "end of expression" .

    $default  reduce using rule 587 (alias_list)


State 138

  589 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 589 (alias_declaration)


State 139

  588 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 174


State 140

  586 single_alias: optional_public_or_private_alias "name" $@34 . '=' type_declaration

    '='  shift, and go to state 175


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 . "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    "begin of code block"  shift, and go to state 176


State 145

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 . "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    "begin of code block"  shift, and go to state 177


State 146

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 . "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    "begin of code block"  shift, and go to state 178


State 147

  259 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 259 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  109 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 109 (annotation_declaration)


State 151

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 81
    ')'  shift, and go to state 180


State 152

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration .
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 153

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration .
  108                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 105
    "^^"  shift, and go to state 107

    $default  reduce using rule 107 (annotation_declaration)


State 154

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 105

    $default  reduce using rule 108 (annotation_declaration)


State 155

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 112 (annotation_list)


State 156

  211 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  594 enum_name: "name" .

    $default  reduce using rule 594 (enum_name)


State 158

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@35 enum_list $@36 "end of code block"
  600                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  615 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 . structure_name $@40 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 603 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  575 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 567 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 . optional_field_annotation let_variable_declaration

    '['  shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   82 annotation_argument_value: "true" .

    $default  reduce using rule 82 (annotation_argument_value)


State 166

   83 annotation_argument_value: "false" .

    $default  reduce using rule 83 (annotation_argument_value)


State 167

   80 annotation_argument_value: "integer constant" .

    $default  reduce using rule 80 (annotation_argument_value)


State 168

   81 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 169

   79 annotation_argument_value: "name" .

    $default  reduce using rule 79 (annotation_argument_value)


State 170

   78 annotation_argument_value: string_constant .

    $default  reduce using rule 78 (annotation_argument_value)


State 171

   84 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 84 (annotation_argument_value_list)


State 172

   85 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  588 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 588 (alias_list)


State 175

  586 single_alias: optional_public_or_private_alias "name" $@34 '=' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 272


State 176

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" . $@77 bitfield_alias_bits $@78 "end of code block"

    $default  reduce using rule 747 ($@77)

    $@77  go to state 273


State 177

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" . $@71 tuple_alias_type_list $@72 "end of code block"

    $default  reduce using rule 739 ($@71)

    $@71  go to state 274


State 178

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" . $@74 variant_alias_type_list $@75 "end of code block"

    $default  reduce using rule 743 ($@74)

    $@74  go to state 275


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 103 (annotation_declaration_basic)


State 181

  121 function_name: "operator" . '!'
  122              | "operator" . '~'
  123              | "operator" . "+="
  124              | "operator" . "-="
  125              | "operator" . "*="
  126              | "operator" . "/="
  127              | "operator" . "%="
  128              | "operator" . "&="
  129              | "operator" . "|="
  130              | "operator" . "^="
  131              | "operator" . "&&="
  132              | "operator" . "||="
  133              | "operator" . "^^="
  134              | "operator" . "&&"
  135              | "operator" . "||"
  136              | "operator" . "^^"
  137              | "operator" . '+'
  138              | "operator" . '-'
  139              | "operator" . '*'
  140              | "operator" . '/'
  141              | "operator" . '%'
  142              | "operator" . '<'
  143              | "operator" . '>'
  144              | "operator" . ".."
  145              | "operator" . "=="
  146              | "operator" . "!="
  147              | "operator" . "<="
  148              | "operator" . ">="
  149              | "operator" . '&'
  150              | "operator" . '|'
  151              | "operator" . '^'
  154              | "operator" . "++"
  155              | "operator" . "--"
  156              | "operator" . "<<"
  157              | "operator" . ">>"
  158              | "operator" . "<<="
  159              | "operator" . ">>="
  160              | "operator" . "<<<"
  161              | "operator" . ">>>"
  162              | "operator" . "<<<="
  163              | "operator" . ">>>="
  164              | "operator" . '[' ']'
  165              | "operator" . "?[" ']'
  166              | "operator" . '.'
  167              | "operator" . "?."
  168              | "operator" . '.' "name"
  169              | "operator" . '.' "name" ":="
  170              | "operator" . "?." "name"
  171              | "operator" . ":="
  172              | "operator" . "delete"
  173              | "operator" . "??"
  174              | "operator" . "is"
  175              | "operator" . "as"
  176              | "operator" . "is" "name"
  177              | "operator" . "as" "name"
  178              | "operator" . '?' "as"
  179              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 276
    "as"      shift, and go to state 277
    "delete"  shift, and go to state 278
    "+="      shift, and go to state 279
    "-="      shift, and go to state 280
    "/="      shift, and go to state 281
    "*="      shift, and go to state 282
    "%="      shift, and go to state 283
    "&="      shift, and go to state 284
    "|="      shift, and go to state 285
    "^="      shift, and go to state 286
    "<<"      shift, and go to state 287
    ">>"      shift, and go to state 288
    "++"      shift, and go to state 289
    "--"      shift, and go to state 290
    "<="      shift, and go to state 291
    "<<="     shift, and go to state 292
    ">>="     shift, and go to state 293
    ">="      shift, and go to state 294
    "=="      shift, and go to state 295
    "!="      shift, and go to state 296
    "??"      shift, and go to state 297
    "?."      shift, and go to state 298
    "?["      shift, and go to state 299
    ":="      shift, and go to state 300
    "<<<"     shift, and go to state 301
    ">>>"     shift, and go to state 302
    "<<<="    shift, and go to state 303
    ">>>="    shift, and go to state 304
    "&&"      shift, and go to state 305
    "||"      shift, and go to state 306
    "^^"      shift, and go to state 307
    "&&="     shift, and go to state 308
    "||="     shift, and go to state 309
    "^^="     shift, and go to state 310
    ".."      shift, and go to state 311
    '?'       shift, and go to state 312
    '|'       shift, and go to state 313
    '^'       shift, and go to state 314
    '&'       shift, and go to state 315
    '<'       shift, and go to state 316
    '>'       shift, and go to state 317
    '-'       shift, and go to state 318
    '+'       shift, and go to state 319
    '*'       shift, and go to state 320
    '/'       shift, and go to state 321
    '%'       shift, and go to state 322
    '~'       shift, and go to state 323
    '!'       shift, and go to state 324
    '.'       shift, and go to state 325
    '['       shift, and go to state 326


State 182

  180 function_name: "bool" .

    $default  reduce using rule 180 (function_name)


State 183

  181 function_name: "string" .

    $default  reduce using rule 181 (function_name)


State 184

  182 function_name: "int" .

    $default  reduce using rule 182 (function_name)


State 185

  183 function_name: "int2" .

    $default  reduce using rule 183 (function_name)


State 186

  184 function_name: "int3" .

    $default  reduce using rule 184 (function_name)


State 187

  185 function_name: "int4" .

    $default  reduce using rule 185 (function_name)


State 188

  186 function_name: "uint" .

    $default  reduce using rule 186 (function_name)


State 189

  187 function_name: "uint2" .

    $default  reduce using rule 187 (function_name)


State 190

  188 function_name: "uint3" .

    $default  reduce using rule 188 (function_name)


State 191

  189 function_name: "uint4" .

    $default  reduce using rule 189 (function_name)


State 192

  190 function_name: "float" .

    $default  reduce using rule 190 (function_name)


State 193

  191 function_name: "float2" .

    $default  reduce using rule 191 (function_name)


State 194

  192 function_name: "float3" .

    $default  reduce using rule 192 (function_name)


State 195

  193 function_name: "float4" .

    $default  reduce using rule 193 (function_name)


State 196

  194 function_name: "range" .

    $default  reduce using rule 194 (function_name)


State 197

  195 function_name: "urange" .

    $default  reduce using rule 195 (function_name)


State 198

  196 function_name: "range64" .

    $default  reduce using rule 196 (function_name)


State 199

  197 function_name: "urange64" .

    $default  reduce using rule 197 (function_name)


State 200

  198 function_name: "int64" .

    $default  reduce using rule 198 (function_name)


State 201

  199 function_name: "uint64" .

    $default  reduce using rule 199 (function_name)


State 202

  200 function_name: "double" .

    $default  reduce using rule 200 (function_name)


State 203

  201 function_name: "int8" .

    $default  reduce using rule 201 (function_name)


State 204

  202 function_name: "uint8" .

    $default  reduce using rule 202 (function_name)


State 205

  203 function_name: "int16" .

    $default  reduce using rule 203 (function_name)


State 206

  204 function_name: "uint16" .

    $default  reduce using rule 204 (function_name)


State 207

  152 function_name: "++" . "operator"

    "operator"  shift, and go to state 327


State 208

  153 function_name: "--" . "operator"

    "operator"  shift, and go to state 328


State 209

  120 function_name: "name" .

    $default  reduce using rule 120 (function_name)


State 210

  209 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 330


State 211

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 332


State 212

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@35 enum_list $@36 "end of code block"

    $default  reduce using rule 595 ($@35)

    $@35  go to state 333


State 213

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "int"     shift, and go to state 334
    "uint"    shift, and go to state 335
    "int8"    shift, and go to state 336
    "uint8"   shift, and go to state 337
    "int16"   shift, and go to state 338
    "uint16"  shift, and go to state 339

    enum_basic_type_declaration  go to state 340


State 214

  604 optional_sealed: "sealed" .

    $default  reduce using rule 604 (optional_sealed)


State 215

  605 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 341


State 216

  615 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name . $@40 optional_struct_variable_declaration_list

    $default  reduce using rule 614 ($@40)

    $@40  go to state 342


State 217

  569 global_variable_declaration_list: global_variable_declaration_list . $@32 optional_field_annotation let_variable_declaration
  575 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 343

    $default  reduce using rule 568 ($@32)

    $@32  go to state 344


State 218

  507 optional_field_annotation: '[' . '[' annotation_argument_list ']' ']'

    '['  shift, and go to state 345


State 219

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 346
    "name"  shift, and go to state 347

    let_variable_name_with_pos_list  go to state 348
    let_variable_declaration         go to state 349


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   85 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant            go to state 170
    annotation_argument_value  go to state 350


State 224

   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 96 (annotation_argument)


State 225

  678 type_declaration_no_options: "type" . '<' $@43 type_declaration '>' $@44

    '<'  shift, and go to state 351


State 226

  701 type_declaration_no_options: "array" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 352


State 227

  704 type_declaration_no_options: "table" . '<' $@50 table_type_pair '>' $@51

    '<'  shift, and go to state 353


State 228

  679 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 229

  707 type_declaration_no_options: "iterator" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 355


State 230

  697 type_declaration_no_options: "smart_ptr" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 356


State 231

  621 basic_type_declaration: "bool" .

    $default  reduce using rule 621 (basic_type_declaration)


State 232

  641 basic_type_declaration: "void" .

    $default  reduce using rule 641 (basic_type_declaration)


State 233

  622 basic_type_declaration: "string" .

    $default  reduce using rule 622 (basic_type_declaration)


State 234

  655 auto_type_declaration: "auto" .
  656                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 655 (auto_type_declaration)


State 235

  623 basic_type_declaration: "int" .

    $default  reduce using rule 623 (basic_type_declaration)


State 236

  627 basic_type_declaration: "int2" .

    $default  reduce using rule 627 (basic_type_declaration)


State 237

  628 basic_type_declaration: "int3" .

    $default  reduce using rule 628 (basic_type_declaration)


State 238

  629 basic_type_declaration: "int4" .

    $default  reduce using rule 629 (basic_type_declaration)


State 239

  630 basic_type_declaration: "uint" .

    $default  reduce using rule 630 (basic_type_declaration)


State 240

  647 basic_type_declaration: "bitfield" .
  665 bitfield_type_declaration: "bitfield" . '<' $@41 bitfield_bits '>' $@42

    '<'  shift, and go to state 358

    $default  reduce using rule 647 (basic_type_declaration)


State 241

  634 basic_type_declaration: "uint2" .

    $default  reduce using rule 634 (basic_type_declaration)


State 242

  635 basic_type_declaration: "uint3" .

    $default  reduce using rule 635 (basic_type_declaration)


State 243

  636 basic_type_declaration: "uint4" .

    $default  reduce using rule 636 (basic_type_declaration)


State 244

  637 basic_type_declaration: "float" .

    $default  reduce using rule 637 (basic_type_declaration)


State 245

  638 basic_type_declaration: "float2" .

    $default  reduce using rule 638 (basic_type_declaration)


State 246

  639 basic_type_declaration: "float3" .

    $default  reduce using rule 639 (basic_type_declaration)


State 247

  640 basic_type_declaration: "float4" .

    $default  reduce using rule 640 (basic_type_declaration)


State 248

  642 basic_type_declaration: "range" .

    $default  reduce using rule 642 (basic_type_declaration)


State 249

  643 basic_type_declaration: "urange" .

    $default  reduce using rule 643 (basic_type_declaration)


State 250

  644 basic_type_declaration: "range64" .

    $default  reduce using rule 644 (basic_type_declaration)


State 251

  645 basic_type_declaration: "urange64" .

    $default  reduce using rule 645 (basic_type_declaration)


State 252

  708 type_declaration_no_options: "block" .
  711                            | "block" . '<' $@54 type_declaration '>' $@55
  714                            | "block" . '<' $@56 optional_function_argument_list optional_function_type '>' $@57

    '<'  shift, and go to state 359

    $default  reduce using rule 708 (type_declaration_no_options)


State 253

  626 basic_type_declaration: "int64" .

    $default  reduce using rule 626 (basic_type_declaration)


State 254

  633 basic_type_declaration: "uint64" .

    $default  reduce using rule 633 (basic_type_declaration)


State 255

  646 basic_type_declaration: "double" .

    $default  reduce using rule 646 (basic_type_declaration)


State 256

  715 type_declaration_no_options: "function" .
  718                            | "function" . '<' $@58 type_declaration '>' $@59
  721                            | "function" . '<' $@60 optional_function_argument_list optional_function_type '>' $@61

    '<'  shift, and go to state 360

    $default  reduce using rule 715 (type_declaration_no_options)


State 257

  722 type_declaration_no_options: "lambda" .
  725                            | "lambda" . '<' $@62 type_declaration '>' $@63
  728                            | "lambda" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 361

    $default  reduce using rule 722 (type_declaration_no_options)


State 258

  624 basic_type_declaration: "int8" .

    $default  reduce using rule 624 (basic_type_declaration)


State 259

  631 basic_type_declaration: "uint8" .

    $default  reduce using rule 631 (basic_type_declaration)


State 260

  625 basic_type_declaration: "int16" .

    $default  reduce using rule 625 (basic_type_declaration)


State 261

  632 basic_type_declaration: "uint16" .

    $default  reduce using rule 632 (basic_type_declaration)


State 262

  731 type_declaration_no_options: "tuple" . '<' $@66 tuple_type_list '>' $@67

    '<'  shift, and go to state 362


State 263

  734 type_declaration_no_options: "variant" . '<' $@68 variant_type_list '>' $@69

    '<'  shift, and go to state 363


State 264

  657 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 265

  680 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  682                            | '$' . name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 365


State 266

  654 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 654 (structure_type_declaration)


State 267

  670 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 670 (type_declaration_no_options)


State 268

  673 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 673 (type_declaration_no_options)


State 269

  671 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 671 (type_declaration_no_options)


State 270

  672 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 672 (type_declaration_no_options)


State 271

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  735 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    $default  reduce using rule 735 (type_declaration)

    dim_list  go to state 376


State 272

  586 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 586 (single_alias)


State 273

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 . bitfield_alias_bits $@78 "end of code block"

    $default  reduce using rule 660 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 378


State 274

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 . tuple_alias_type_list $@72 "end of code block"

    $default  reduce using rule 535 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 379


State 275

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 . variant_alias_type_list $@75 "end of code block"

    $default  reduce using rule 541 (variant_alias_type_list)

    variant_alias_type_list  go to state 380


State 276

  174 function_name: "operator" "is" .
  176              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 174 (function_name)


State 277

  175 function_name: "operator" "as" .
  177              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 175 (function_name)


State 278

  172 function_name: "operator" "delete" .

    $default  reduce using rule 172 (function_name)


State 279

  123 function_name: "operator" "+=" .

    $default  reduce using rule 123 (function_name)


State 280

  124 function_name: "operator" "-=" .

    $default  reduce using rule 124 (function_name)


State 281

  126 function_name: "operator" "/=" .

    $default  reduce using rule 126 (function_name)


State 282

  125 function_name: "operator" "*=" .

    $default  reduce using rule 125 (function_name)


State 283

  127 function_name: "operator" "%=" .

    $default  reduce using rule 127 (function_name)


State 284

  128 function_name: "operator" "&=" .

    $default  reduce using rule 128 (function_name)


State 285

  129 function_name: "operator" "|=" .

    $default  reduce using rule 129 (function_name)


State 286

  130 function_name: "operator" "^=" .

    $default  reduce using rule 130 (function_name)


State 287

  156 function_name: "operator" "<<" .

    $default  reduce using rule 156 (function_name)


State 288

  157 function_name: "operator" ">>" .

    $default  reduce using rule 157 (function_name)


State 289

  154 function_name: "operator" "++" .

    $default  reduce using rule 154 (function_name)


State 290

  155 function_name: "operator" "--" .

    $default  reduce using rule 155 (function_name)


State 291

  147 function_name: "operator" "<=" .

    $default  reduce using rule 147 (function_name)


State 292

  158 function_name: "operator" "<<=" .

    $default  reduce using rule 158 (function_name)


State 293

  159 function_name: "operator" ">>=" .

    $default  reduce using rule 159 (function_name)


State 294

  148 function_name: "operator" ">=" .

    $default  reduce using rule 148 (function_name)


State 295

  145 function_name: "operator" "==" .

    $default  reduce using rule 145 (function_name)


State 296

  146 function_name: "operator" "!=" .

    $default  reduce using rule 146 (function_name)


State 297

  173 function_name: "operator" "??" .

    $default  reduce using rule 173 (function_name)


State 298

  167 function_name: "operator" "?." .
  170              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 167 (function_name)


State 299

  165 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 300

  171 function_name: "operator" ":=" .

    $default  reduce using rule 171 (function_name)


State 301

  160 function_name: "operator" "<<<" .

    $default  reduce using rule 160 (function_name)


State 302

  161 function_name: "operator" ">>>" .

    $default  reduce using rule 161 (function_name)


State 303

  162 function_name: "operator" "<<<=" .

    $default  reduce using rule 162 (function_name)


State 304

  163 function_name: "operator" ">>>=" .

    $default  reduce using rule 163 (function_name)


State 305

  134 function_name: "operator" "&&" .

    $default  reduce using rule 134 (function_name)


State 306

  135 function_name: "operator" "||" .

    $default  reduce using rule 135 (function_name)


State 307

  136 function_name: "operator" "^^" .

    $default  reduce using rule 136 (function_name)


State 308

  131 function_name: "operator" "&&=" .

    $default  reduce using rule 131 (function_name)


State 309

  132 function_name: "operator" "||=" .

    $default  reduce using rule 132 (function_name)


State 310

  133 function_name: "operator" "^^=" .

    $default  reduce using rule 133 (function_name)


State 311

  144 function_name: "operator" ".." .

    $default  reduce using rule 144 (function_name)


State 312

  178 function_name: "operator" '?' . "as"
  179              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 313

  150 function_name: "operator" '|' .

    $default  reduce using rule 150 (function_name)


State 314

  151 function_name: "operator" '^' .

    $default  reduce using rule 151 (function_name)


State 315

  149 function_name: "operator" '&' .

    $default  reduce using rule 149 (function_name)


State 316

  142 function_name: "operator" '<' .

    $default  reduce using rule 142 (function_name)


State 317

  143 function_name: "operator" '>' .

    $default  reduce using rule 143 (function_name)


State 318

  138 function_name: "operator" '-' .

    $default  reduce using rule 138 (function_name)


State 319

  137 function_name: "operator" '+' .

    $default  reduce using rule 137 (function_name)


State 320

  139 function_name: "operator" '*' .

    $default  reduce using rule 139 (function_name)


State 321

  140 function_name: "operator" '/' .

    $default  reduce using rule 140 (function_name)


State 322

  141 function_name: "operator" '%' .

    $default  reduce using rule 141 (function_name)


State 323

  122 function_name: "operator" '~' .

    $default  reduce using rule 122 (function_name)


State 324

  121 function_name: "operator" '!' .

    $default  reduce using rule 121 (function_name)


State 325

  166 function_name: "operator" '.' .
  168              | "operator" '.' . "name"
  169              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 166 (function_name)


State 326

  164 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 327

  152 function_name: "++" "operator" .

    $default  reduce using rule 152 (function_name)


State 328

  153 function_name: "--" "operator" .

    $default  reduce using rule 153 (function_name)


State 329

  116 optional_function_argument_list: '(' . ')'
  117                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    '['   shift, and go to state 218
    ')'   shift, and go to state 389

    $default  reduce using rule 506 (optional_field_annotation)

    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 391
    function_argument_list         go to state 392


State 330

  209 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 394


State 331

  212 expression_block: "begin of code block" . expressions "end of code block"
  213                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 237 (expressions)

    expressions  go to state 395


State 332

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 211 (function_declaration)


State 333

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 . enum_list $@36 "end of code block"

    $default  reduce using rule 578 (enum_list)

    enum_list  go to state 396


State 334

  648 enum_basic_type_declaration: "int" .

    $default  reduce using rule 648 (enum_basic_type_declaration)


State 335

  651 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 651 (enum_basic_type_declaration)


State 336

  649 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 337

  652 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 652 (enum_basic_type_declaration)


State 338

  650 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 339

  653 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 653 (enum_basic_type_declaration)


State 340

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@37 enum_list $@38 "end of code block"

    "begin of code block"  shift, and go to state 397


State 341

  605 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 398

    $default  reduce using rule 601 (optional_structure_parent)

    optional_structure_parent  go to state 399


State 342

  615 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name $@40 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 400

    $default  reduce using rule 611 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 401


State 343

  575 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 575 (global_let)


State 344

  569 global_variable_declaration_list: global_variable_declaration_list $@32 . optional_field_annotation let_variable_declaration

    '['  shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    optional_field_annotation  go to state 402


State 345

  507 optional_field_annotation: '[' '[' . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 403


State 346

  558 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 404


State 347

  557 let_variable_name_with_pos_list: "name" .
  559                                | "name" . "aka" "name"

    "aka"  shift, and go to state 405

    $default  reduce using rule 557 (let_variable_name_with_pos_list)


State 348

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  561                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  562 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  563                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  565                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  566                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 406
    ':'  shift, and go to state 407
    '&'  shift, and go to state 408

    $default  reduce using rule 555 (optional_ref)

    optional_ref  go to state 409


State 349

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 577 (global_let)


State 350

   85 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 351

  678 type_declaration_no_options: "type" '<' . $@43 type_declaration '>' $@44

    $default  reduce using rule 676 ($@43)

    $@43  go to state 410


State 352

  701 type_declaration_no_options: "array" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 699 ($@48)

    $@48  go to state 411


State 353

  704 type_declaration_no_options: "table" '<' . $@50 table_type_pair '>' $@51

    $default  reduce using rule 702 ($@50)

    $@50  go to state 412


State 354

  679 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 355

  707 type_declaration_no_options: "iterator" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 705 ($@52)

    $@52  go to state 489


State 356

  697 type_declaration_no_options: "smart_ptr" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 695 ($@46)

    $@46  go to state 490


State 357

  656 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 491


State 358

  665 bitfield_type_declaration: "bitfield" '<' . $@41 bitfield_bits '>' $@42

    $default  reduce using rule 663 ($@41)

    $@41  go to state 492


State 359

  711 type_declaration_no_options: "block" '<' . $@54 type_declaration '>' $@55
  714                            | "block" '<' . $@56 optional_function_argument_list optional_function_type '>' $@57

    ':'       reduce using rule 712 ($@56)
    '>'       reduce using rule 712 ($@56)
    '('       reduce using rule 712 ($@56)
    $default  reduce using rule 709 ($@54)

    $@54  go to state 493
    $@56  go to state 494


State 360

  718 type_declaration_no_options: "function" '<' . $@58 type_declaration '>' $@59
  721                            | "function" '<' . $@60 optional_function_argument_list optional_function_type '>' $@61

    ':'       reduce using rule 719 ($@60)
    '>'       reduce using rule 719 ($@60)
    '('       reduce using rule 719 ($@60)
    $default  reduce using rule 716 ($@58)

    $@58  go to state 495
    $@60  go to state 496


State 361

  725 type_declaration_no_options: "lambda" '<' . $@62 type_declaration '>' $@63
  728                            | "lambda" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 726 ($@64)
    '>'       reduce using rule 726 ($@64)
    '('       reduce using rule 726 ($@64)
    $default  reduce using rule 723 ($@62)

    $@62  go to state 497
    $@64  go to state 498


State 362

  731 type_declaration_no_options: "tuple" '<' . $@66 tuple_type_list '>' $@67

    $default  reduce using rule 729 ($@66)

    $@66  go to state 499


State 363

  734 type_declaration_no_options: "variant" '<' . $@68 variant_type_list '>' $@69

    $default  reduce using rule 732 ($@68)

    $@68  go to state 500


State 364

  657 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 501
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 365

  680 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  682                            | '$' name_in_namespace . '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 502
    '('  shift, and go to state 503


State 366

  685 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 685 (type_declaration_no_options)


State 367

  690 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 690 (type_declaration_no_options)


State 368

  684 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 684 (type_declaration_no_options)


State 369

  692 type_declaration_no_options: type_declaration_no_options "==" . "const"
  693                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 504
    '&'      shift, and go to state 505


State 370

  698 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 371

  694 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 372

  687 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 687 (type_declaration_no_options)


State 373

  683 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  686                            | type_declaration_no_options '-' . "const"
  688                            | type_declaration_no_options '-' . '&'
  691                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 506
    '&'      shift, and go to state 507
    '['      shift, and go to state 508
    '#'      shift, and go to state 509


State 374

  668 dim_list: '[' . expr ']'
  675 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    ']'                               shift, and go to state 510
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 511
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 375

  689 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 689 (type_declaration_no_options)


State 376

  669 dim_list: dim_list . '[' expr ']'
  674 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 512

    '['       [reduce using rule 674 (type_declaration_no_options)]
    $default  reduce using rule 674 (type_declaration_no_options)


State 377

  736 type_declaration: type_declaration '|' . type_declaration_no_options
  737                 | type_declaration '|' . '#'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265
    '#'          shift, and go to state 513

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 514


State 378

  661 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  662                    | bitfield_alias_bits . "name" "end of expression"
  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits . $@78 "end of code block"

    "name"               shift, and go to state 515
    "end of expression"  shift, and go to state 516

    $default  reduce using rule 748 ($@78)

    $@78  go to state 517


State 379

  536 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  537                      | tuple_alias_type_list . tuple_type "end of expression"
  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list . $@72 "end of code block"

    "type"               shift, and go to state 225
    "array"              shift, and go to state 226
    "table"              shift, and go to state 227
    "typedecl"           shift, and go to state 228
    "iterator"           shift, and go to state 229
    "smart_ptr"          shift, and go to state 230
    "bool"               shift, and go to state 231
    "void"               shift, and go to state 232
    "string"             shift, and go to state 233
    "auto"               shift, and go to state 234
    "int"                shift, and go to state 235
    "int2"               shift, and go to state 236
    "int3"               shift, and go to state 237
    "int4"               shift, and go to state 238
    "uint"               shift, and go to state 239
    "bitfield"           shift, and go to state 240
    "uint2"              shift, and go to state 241
    "uint3"              shift, and go to state 242
    "uint4"              shift, and go to state 243
    "float"              shift, and go to state 244
    "float2"             shift, and go to state 245
    "float3"             shift, and go to state 246
    "float4"             shift, and go to state 247
    "range"              shift, and go to state 248
    "urange"             shift, and go to state 249
    "range64"            shift, and go to state 250
    "urange64"           shift, and go to state 251
    "block"              shift, and go to state 252
    "int64"              shift, and go to state 253
    "uint64"             shift, and go to state 254
    "double"             shift, and go to state 255
    "function"           shift, and go to state 256
    "lambda"             shift, and go to state 257
    "int8"               shift, and go to state 258
    "uint8"              shift, and go to state 259
    "int16"              shift, and go to state 260
    "uint16"             shift, and go to state 261
    "tuple"              shift, and go to state 262
    "variant"            shift, and go to state 263
    "::"                 shift, and go to state 59
    "$t"                 shift, and go to state 264
    "name"               shift, and go to state 518
    "end of expression"  shift, and go to state 519
    '$'                  shift, and go to state 265

    $default  reduce using rule 740 ($@72)

    name_in_namespace            go to state 266
    tuple_type                   go to state 520
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 521
    $@72                         go to state 522


State 380

  542 variant_alias_type_list: variant_alias_type_list . "end of expression"
  543                        | variant_alias_type_list . variant_type "end of expression"
  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list . $@75 "end of code block"

    "name"               shift, and go to state 523
    "end of expression"  shift, and go to state 524

    $default  reduce using rule 744 ($@75)

    variant_type  go to state 525
    $@75          go to state 526


State 381

  176 function_name: "operator" "is" "name" .

    $default  reduce using rule 176 (function_name)


State 382

  177 function_name: "operator" "as" "name" .

    $default  reduce using rule 177 (function_name)


State 383

  170 function_name: "operator" "?." "name" .

    $default  reduce using rule 170 (function_name)


State 384

  165 function_name: "operator" "?[" ']' .

    $default  reduce using rule 165 (function_name)


State 385

  178 function_name: "operator" '?' "as" .
  179              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 527

    $default  reduce using rule 178 (function_name)


State 386

  168 function_name: "operator" '.' "name" .
  169              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 528

    $default  reduce using rule 168 (function_name)


State 387

  164 function_name: "operator" '[' ']' .

    $default  reduce using rule 164 (function_name)


State 388

  528 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 529


State 389

  116 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 390

  527 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 530
    "var"  shift, and go to state 531

    $default  reduce using rule 288 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 532


State 391

  529 function_argument_list: function_argument_declaration .

    $default  reduce using rule 529 (function_argument_list)


State 392

  117 optional_function_argument_list: '(' function_argument_list . ')'
  530 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 533
    ')'                  shift, and go to state 534


State 393

  119 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 535


State 394

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 209 (function_declaration_header)


State 395

  212 expression_block: "begin of code block" expressions . "end of code block"
  213                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  238 expressions: expressions . expression_any
  239            | expressions . error

    error                             shift, and go to state 536
    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 537
    "if"                              shift, and go to state 538
    "static_if"                       shift, and go to state 539
    "for"                             shift, and go to state 540
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "return"                          shift, and go to state 541
    "null"                            shift, and go to state 421
    "break"                           shift, and go to state 542
    "try"                             shift, and go to state 543
    "table"                           shift, and go to state 422
    "delete"                          shift, and go to state 544
    "deref"                           shift, and go to state 423
    "with"                            shift, and go to state 545
    "assume"                          shift, and go to state 546
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 426
    "continue"                        shift, and go to state 547
    "pass"                            shift, and go to state 548
    "reinterpret"                     shift, and go to state 427
    "label"                           shift, and go to state 549
    "goto"                            shift, and go to state 550
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "yield"                           shift, and go to state 552
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    "end of code block"               shift, and go to state 557
    "end of expression"               shift, and go to state 558
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder             go to state 464
    expr_reader                go to state 465
    expression_label           go to state 559
    expression_goto            go to state 560
    if_or_static_if            go to state 561
    expression_if_one_liner    go to state 562
    expression_if_then_else    go to state 563
    expression_for_loop        go to state 564
    expression_unsafe          go to state 565
    expression_while_loop      go to state 566
    expression_with            go to state 567
    expression_with_alias      go to state 568
    expr_call_pipe             go to state 569
    expression_any             go to state 570
    expr_keyword               go to state 571
    expression_keyword         go to state 572
    expr_pipe                  go to state 573
    name_in_namespace          go to state 467
    expression_delete          go to state 574
    expr_new                   go to state 468
    expression_break           go to state 575
    expression_continue        go to state 576
    expression_return_no_pipe  go to state 577
    expression_return          go to state 578
    expression_yield_no_pipe   go to state 579
    expression_yield           go to state 580
    expression_try_catch       go to state 581
    kwd_let                    go to state 582
    expression_let             go to state 583
    expr_cast                  go to state 469
    expr_type_decl             go to state 470
    expr_type_info             go to state 471
    block_or_lambda            go to state 472
    expr_full_block            go to state 473
    expr_numeric_const         go to state 474
    expr_assign                go to state 584
    expr_assign_pipe           go to state 585
    expr_named_call            go to state 475
    expr_method_call           go to state 476
    func_addr_expr             go to state 477
    expr_field                 go to state 478
    expr_call                  go to state 479
    expr                       go to state 586
    expr_mtag                  go to state 481
    basic_type_declaration     go to state 482
    make_decl                  go to state 483
    make_struct_decl           go to state 484
    make_tuple_call            go to state 485
    make_dim_decl              go to state 486
    make_table_decl            go to state 487
    array_comprehension        go to state 488


State 396

  579 enum_list: enum_list . "end of expression"
  580          | enum_list . "name" "end of expression"
  581          | enum_list . "name" '=' expr "end of expression"
  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list . $@36 "end of code block"

    "name"               shift, and go to state 587
    "end of expression"  shift, and go to state 588

    $default  reduce using rule 596 ($@36)

    $@36  go to state 589


State 397

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@37 enum_list $@38 "end of code block"

    $default  reduce using rule 598 ($@37)

    $@37  go to state 590


State 398

  602 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 591


State 399

  605 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 605 (structure_name)


State 400

  612 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 519 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 592


State 401

  615 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list .

    $default  reduce using rule 615 (structure_declaration)


State 402

  569 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 346
    "name"  shift, and go to state 347

    let_variable_name_with_pos_list  go to state 348
    let_variable_declaration         go to state 593


State 403

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  507 optional_field_annotation: '[' '[' annotation_argument_list . ']' ']'

    ','  shift, and go to state 81
    ']'  shift, and go to state 594


State 404

  558 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 595
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 405

  559 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 596


State 406

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  561                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 597


State 407

  562 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  563                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 598


State 408

  556 optional_ref: '&' .

    $default  reduce using rule 556 (optional_ref)


State 409

  565 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  566                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 602


State 410

  678 type_declaration_no_options: "type" '<' $@43 . type_declaration '>' $@44

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 603


State 411

  701 type_declaration_no_options: "array" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 604


State 412

  704 type_declaration_no_options: "table" '<' $@50 . table_type_pair '>' $@51

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    table_type_pair              go to state 605
    type_declaration_no_options  go to state 271
    type_declaration             go to state 606


State 413

  766 make_struct_decl: "struct" . '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    '<'  shift, and go to state 607


State 414

  769 make_struct_decl: "class" . '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    '<'  shift, and go to state 608


State 415

  412 expr: "true" .

    $default  reduce using rule 412 (expr)


State 416

  413 expr: "false" .

    $default  reduce using rule 413 (expr)


State 417

  267 expr_new: "new" . new_type_declaration
  268         | "new" . new_type_declaration '(' ')'
  269         | "new" . new_type_declaration '(' expr_list ')'
  270         | "new" . new_type_declaration '(' make_struct_single ')'
  271         | "new" . make_decl

    "struct"               shift, and go to state 413
    "class"                shift, and go to state 414
    "array"                shift, and go to state 420
    "table"                shift, and go to state 422
    "fixed_array"          shift, and go to state 429
    "default"              shift, and go to state 430
    "tuple"                shift, and go to state 432
    "variant"              shift, and go to state 433
    "::"                   shift, and go to state 59
    "name"                 shift, and go to state 60
    "begin of code block"  shift, and go to state 454
    '<'                    shift, and go to state 609
    '['                    shift, and go to state 460

    name_in_namespace           go to state 266
    new_type_declaration        go to state 610
    structure_type_declaration  go to state 611
    make_decl                   go to state 612
    make_struct_decl            go to state 484
    make_tuple_call             go to state 485
    make_dim_decl               go to state 486
    make_table_decl             go to state 487
    array_comprehension         go to state 488


State 418

  311 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  312               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  313               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 613


State 419

  310 expr_type_decl: "type" . '<' $@15 type_declaration '>' $@16

    '<'  shift, and go to state 614


State 420

  783 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  786              | "array" . '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 615
    '('  shift, and go to state 616


State 421

  406 expr: "null" .

    $default  reduce using rule 406 (expr)


State 422

  794 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  795                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  796                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 617
    '('  shift, and go to state 618


State 423

  456 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 619


State 424

  301 expr_cast: "cast" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 620


State 425

  304 expr_cast: "upcast" . '<' $@11 type_declaration_no_options '>' $@12 expr

    '<'  shift, and go to state 621


State 426

  457 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 622


State 427

  307 expr_cast: "reinterpret" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 623


State 428

  488 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 624


State 429

  787 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  790              | "fixed_array" . '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 625
    '('  shift, and go to state 626


State 430

  775 make_struct_decl: "default" . '<' $@85 type_declaration_no_options '>' $@86

    '<'  shift, and go to state 627


State 431

  647 basic_type_declaration: "bitfield" .

    $default  reduce using rule 647 (basic_type_declaration)


State 432

  778 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  781                | "tuple" . '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')'

    '<'  shift, and go to state 628
    '('  shift, and go to state 629


State 433

  772 make_struct_decl: "variant" . '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')'

    '<'  shift, and go to state 630


State 434

  458 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  459     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 631


State 435

  442 expr: "++" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 632
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 436

  443 expr: "--" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 633
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 437

  490 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 634


State 438

  491 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 635


State 439

  492 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 636


State 440

  493 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 637


State 441

  494 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 638


State 442

  496 expr_mtag: "$c" . '(' expr ')' '(' ')'
  497          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 639


State 443

  495 expr_mtag: "..." .

    $default  reduce using rule 495 (expr_mtag)


State 444

  334 expr_numeric_const: "integer constant" .

    $default  reduce using rule 334 (expr_numeric_const)


State 445

  336 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 446

  335 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 335 (expr_numeric_const)


State 447

  337 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 448

  338 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 449

  339 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 450

  340 expr_numeric_const: "double constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 451

  249 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    '<'  shift, and go to state 640


State 452

  252 expression_keyword: "type function" . '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    '<'  shift, and go to state 641


State 453

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 642


State 454

  793 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  802 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 643
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 644
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 645
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 646
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 455

  419 expr: '-' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 647
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 456

  418 expr: '+' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 648
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 457

  455 expr: '*' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 649
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 458

  417 expr: '~' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 650
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 459

  416 expr: '!' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 651
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 460

  782 make_dim_decl: '[' . expr_list optional_comma ']'
  801 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 652
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 653
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 461

  446 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 655
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 462

  319 block_or_lambda: '$' .

    $default  reduce using rule 319 (block_or_lambda)


State 463

  320 block_or_lambda: '@' .
  321                | '@' . '@'
  387 func_addr_expr: '@' . '@' func_addr_name
  390               | '@' . '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  393               | '@' . '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  505 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 656

    $default  reduce using rule 320 (block_or_lambda)


State 464

  410 expr: string_builder .

    $default  reduce using rule 410 (expr)


State 465

  409 expr: expr_reader .

    $default  reduce using rule 409 (expr)


State 466

  489 expr: expression_keyword .

    $default  reduce using rule 489 (expr)


State 467

  381 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  382                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  401 expr_call: name_in_namespace . '(' ')'
  402          | name_in_namespace . '(' make_struct_single ')'
  403          | name_in_namespace . '(' expr_list ')'
  407 expr: name_in_namespace .
  487     | name_in_namespace . "name"

    "name"  shift, and go to state 657
    '('     shift, and go to state 658

    "name"    [reduce using rule 407 (expr)]
    '('       [reduce using rule 407 (expr)]
    $default  reduce using rule 407 (expr)


State 468

  480 expr: expr_new .

    $default  reduce using rule 480 (expr)


State 469

  479 expr: expr_cast .

    $default  reduce using rule 479 (expr)


State 470

  478 expr: expr_type_decl .

    $default  reduce using rule 478 (expr)


State 471

  477 expr: expr_type_info .

    $default  reduce using rule 477 (expr)


State 472

  332 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 113 (optional_annotation_list)]
    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 659


State 473

  483 expr: expr_full_block .

    $default  reduce using rule 483 (expr)


State 474

  408 expr: expr_numeric_const .

    $default  reduce using rule 408 (expr)


State 475

  482 expr: expr_named_call .

    $default  reduce using rule 482 (expr)


State 476

  481 expr: expr_method_call .

    $default  reduce using rule 481 (expr)


State 477

  453 expr: func_addr_expr .

    $default  reduce using rule 453 (expr)


State 478

  414 expr: expr_field .

    $default  reduce using rule 414 (expr)


State 479

  454 expr: expr_call .

    $default  reduce using rule 454 (expr)


State 480

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  679 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 695


State 481

  415 expr: expr_mtag .

    $default  reduce using rule 415 (expr)


State 482

  404 expr_call: basic_type_declaration . '(' ')'
  405          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 696


State 483

  411 expr: make_decl .

    $default  reduce using rule 411 (expr)


State 484

  750 make_decl: make_struct_decl .

    $default  reduce using rule 750 (make_decl)


State 485

  754 make_decl: make_tuple_call .

    $default  reduce using rule 754 (make_decl)


State 486

  751 make_decl: make_dim_decl .

    $default  reduce using rule 751 (make_decl)


State 487

  752 make_decl: make_table_decl .

    $default  reduce using rule 752 (make_decl)


State 488

  753 make_decl: array_comprehension .

    $default  reduce using rule 753 (make_decl)


State 489

  707 type_declaration_no_options: "iterator" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 697


State 490

  697 type_declaration_no_options: "smart_ptr" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 698


State 491

  656 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 699


State 492

  665 bitfield_type_declaration: "bitfield" '<' $@41 . bitfield_bits '>' $@42

    "name"  shift, and go to state 700

    bitfield_bits  go to state 701


State 493

  711 type_declaration_no_options: "block" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 702


State 494

  714 type_declaration_no_options: "block" '<' $@56 . optional_function_argument_list optional_function_type '>' $@57

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 703


State 495

  718 type_declaration_no_options: "function" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 704


State 496

  721 type_declaration_no_options: "function" '<' $@60 . optional_function_argument_list optional_function_type '>' $@61

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 705


State 497

  725 type_declaration_no_options: "lambda" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 706


State 498

  728 type_declaration_no_options: "lambda" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 707


State 499

  731 type_declaration_no_options: "tuple" '<' $@66 . tuple_type_list '>' $@67

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 518
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    tuple_type                   go to state 708
    tuple_type_list              go to state 709
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 521


State 500

  734 type_declaration_no_options: "variant" '<' $@68 . variant_type_list '>' $@69

    "name"  shift, and go to state 523

    variant_type       go to state 710
    variant_type_list  go to state 711


State 501

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  657 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 712


State 502

  682 type_declaration_no_options: '$' name_in_namespace '<' . $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 681 ($@45)

    $@45  go to state 713


State 503

  680 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 464
    expr_reader             go to state 465
    optional_expr_list      go to state 714
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 715
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 504

  692 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 692 (type_declaration_no_options)


State 505

  693 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 693 (type_declaration_no_options)


State 506

  686 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 686 (type_declaration_no_options)


State 507

  688 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 508

  683 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 716


State 509

  691 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 510

  675 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 675 (type_declaration_no_options)


State 511

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  668 dim_list: '[' expr . ']'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ']'    shift, and go to state 717


State 512

  669 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 718
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 513

  737 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 737 (type_declaration)


State 514

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  736 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    $default  reduce using rule 736 (type_declaration)

    dim_list  go to state 376


State 515

  662 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 719


State 516

  661 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 661 (bitfield_alias_bits)


State 517

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 . "end of code block"

    "end of code block"  shift, and go to state 720


State 518

  258 name_in_namespace: "name" .
  259                  | "name" . "::" "name"
  532 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 99
    ':'   shift, and go to state 721

    $default  reduce using rule 258 (name_in_namespace)


State 519

  536 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 536 (tuple_alias_type_list)


State 520

  537 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 722


State 521

  531 tuple_type: type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 531 (tuple_type)


State 522

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 . "end of code block"

    "end of code block"  shift, and go to state 723


State 523

  538 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 724


State 524

  542 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 542 (variant_alias_type_list)


State 525

  543 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 725


State 526

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 . "end of code block"

    "end of code block"  shift, and go to state 726


State 527

  179 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 179 (function_name)


State 528

  169 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 169 (function_name)


State 529

  528 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 727
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 530

  286 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 286 (kwd_let_var_or_nothing)


State 531

  287 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 287 (kwd_let_var_or_nothing)


State 532

  527 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 728
    "name"  shift, and go to state 729

    variable_declaration         go to state 730
    variable_name_with_pos_list  go to state 731


State 533

  530 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 388
    '['   shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 732


State 534

  117 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 535

  119 optional_function_type: ':' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 119 (optional_function_type)


State 536

  239 expressions: expressions error .

    $default  reduce using rule 239 (expressions)


State 537

   75 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 733
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 538

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 539

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 540

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 728
    "name"  shift, and go to state 729

    variable_name_with_pos_list  go to state 734


State 541

  274 expression_return_no_pipe: "return" .
  275                          | "return" . expr_list
  276                          | "return" . "<-" expr_list
  278 expression_return: "return" . expr_pipe
  279                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "<-"                              shift, and go to state 735
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 274 (expression_return_no_pipe)

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 736
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 737
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 739
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 542

  272 expression_break: "break" .

    $default  reduce using rule 272 (expression_break)


State 543

  285 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 740


State 544

  261 expression_delete: "delete" . expr
  262                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "explicit"                        shift, and go to state 741
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 742
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 545

   76 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 743
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 546

   77 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 744


State 547

  273 expression_continue: "continue" .

    $default  reduce using rule 273 (expression_continue)


State 548

  236 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 745


State 549

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 746


State 550

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "label"                           shift, and go to state 747
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 748
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 551

   74 expression_unsafe: "unsafe" . expression_block
  488 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 331
    '('                    shift, and go to state 624

    expression_block  go to state 749


State 552

  280 expression_yield_no_pipe: "yield" . expr
  281                         | "yield" . "<-" expr
  283 expression_yield: "yield" . expr_pipe
  284                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "<-"                              shift, and go to state 750
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 751
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 752
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 553

  256 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 756


State 554

  254 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 757


State 555

  255 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 758


State 556

  240 expr_keyword: "keyword" . expr expression_block
  249 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '<'                               shift, and go to state 640
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 759
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 557

  212 expression_block: "begin of code block" expressions "end of code block" .
  213                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 760

    $default  reduce using rule 212 (expression_block)


State 558

  216 expression_any: "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 559

  234 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 761


State 560

  235 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 762


State 561

   71 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 763
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 562

   72 expression_if_then_else: expression_if_one_liner . "if" expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 764


State 563

  232 expression_any: expression_if_then_else .

    $default  reduce using rule 232 (expression_any)


State 564

  227 expression_any: expression_for_loop .

    $default  reduce using rule 227 (expression_any)


State 565

  224 expression_any: expression_unsafe .

    $default  reduce using rule 224 (expression_any)


State 566

  223 expression_any: expression_while_loop .

    $default  reduce using rule 223 (expression_any)


State 567

  225 expression_any: expression_with .

    $default  reduce using rule 225 (expression_any)


State 568

  226 expression_any: expression_with_alias .

    $default  reduce using rule 226 (expression_any)


State 569

  257 expr_pipe: expr_call_pipe .

    $default  reduce using rule 257 (expr_pipe)


State 570

  238 expressions: expressions expression_any .

    $default  reduce using rule 238 (expressions)


State 571

  218 expression_any: expr_keyword .

    $default  reduce using rule 218 (expression_any)


State 572

  215 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  489 expr: expression_keyword .

    '$'  shift, and go to state 462
    '@'  shift, and go to state 753

    '$'       [reduce using rule 489 (expr)]
    '@'       [reduce using rule 489 (expr)]
    $default  reduce using rule 489 (expr)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 766


State 573

  217 expression_any: expr_pipe .

    $default  reduce using rule 217 (expression_any)


State 574

  221 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 767


State 575

   69 expression_if_one_liner: expression_break .
  228 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 768

    $default  reduce using rule 69 (expression_if_one_liner)


State 576

   70 expression_if_one_liner: expression_continue .
  229 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 769

    $default  reduce using rule 70 (expression_if_one_liner)


State 577

   67 expression_if_one_liner: expression_return_no_pipe .
  277 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 770

    $default  reduce using rule 67 (expression_if_one_liner)


State 578

  230 expression_any: expression_return .

    $default  reduce using rule 230 (expression_any)


State 579

   68 expression_if_one_liner: expression_yield_no_pipe .
  282 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 771

    $default  reduce using rule 68 (expression_if_one_liner)


State 580

  231 expression_any: expression_yield .

    $default  reduce using rule 231 (expression_any)


State 581

  233 expression_any: expression_try_catch .

    $default  reduce using rule 233 (expression_any)


State 582

  297 expression_let: kwd_let . optional_in_scope let_variable_declaration
  298               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 772

    $default  reduce using rule 292 (optional_in_scope)

    optional_in_scope  go to state 773


State 583

  222 expression_any: expression_let .

    $default  reduce using rule 222 (expression_any)


State 584

  220 expression_any: expr_assign . "end of expression"
  253 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 774
    "end of expression"  shift, and go to state 775


State 585

  219 expression_any: expr_assign_pipe .

    $default  reduce using rule 219 (expression_any)


State 586

   66 expression_if_one_liner: expr .
  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  364 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  365                 | expr . "<-" expr_assign_pipe_right
  366                 | expr . "&=" expr_assign_pipe_right
  367                 | expr . "|=" expr_assign_pipe_right
  368                 | expr . "^=" expr_assign_pipe_right
  369                 | expr . "&&=" expr_assign_pipe_right
  370                 | expr . "||=" expr_assign_pipe_right
  371                 | expr . "^^=" expr_assign_pipe_right
  372                 | expr . "+=" expr_assign_pipe_right
  373                 | expr . "-=" expr_assign_pipe_right
  374                 | expr . "*=" expr_assign_pipe_right
  375                 | expr . "/=" expr_assign_pipe_right
  376                 | expr . "%=" expr_assign_pipe_right
  377                 | expr . "<<=" expr_assign_pipe_right
  378                 | expr . ">>=" expr_assign_pipe_right
  379                 | expr . "<<<=" expr_assign_pipe_right
  380                 | expr . ">>>=" expr_assign_pipe_right
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 776
    "-="    shift, and go to state 777
    "/="    shift, and go to state 778
    "*="    shift, and go to state 779
    "%="    shift, and go to state 780
    "&="    shift, and go to state 781
    "|="    shift, and go to state 782
    "^="    shift, and go to state 783
    "<<"    shift, and go to state 662
    ">>"    shift, and go to state 663
    "++"    shift, and go to state 664
    "--"    shift, and go to state 665
    "<="    shift, and go to state 666
    "<<="   shift, and go to state 784
    ">>="   shift, and go to state 785
    ">="    shift, and go to state 667
    "=="    shift, and go to state 668
    "!="    shift, and go to state 669
    "->"    shift, and go to state 670
    "<-"    shift, and go to state 786
    "??"    shift, and go to state 671
    "?."    shift, and go to state 672
    "?["    shift, and go to state 673
    "<|"    shift, and go to state 674
    "|>"    shift, and go to state 675
    ":="    shift, and go to state 787
    "<<<"   shift, and go to state 676
    ">>>"   shift, and go to state 677
    "<<<="  shift, and go to state 788
    ">>>="  shift, and go to state 789
    "&&"    shift, and go to state 678
    "||"    shift, and go to state 679
    "^^"    shift, and go to state 680
    "&&="   shift, and go to state 790
    "||="   shift, and go to state 791
    "^^="   shift, and go to state 792
    ".."    shift, and go to state 681
    '='     shift, and go to state 793
    '?'     shift, and go to state 682
    '|'     shift, and go to state 683
    '^'     shift, and go to state 684
    '&'     shift, and go to state 685
    '<'     shift, and go to state 686
    '>'     shift, and go to state 687
    '-'     shift, and go to state 688
    '+'     shift, and go to state 689
    '*'     shift, and go to state 690
    '/'     shift, and go to state 691
    '%'     shift, and go to state 692
    '.'     shift, and go to state 693
    '['     shift, and go to state 694
    '$'     shift, and go to state 462
    '@'     shift, and go to state 753

    "if"      reduce using rule 66 (expression_if_one_liner)
    $default  reduce using rule 341 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 587

  580 enum_list: enum_list "name" . "end of expression"
  581          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 795
    '='                  shift, and go to state 796


State 588

  579 enum_list: enum_list "end of expression" .

    $default  reduce using rule 579 (enum_list)


State 589

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 . "end of code block"

    "end of code block"  shift, and go to state 797


State 590

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 . enum_list $@38 "end of code block"

    $default  reduce using rule 578 (enum_list)

    enum_list  go to state 798


State 591

  602 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 602 (optional_structure_parent)


State 592

  521 struct_variable_declaration_list: struct_variable_declaration_list . $@29 structure_variable_declaration "end of expression"
  523                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  526                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  612 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 799
    '['                  shift, and go to state 800

    "def"     reduce using rule 113 (optional_annotation_list)
    '['       [reduce using rule 520 ($@29)]
    $default  reduce using rule 520 ($@29)

    optional_annotation_list  go to state 801
    $@29                      go to state 802


State 593

  569 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 569 (global_variable_declaration_list)


State 594

  507 optional_field_annotation: '[' '[' annotation_argument_list ']' . ']'

    ']'  shift, and go to state 803


State 595

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  558 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 804


State 596

  559 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 559 (let_variable_name_with_pos_list)


State 597

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  561                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 805

    $default  reduce using rule 560 (let_variable_name_with_pos_list)


State 598

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  563                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 366
    "implicit"           shift, and go to state 367
    "explicit"           shift, and go to state 368
    "=="                 shift, and go to state 369
    "<-"                 shift, and go to state 599
    "??"                 shift, and go to state 370
    ":="                 shift, and go to state 600
    "end of expression"  shift, and go to state 806
    '='                  shift, and go to state 601
    '?'                  shift, and go to state 371
    '&'                  shift, and go to state 372
    '-'                  shift, and go to state 373
    '['                  shift, and go to state 374
    '#'                  shift, and go to state 375

    copy_or_move_or_clone  go to state 807
    dim_list               go to state 376


State 599

  553 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 553 (copy_or_move_or_clone)


State 600

  554 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 554 (copy_or_move_or_clone)


State 601

  552 copy_or_move_or_clone: '=' .

    $default  reduce using rule 552 (copy_or_move_or_clone)


State 602

  565 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  566                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 808
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 809
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 603

  678 type_declaration_no_options: "type" '<' $@43 type_declaration . '>' $@44
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 810


State 604

  701 type_declaration_no_options: "array" '<' $@48 type_declaration . '>' $@49
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 811


State 605

  704 type_declaration_no_options: "table" '<' $@50 table_type_pair . '>' $@51

    '>'  shift, and go to state 812


State 606

  666 table_type_pair: type_declaration .
  667                | type_declaration . "end of expression" type_declaration
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 813
    '|'                  shift, and go to state 377

    $default  reduce using rule 666 (table_type_pair)


State 607

  766 make_struct_decl: "struct" '<' . $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    $default  reduce using rule 764 ($@79)

    $@79  go to state 814


State 608

  769 make_struct_decl: "class" '<' . $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    $default  reduce using rule 767 ($@81)

    $@81  go to state 815


State 609

  265 new_type_declaration: '<' . $@7 type_declaration '>' $@8

    $default  reduce using rule 263 ($@7)

    $@7  go to state 816


State 610

  267 expr_new: "new" new_type_declaration .
  268         | "new" new_type_declaration . '(' ')'
  269         | "new" new_type_declaration . '(' expr_list ')'
  270         | "new" new_type_declaration . '(' make_struct_single ')'

    '('  shift, and go to state 817

    '('       [reduce using rule 267 (expr_new)]
    $default  reduce using rule 267 (expr_new)


State 611

  266 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 266 (new_type_declaration)


State 612

  271 expr_new: "new" make_decl .

    $default  reduce using rule 271 (expr_new)


State 613

  311 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  312               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  313               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 818


State 614

  310 expr_type_decl: "type" '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 308 ($@15)

    $@15  go to state 819


State 615

  786 make_dim_decl: "array" '<' . $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 784 ($@89)

    $@89  go to state 820


State 616

  783 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 821
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 617

  795 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  796                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 822


State 618

  794 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 644
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 645
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 823
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 619

  456 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 824
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 620

  301 expr_cast: "cast" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 299 ($@9)

    $@9  go to state 825


State 621

  304 expr_cast: "upcast" '<' . $@11 type_declaration_no_options '>' $@12 expr

    $default  reduce using rule 302 ($@11)

    $@11  go to state 826


State 622

  457 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 827
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 623

  307 expr_cast: "reinterpret" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 305 ($@13)

    $@13  go to state 828


State 624

  488 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 829
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 625

  790 make_dim_decl: "fixed_array" '<' . $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 788 ($@91)

    $@91  go to state 830


State 626

  787 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 831
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 627

  775 make_struct_decl: "default" '<' . $@85 type_declaration_no_options '>' $@86

    $default  reduce using rule 773 ($@85)

    $@85  go to state 832


State 628

  781 make_tuple_call: "tuple" '<' . $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')'

    $default  reduce using rule 779 ($@87)

    $@87  go to state 833


State 629

  778 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 834
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 630

  772 make_struct_decl: "variant" '<' . $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')'

    $default  reduce using rule 770 ($@83)

    $@83  go to state 835


State 631

  458 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  459     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 836


State 632

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  442     | "++" expr .
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 442 (expr)


State 633

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  443     | "--" expr .
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 443 (expr)


State 634

  490 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 837
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 635

  491 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 838
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 636

  492 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 839
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 637

  493 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 840
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 638

  494 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 841
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 639

  496 expr_mtag: "$c" '(' . expr ')' '(' ')'
  497          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 842
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 640

  249 expression_keyword: "keyword" '<' . $@3 type_declaration_no_options_list '>' $@4 expr

    $default  reduce using rule 247 ($@3)

    $@3  go to state 843


State 641

  252 expression_keyword: "type function" '<' . $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    $default  reduce using rule 250 ($@5)

    $@5  go to state 844


State 642

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 845
    "{"                   shift, and go to state 846

    character_sequence  go to state 847


State 643

  802 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 728
    "name"  shift, and go to state 729

    variable_name_with_pos_list  go to state 848


State 644

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  776 make_map_tuple: expr . "=>" expr
  777               | expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "=>"   shift, and go to state 849
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 777 (make_map_tuple)


State 645

  791 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 791 (expr_map_tuple_list)


State 646

  792 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  793 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 850

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 851


State 647

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  419 expr: '-' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 419 (expr)


State 648

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  418 expr: '+' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 418 (expr)


State 649

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  455     | '*' expr .
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 455 (expr)


State 650

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  417 expr: '~' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 417 (expr)


State 651

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  416 expr: '!' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 416 (expr)


State 652

  801 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 728
    "name"  shift, and go to state 729

    variable_name_with_pos_list  go to state 852


State 653

  315 expr_list: expr_list . ',' expr
  782 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 854


State 654

  314 expr_list: expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 314 (expr_list)


State 655

  315 expr_list: expr_list . ',' expr
  446 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 855


State 656

  321 block_or_lambda: '@' '@' .
  387 func_addr_expr: '@' '@' . func_addr_name
  390               | '@' '@' . '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  393               | '@' '@' . '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  505 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 856
    "$c"    shift, and go to state 857
    "name"  shift, and go to state 60
    '<'     shift, and go to state 858

    $default  reduce using rule 321 (block_or_lambda)

    name_in_namespace  go to state 859
    func_addr_name     go to state 860


State 657

  487 expr: name_in_namespace "name" .

    $default  reduce using rule 487 (expr)


State 658

  381 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  382                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  401 expr_call: name_in_namespace '(' . ')'
  402          | name_in_namespace '(' . make_struct_single ')'
  403          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "$f"                              shift, and go to state 861
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 862
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 863
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 864
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 865
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 866
    make_struct_single      go to state 867
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 659

  332 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 868

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 869


State 660

  464 expr: expr "is" . "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr "is" . basic_type_declaration
  466     | expr "is" . "name"
  504 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 870
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 431
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 871
    "name"      shift, and go to state 872

    basic_type_declaration  go to state 873


State 661

  467 expr: expr "as" . "name"
  470     | expr "as" . "type" '<' $@25 type_declaration '>' $@26
  471     | expr "as" . basic_type_declaration
  502 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 874
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 431
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 875
    "name"      shift, and go to state 876

    basic_type_declaration  go to state 877


State 662

  420 expr: expr "<<" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 878
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 663

  421 expr: expr ">>" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 879
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 664

  444 expr: expr "++" .

    $default  reduce using rule 444 (expr)


State 665

  445 expr: expr "--" .

    $default  reduce using rule 445 (expr)


State 666

  433 expr: expr "<=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 880
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 667

  434 expr: expr ">=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 881
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 668

  431 expr: expr "==" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 882
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 669

  432 expr: expr "!=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 883
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 670

  383 expr_method_call: expr "->" . "name" '(' ')'
  384                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 884


State 671

  460 expr: expr "??" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 885
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 672

  451 expr: expr "?." . "name"
  499 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 886
    "name"  shift, and go to state 887


State 673

  449 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 888
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 674

  484 expr: expr "<|" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 889
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 675

  485 expr: expr "|>" . expr
  486     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 890
    expr_mtag               go to state 481
    basic_type_declaration  go to state 891
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 676

  422 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 892
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 677

  423 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 893
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 678

  438 expr: expr "&&" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 894
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 679

  439 expr: expr "||" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 895
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 680

  440 expr: expr "^^" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 896
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 681

  441 expr: expr ".." . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 897
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 682

  461 expr: expr '?' . expr ':' expr
  472     | expr '?' . "as" "name"
  475     | expr '?' . "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr '?' . "as" basic_type_declaration
  503 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "as"                              shift, and go to state 898
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 899
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 683

  436 expr: expr '|' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 900
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 684

  437 expr: expr '^' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 901
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 685

  435 expr: expr '&' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 902
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 686

  429 expr: expr '<' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 903
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 687

  430 expr: expr '>' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 904
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 688

  425 expr: expr '-' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 905
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 689

  424 expr: expr '+' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 906
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 690

  426 expr: expr '*' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 907
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 691

  427 expr: expr '/' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 908
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 692

  428 expr: expr '%' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 909
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 693

  394 expr_field: expr '.' . "name"
  395           | expr '.' . '.' "name"
  396           | expr '.' . "name" '(' ')'
  397           | expr '.' . "name" '(' expr_list ')'
  400           | expr '.' . $@21 error $@22
  448 expr: expr '.' . '[' expr ']'
  450     | expr '.' . "?[" expr ']'
  452     | expr '.' . "?." "name"
  498 expr_mtag: expr '.' . "$f" '(' expr ')'
  500          | expr '.' . '.' "$f" '(' expr ')'
  501          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 910
    "?["    shift, and go to state 911
    "$f"    shift, and go to state 912
    "name"  shift, and go to state 913
    '.'     shift, and go to state 914
    '['     shift, and go to state 915

    $default  reduce using rule 398 ($@21)

    $@21  go to state 916


State 694

  447 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 917
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 695

  679 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 679 (type_declaration_no_options)


State 696

  404 expr_call: basic_type_declaration '(' . ')'
  405          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 918
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 919
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 697

  707 type_declaration_no_options: "iterator" '<' $@52 type_declaration . '>' $@53
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 920


State 698

  697 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration . '>' $@47
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 921


State 699

  656 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 656 (auto_type_declaration)


State 700

  658 bitfield_bits: "name" .

    $default  reduce using rule 658 (bitfield_bits)


State 701

  659 bitfield_bits: bitfield_bits . "end of expression" "name"
  665 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits . '>' $@42

    "end of expression"  shift, and go to state 922
    '>'                  shift, and go to state 923


State 702

  711 type_declaration_no_options: "block" '<' $@54 type_declaration . '>' $@55
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 924


State 703

  714 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list . optional_function_type '>' $@57

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 925


State 704

  718 type_declaration_no_options: "function" '<' $@58 type_declaration . '>' $@59
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 926


State 705

  721 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list . optional_function_type '>' $@61

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 927


State 706

  725 type_declaration_no_options: "lambda" '<' $@62 type_declaration . '>' $@63
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 928


State 707

  728 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 929


State 708

  533 tuple_type_list: tuple_type .

    $default  reduce using rule 533 (tuple_type_list)


State 709

  534 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  731 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list . '>' $@67

    "end of expression"  shift, and go to state 930
    '>'                  shift, and go to state 931


State 710

  539 variant_type_list: variant_type .

    $default  reduce using rule 539 (variant_type_list)


State 711

  540 variant_type_list: variant_type_list . "end of expression" variant_type
  734 type_declaration_no_options: "variant" '<' $@68 variant_type_list . '>' $@69

    "end of expression"  shift, and go to state 932
    '>'                  shift, and go to state 933


State 712

  657 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 657 (auto_type_declaration)


State 713

  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    type_declaration_no_options_list  go to state 934
    name_in_namespace                 go to state 266
    basic_type_declaration            go to state 267
    structure_type_declaration        go to state 268
    auto_type_declaration             go to state 269
    bitfield_type_declaration         go to state 270
    type_declaration_no_options       go to state 271
    type_declaration                  go to state 935


State 714

  680 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 936


State 715

  242 optional_expr_list: expr_list .
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 937

    $default  reduce using rule 242 (optional_expr_list)


State 716

  683 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 683 (type_declaration_no_options)


State 717

  668 dim_list: '[' expr ']' .

    $default  reduce using rule 668 (dim_list)


State 718

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  669 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ']'    shift, and go to state 938


State 719

  662 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 662 (bitfield_alias_bits)


State 720

  749 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block" .

    $default  reduce using rule 749 (bitfield_alias_declaration)


State 721

  532 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 939


State 722

  537 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 537 (tuple_alias_type_list)


State 723

  741 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block" .

    $default  reduce using rule 741 (tuple_alias_declaration)


State 724

  538 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 940


State 725

  543 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 543 (variant_alias_type_list)


State 726

  745 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block" .

    $default  reduce using rule 745 (variant_alias_declaration)


State 727

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  528 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 941


State 728

  617 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 942


State 729

  616 variable_name_with_pos_list: "name" .
  618                            | "name" . "aka" "name"

    "aka"  shift, and go to state 943

    $default  reduce using rule 616 (variable_name_with_pos_list)


State 730

  527 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 527 (function_argument_declaration)


State 731

  546 variable_declaration: variable_name_with_pos_list .
  547                     | variable_name_with_pos_list . '&'
  548                     | variable_name_with_pos_list . ':' type_declaration
  549                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  550                     | variable_name_with_pos_list . copy_or_move expr
  551                     | variable_name_with_pos_list . copy_or_move expr_pipe
  619 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  620                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 944
    ','   shift, and go to state 945
    '='   shift, and go to state 946
    ':'   shift, and go to state 947
    '&'   shift, and go to state 948

    $default  reduce using rule 546 (variable_declaration)

    copy_or_move  go to state 949


State 732

  530 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 530 (function_argument_list)


State 733

   75 expression_while_loop: "while" expr . expression_block
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 660
    "as"                   shift, and go to state 661
    "<<"                   shift, and go to state 662
    ">>"                   shift, and go to state 663
    "++"                   shift, and go to state 664
    "--"                   shift, and go to state 665
    "<="                   shift, and go to state 666
    ">="                   shift, and go to state 667
    "=="                   shift, and go to state 668
    "!="                   shift, and go to state 669
    "->"                   shift, and go to state 670
    "??"                   shift, and go to state 671
    "?."                   shift, and go to state 672
    "?["                   shift, and go to state 673
    "<|"                   shift, and go to state 674
    "|>"                   shift, and go to state 675
    "<<<"                  shift, and go to state 676
    ">>>"                  shift, and go to state 677
    "&&"                   shift, and go to state 678
    "||"                   shift, and go to state 679
    "^^"                   shift, and go to state 680
    ".."                   shift, and go to state 681
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 682
    '|'                    shift, and go to state 683
    '^'                    shift, and go to state 684
    '&'                    shift, and go to state 685
    '<'                    shift, and go to state 686
    '>'                    shift, and go to state 687
    '-'                    shift, and go to state 688
    '+'                    shift, and go to state 689
    '*'                    shift, and go to state 690
    '/'                    shift, and go to state 691
    '%'                    shift, and go to state 692
    '.'                    shift, and go to state 693
    '['                    shift, and go to state 694

    expression_block  go to state 950


State 734

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list expression_block
  619 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  620                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 951
    ','   shift, and go to state 945


State 735

  276 expression_return_no_pipe: "return" "<-" . expr_list
  279 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 952
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 953
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 739
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 736

  278 expression_return: "return" expr_pipe .

    $default  reduce using rule 278 (expression_return)


State 737

  275 expression_return_no_pipe: "return" expr_list .
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 937

    $default  reduce using rule 275 (expression_return_no_pipe)


State 738

  253 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 774


State 739

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  314 expr_list: expr .
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 954
    "-="    shift, and go to state 955
    "/="    shift, and go to state 956
    "*="    shift, and go to state 957
    "%="    shift, and go to state 958
    "&="    shift, and go to state 959
    "|="    shift, and go to state 960
    "^="    shift, and go to state 961
    "<<"    shift, and go to state 662
    ">>"    shift, and go to state 663
    "++"    shift, and go to state 664
    "--"    shift, and go to state 665
    "<="    shift, and go to state 666
    "<<="   shift, and go to state 962
    ">>="   shift, and go to state 963
    ">="    shift, and go to state 667
    "=="    shift, and go to state 668
    "!="    shift, and go to state 669
    "->"    shift, and go to state 670
    "<-"    shift, and go to state 964
    "??"    shift, and go to state 671
    "?."    shift, and go to state 672
    "?["    shift, and go to state 673
    "<|"    shift, and go to state 674
    "|>"    shift, and go to state 675
    ":="    shift, and go to state 787
    "<<<"   shift, and go to state 676
    ">>>"   shift, and go to state 677
    "<<<="  shift, and go to state 965
    ">>>="  shift, and go to state 966
    "&&"    shift, and go to state 678
    "||"    shift, and go to state 679
    "^^"    shift, and go to state 680
    "&&="   shift, and go to state 967
    "||="   shift, and go to state 968
    "^^="   shift, and go to state 969
    ".."    shift, and go to state 681
    '='     shift, and go to state 970
    '?'     shift, and go to state 682
    '|'     shift, and go to state 683
    '^'     shift, and go to state 684
    '&'     shift, and go to state 685
    '<'     shift, and go to state 686
    '>'     shift, and go to state 687
    '-'     shift, and go to state 688
    '+'     shift, and go to state 689
    '*'     shift, and go to state 690
    '/'     shift, and go to state 691
    '%'     shift, and go to state 692
    '.'     shift, and go to state 693
    '['     shift, and go to state 694
    '$'     shift, and go to state 462
    '@'     shift, and go to state 753

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 314 (expr_list)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 740

  285 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 971


State 741

  262 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 972
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 742

  261 expression_delete: "delete" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 261 (expression_delete)


State 743

   76 expression_with: "with" expr . expression_block
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 660
    "as"                   shift, and go to state 661
    "<<"                   shift, and go to state 662
    ">>"                   shift, and go to state 663
    "++"                   shift, and go to state 664
    "--"                   shift, and go to state 665
    "<="                   shift, and go to state 666
    ">="                   shift, and go to state 667
    "=="                   shift, and go to state 668
    "!="                   shift, and go to state 669
    "->"                   shift, and go to state 670
    "??"                   shift, and go to state 671
    "?."                   shift, and go to state 672
    "?["                   shift, and go to state 673
    "<|"                   shift, and go to state 674
    "|>"                   shift, and go to state 675
    "<<<"                  shift, and go to state 676
    ">>>"                  shift, and go to state 677
    "&&"                   shift, and go to state 678
    "||"                   shift, and go to state 679
    "^^"                   shift, and go to state 680
    ".."                   shift, and go to state 681
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 682
    '|'                    shift, and go to state 683
    '^'                    shift, and go to state 684
    '&'                    shift, and go to state 685
    '<'                    shift, and go to state 686
    '>'                    shift, and go to state 687
    '-'                    shift, and go to state 688
    '+'                    shift, and go to state 689
    '*'                    shift, and go to state 690
    '/'                    shift, and go to state 691
    '%'                    shift, and go to state 692
    '.'                    shift, and go to state 693
    '['                    shift, and go to state 694

    expression_block  go to state 973


State 744

   77 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 974


State 745

  236 expression_any: "pass" "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 746

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 975


State 747

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 976


State 748

   56 expression_goto: "goto" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 56 (expression_goto)


State 749

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 750

  281 expression_yield_no_pipe: "yield" "<-" . expr
  284 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 977
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 978
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 751

  283 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 283 (expression_yield)


State 752

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  280 expression_yield_no_pipe: "yield" expr .
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 954
    "-="    shift, and go to state 955
    "/="    shift, and go to state 956
    "*="    shift, and go to state 957
    "%="    shift, and go to state 958
    "&="    shift, and go to state 959
    "|="    shift, and go to state 960
    "^="    shift, and go to state 961
    "<<"    shift, and go to state 662
    ">>"    shift, and go to state 663
    "++"    shift, and go to state 664
    "--"    shift, and go to state 665
    "<="    shift, and go to state 666
    "<<="   shift, and go to state 962
    ">>="   shift, and go to state 963
    ">="    shift, and go to state 667
    "=="    shift, and go to state 668
    "!="    shift, and go to state 669
    "->"    shift, and go to state 670
    "<-"    shift, and go to state 964
    "??"    shift, and go to state 671
    "?."    shift, and go to state 672
    "?["    shift, and go to state 673
    "<|"    shift, and go to state 674
    "|>"    shift, and go to state 675
    ":="    shift, and go to state 787
    "<<<"   shift, and go to state 676
    ">>>"   shift, and go to state 677
    "<<<="  shift, and go to state 965
    ">>>="  shift, and go to state 966
    "&&"    shift, and go to state 678
    "||"    shift, and go to state 679
    "^^"    shift, and go to state 680
    "&&="   shift, and go to state 967
    "||="   shift, and go to state 968
    "^^="   shift, and go to state 969
    ".."    shift, and go to state 681
    '='     shift, and go to state 970
    '?'     shift, and go to state 682
    '|'     shift, and go to state 683
    '^'     shift, and go to state 684
    '&'     shift, and go to state 685
    '<'     shift, and go to state 686
    '>'     shift, and go to state 687
    '-'     shift, and go to state 688
    '+'     shift, and go to state 689
    '*'     shift, and go to state 690
    '/'     shift, and go to state 691
    '%'     shift, and go to state 692
    '.'     shift, and go to state 693
    '['     shift, and go to state 694
    '$'     shift, and go to state 462
    '@'     shift, and go to state 753

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 280 (expression_yield_no_pipe)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 753

  320 block_or_lambda: '@' .
  321                | '@' . '@'

    '@'  shift, and go to state 979

    $default  reduce using rule 320 (block_or_lambda)


State 754

  330 expr_block: expression_block .

    $default  reduce using rule 330 (expr_block)


State 755

  331 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 113 (optional_annotation_list)]
    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 980


State 756

  256 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 256 (expr_pipe)


State 757

  254 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 254 (expr_pipe)


State 758

  255 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 255 (expr_pipe)


State 759

  240 expr_keyword: "keyword" expr . expression_block
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 660
    "as"                   shift, and go to state 661
    "<<"                   shift, and go to state 662
    ">>"                   shift, and go to state 663
    "++"                   shift, and go to state 664
    "--"                   shift, and go to state 665
    "<="                   shift, and go to state 666
    ">="                   shift, and go to state 667
    "=="                   shift, and go to state 668
    "!="                   shift, and go to state 669
    "->"                   shift, and go to state 670
    "??"                   shift, and go to state 671
    "?."                   shift, and go to state 672
    "?["                   shift, and go to state 673
    "<|"                   shift, and go to state 674
    "|>"                   shift, and go to state 675
    "<<<"                  shift, and go to state 676
    ">>>"                  shift, and go to state 677
    "&&"                   shift, and go to state 678
    "||"                   shift, and go to state 679
    "^^"                   shift, and go to state 680
    ".."                   shift, and go to state 681
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 682
    '|'                    shift, and go to state 683
    '^'                    shift, and go to state 684
    '&'                    shift, and go to state 685
    '<'                    shift, and go to state 686
    '>'                    shift, and go to state 687
    '-'                    shift, and go to state 688
    '+'                    shift, and go to state 689
    '*'                    shift, and go to state 690
    '/'                    shift, and go to state 691
    '%'                    shift, and go to state 692
    '.'                    shift, and go to state 693
    '['                    shift, and go to state 694

    expression_block  go to state 981


State 760

  213 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 982


State 761

  234 expression_any: expression_label "end of expression" .

    $default  reduce using rule 234 (expression_any)


State 762

  235 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 763

   71 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 660
    "as"                   shift, and go to state 661
    "<<"                   shift, and go to state 662
    ">>"                   shift, and go to state 663
    "++"                   shift, and go to state 664
    "--"                   shift, and go to state 665
    "<="                   shift, and go to state 666
    ">="                   shift, and go to state 667
    "=="                   shift, and go to state 668
    "!="                   shift, and go to state 669
    "->"                   shift, and go to state 670
    "??"                   shift, and go to state 671
    "?."                   shift, and go to state 672
    "?["                   shift, and go to state 673
    "<|"                   shift, and go to state 674
    "|>"                   shift, and go to state 675
    "<<<"                  shift, and go to state 676
    ">>>"                  shift, and go to state 677
    "&&"                   shift, and go to state 678
    "||"                   shift, and go to state 679
    "^^"                   shift, and go to state 680
    ".."                   shift, and go to state 681
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 682
    '|'                    shift, and go to state 683
    '^'                    shift, and go to state 684
    '&'                    shift, and go to state 685
    '<'                    shift, and go to state 686
    '>'                    shift, and go to state 687
    '-'                    shift, and go to state 688
    '+'                    shift, and go to state 689
    '*'                    shift, and go to state 690
    '/'                    shift, and go to state 691
    '%'                    shift, and go to state 692
    '.'                    shift, and go to state 693
    '['                    shift, and go to state 694

    expression_block  go to state 983


State 764

   72 expression_if_then_else: expression_if_one_liner "if" . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 984
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 765

  333 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 113 (optional_annotation_list)]
    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 985


State 766

  215 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 215 (expr_call_pipe)


State 767

  221 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 768

  228 expression_any: expression_break "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 769

  229 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 770

  277 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 277 (expression_return)


State 771

  282 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 282 (expression_yield)


State 772

  291 optional_in_scope: "inscope" .

    $default  reduce using rule 291 (optional_in_scope)


State 773

  297 expression_let: kwd_let optional_in_scope . let_variable_declaration
  298               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 346
    "name"  shift, and go to state 347
    '('     shift, and go to state 986

    tuple_expansion_variable_declaration  go to state 987
    let_variable_name_with_pos_list       go to state 348
    let_variable_declaration              go to state 988


State 774

  253 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 989


State 775

  220 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 220 (expression_any)


State 776

  351 expr_assign: expr "+=" . expr
  372 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 995
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 777

  352 expr_assign: expr "-=" . expr
  373 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 996
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 997
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 778

  354 expr_assign: expr "/=" . expr
  375 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 998
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 999
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 779

  353 expr_assign: expr "*=" . expr
  374 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1001
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 780

  355 expr_assign: expr "%=" . expr
  376 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1003
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 781

  345 expr_assign: expr "&=" . expr
  366 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1004
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1005
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 782

  346 expr_assign: expr "|=" . expr
  367 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1006
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1007
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 783

  347 expr_assign: expr "^=" . expr
  368 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1008
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1009
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 784

  356 expr_assign: expr "<<=" . expr
  377 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1011
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 785

  357 expr_assign: expr ">>=" . expr
  378 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1013
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 786

  343 expr_assign: expr "<-" . expr
  365 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1015
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 787

  344 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1016
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 788

  358 expr_assign: expr "<<<=" . expr
  379 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1017
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1018
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 789

  359 expr_assign: expr ">>>=" . expr
  380 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1020
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 790

  348 expr_assign: expr "&&=" . expr
  369 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1022
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 791

  349 expr_assign: expr "||=" . expr
  370 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1023
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1024
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 792

  350 expr_assign: expr "^^=" . expr
  371 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1025
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1026
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 793

  342 expr_assign: expr '=' . expr
  364 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 990
    "@ <|"                            shift, and go to state 991
    "@@ <|"                           shift, and go to state 992
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 993
    expression_keyword      go to state 572
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1028
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 794

  214 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 214 (expr_call_pipe)


State 795

  580 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 580 (enum_list)


State 796

  581 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1029
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 797

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block" .

    $default  reduce using rule 597 (enum_declaration)


State 798

  579 enum_list: enum_list . "end of expression"
  580          | enum_list . "name" "end of expression"
  581          | enum_list . "name" '=' expr "end of expression"
  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list . $@38 "end of code block"

    "name"               shift, and go to state 587
    "end of expression"  shift, and go to state 588

    $default  reduce using rule 599 ($@38)

    $@38  go to state 1030


State 799

  612 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 612 (optional_struct_variable_declaration_list)


State 800

  114 optional_annotation_list: '[' . annotation_list ']'
  526 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 1031
    name_in_namespace             go to state 71


State 801

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "def"  shift, and go to state 1032


State 802

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 . structure_variable_declaration "end of expression"

    '['  shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    optional_field_annotation       go to state 1033
    structure_variable_declaration  go to state 1034


State 803

  507 optional_field_annotation: '[' '[' annotation_argument_list ']' ']' .

    $default  reduce using rule 507 (optional_field_annotation)


State 804

  558 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 805

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1035


State 806

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 562 (let_variable_declaration)


State 807

  563 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  564                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 1036
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1037
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 808

  566 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 566 (let_variable_declaration)


State 809

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  565 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 660
    "as"                 shift, and go to state 661
    "+="                 shift, and go to state 954
    "-="                 shift, and go to state 955
    "/="                 shift, and go to state 956
    "*="                 shift, and go to state 957
    "%="                 shift, and go to state 958
    "&="                 shift, and go to state 959
    "|="                 shift, and go to state 960
    "^="                 shift, and go to state 961
    "<<"                 shift, and go to state 662
    ">>"                 shift, and go to state 663
    "++"                 shift, and go to state 664
    "--"                 shift, and go to state 665
    "<="                 shift, and go to state 666
    "<<="                shift, and go to state 962
    ">>="                shift, and go to state 963
    ">="                 shift, and go to state 667
    "=="                 shift, and go to state 668
    "!="                 shift, and go to state 669
    "->"                 shift, and go to state 670
    "<-"                 shift, and go to state 964
    "??"                 shift, and go to state 671
    "?."                 shift, and go to state 672
    "?["                 shift, and go to state 673
    "<|"                 shift, and go to state 674
    "|>"                 shift, and go to state 675
    ":="                 shift, and go to state 787
    "<<<"                shift, and go to state 676
    ">>>"                shift, and go to state 677
    "<<<="               shift, and go to state 965
    ">>>="               shift, and go to state 966
    "&&"                 shift, and go to state 678
    "||"                 shift, and go to state 679
    "^^"                 shift, and go to state 680
    "&&="                shift, and go to state 967
    "||="                shift, and go to state 968
    "^^="                shift, and go to state 969
    ".."                 shift, and go to state 681
    "end of expression"  shift, and go to state 1038
    '='                  shift, and go to state 970
    '?'                  shift, and go to state 682
    '|'                  shift, and go to state 683
    '^'                  shift, and go to state 684
    '&'                  shift, and go to state 685
    '<'                  shift, and go to state 686
    '>'                  shift, and go to state 687
    '-'                  shift, and go to state 688
    '+'                  shift, and go to state 689
    '*'                  shift, and go to state 690
    '/'                  shift, and go to state 691
    '%'                  shift, and go to state 692
    '.'                  shift, and go to state 693
    '['                  shift, and go to state 694
    '$'                  shift, and go to state 462
    '@'                  shift, and go to state 753

    $default  reduce using rule 341 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 810

  678 type_declaration_no_options: "type" '<' $@43 type_declaration '>' . $@44

    $default  reduce using rule 677 ($@44)

    $@44  go to state 1039


State 811

  701 type_declaration_no_options: "array" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 700 ($@49)

    $@49  go to state 1040


State 812

  704 type_declaration_no_options: "table" '<' $@50 table_type_pair '>' . $@51

    $default  reduce using rule 703 ($@51)

    $@51  go to state 1041


State 813

  667 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1042


State 814

  766 make_struct_decl: "struct" '<' $@79 . type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1043


State 815

  769 make_struct_decl: "class" '<' $@81 . type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1044


State 816

  265 new_type_declaration: '<' $@7 . type_declaration '>' $@8

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1045


State 817

  268 expr_new: "new" new_type_declaration '(' . ')'
  269         | "new" new_type_declaration '(' . expr_list ')'
  270         | "new" new_type_declaration '(' . make_struct_single ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "$f"                              shift, and go to state 861
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 862
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1046
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1047
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 866
    make_struct_single      go to state 1048
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 818

  311 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  312               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '<'                               shift, and go to state 1049
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1050
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 819

  310 expr_type_decl: "type" '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1051


State 820

  786 make_dim_decl: "array" '<' $@89 . type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1052


State 821

  315 expr_list: expr_list . ',' expr
  783 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1053


State 822

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  795 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  796                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 366
    "implicit"           shift, and go to state 367
    "explicit"           shift, and go to state 368
    "=="                 shift, and go to state 369
    "??"                 shift, and go to state 370
    "end of expression"  shift, and go to state 1054
    '?'                  shift, and go to state 371
    '&'                  shift, and go to state 372
    '>'                  shift, and go to state 1055
    '-'                  shift, and go to state 373
    '['                  shift, and go to state 374
    '#'                  shift, and go to state 375

    dim_list  go to state 376


State 823

  792 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  794 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 850

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1056


State 824

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  456     | "deref" '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1057


State 825

  301 expr_cast: "cast" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1058


State 826

  304 expr_cast: "upcast" '<' $@11 . type_declaration_no_options '>' $@12 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1059


State 827

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  457     | "addr" '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1060


State 828

  307 expr_cast: "reinterpret" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1061


State 829

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  488     | "unsafe" '(' expr . ')'
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1062


State 830

  790 make_dim_decl: "fixed_array" '<' $@91 . type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1063


State 831

  315 expr_list: expr_list . ',' expr
  787 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1064


State 832

  775 make_struct_decl: "default" '<' $@85 . type_declaration_no_options '>' $@86

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1065


State 833

  781 make_tuple_call: "tuple" '<' $@87 . type_declaration_no_options '>' $@88 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1066


State 834

  315 expr_list: expr_list . ',' expr
  778 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1067


State 835

  772 make_struct_decl: "variant" '<' $@83 . type_declaration_no_options '>' $@84 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1068


State 836

  458 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  459     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1069
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 837

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  490 expr_mtag: "$$" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1070


State 838

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$i" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1071


State 839

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$v" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1072


State 840

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$b" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1073


State 841

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$a" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1074


State 842

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: "$c" '(' expr . ')' '(' ')'
  497          | "$c" '(' expr . ')' '(' expr_list ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1075


State 843

  249 expression_keyword: "keyword" '<' $@3 . type_declaration_no_options_list '>' $@4 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    type_declaration_no_options_list  go to state 1076
    name_in_namespace                 go to state 266
    basic_type_declaration            go to state 267
    structure_type_declaration        go to state 268
    auto_type_declaration             go to state 269
    bitfield_type_declaration         go to state 270
    type_declaration_no_options       go to state 271
    type_declaration                  go to state 935


State 844

  252 expression_keyword: "type function" '<' $@5 . type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    type_declaration_no_options_list  go to state 1077
    name_in_namespace                 go to state 266
    basic_type_declaration            go to state 267
    structure_type_declaration        go to state 268
    auto_type_declaration             go to state 269
    bitfield_type_declaration         go to state 270
    type_declaration_no_options       go to state 271
    type_declaration                  go to state 935


State 845

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 846

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1078
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 847

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 848

  619 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  620                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1079
    ','   shift, and go to state 945


State 849

  776 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1080
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 850

  792 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  800 optional_comma: ',' .

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 800 (optional_comma)

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 644
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 1081
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 851

  793 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1082


State 852

  619 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  620                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  801 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1083
    ','   shift, and go to state 945


State 853

  315 expr_list: expr_list ',' . expr
  800 optional_comma: ',' .

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 800 (optional_comma)

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1084
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 854

  782 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1085


State 855

  446 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1086


State 856

  386 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1087


State 857

  505 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1088


State 858

  390 func_addr_expr: '@' '@' '<' . $@17 type_declaration_no_options '>' $@18 func_addr_name
  393               | '@' '@' '<' . $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    ':'       reduce using rule 391 ($@19)
    '>'       reduce using rule 391 ($@19)
    '('       reduce using rule 391 ($@19)
    $default  reduce using rule 388 ($@17)

    $@17  go to state 1089
    $@19  go to state 1090


State 859

  385 func_addr_name: name_in_namespace .

    $default  reduce using rule 385 (func_addr_name)


State 860

  387 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 387 (func_addr_expr)


State 861

  759 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  760                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1091


State 862

  258 name_in_namespace: "name" .
  259                  | "name" . "::" "name"
  755 make_struct_fields: "name" . copy_or_move expr
  756                   | "name" . ":=" expr

    "<-"  shift, and go to state 944
    ":="  shift, and go to state 1092
    "::"  shift, and go to state 99
    '='   shift, and go to state 946

    $default  reduce using rule 258 (name_in_namespace)

    copy_or_move  go to state 1093


State 863

  381 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  782 make_dim_decl: '[' . expr_list optional_comma ']'
  801 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 652
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "$f"                              shift, and go to state 861
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 862
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 653
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 1094
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 864

  401 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 401 (expr_call)


State 865

  315 expr_list: expr_list . ',' expr
  382 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1095
    ')'  shift, and go to state 1096


State 866

  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  763 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1097

    $default  reduce using rule 763 (make_struct_single)


State 867

  402 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1098


State 868

  329 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1099


State 869

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1100


State 870

  464 expr: expr "is" "type" . '<' $@23 type_declaration_no_options '>' $@24

    '<'  shift, and go to state 1101


State 871

  504 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1102


State 872

  466 expr: expr "is" "name" .

    $default  reduce using rule 466 (expr)


State 873

  465 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 465 (expr)


State 874

  470 expr: expr "as" "type" . '<' $@25 type_declaration '>' $@26

    '<'  shift, and go to state 1103


State 875

  502 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1104


State 876

  467 expr: expr "as" "name" .

    $default  reduce using rule 467 (expr)


State 877

  471 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 471 (expr)


State 878

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  420     | expr "<<" expr .
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '-'   shift, and go to state 688
    '+'   shift, and go to state 689
    '*'   shift, and go to state 690
    '/'   shift, and go to state 691
    '%'   shift, and go to state 692
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 420 (expr)


State 879

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  421     | expr ">>" expr .
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '-'   shift, and go to state 688
    '+'   shift, and go to state 689
    '*'   shift, and go to state 690
    '/'   shift, and go to state 691
    '%'   shift, and go to state 692
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 421 (expr)


State 880

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  433     | expr "<=" expr .
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 433 (expr)


State 881

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  434     | expr ">=" expr .
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 434 (expr)


State 882

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  431     | expr "==" expr .
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 431 (expr)


State 883

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  432     | expr "!=" expr .
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 432 (expr)


State 884

  383 expr_method_call: expr "->" "name" . '(' ')'
  384                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1105


State 885

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  460     | expr "??" expr .
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 460 (expr)


State 886

  499 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1106


State 887

  451 expr: expr "?." "name" .

    $default  reduce using rule 451 (expr)


State 888

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  449     | expr "?[" expr . ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ']'    shift, and go to state 1107


State 889

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  484     | expr "<|" expr .
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 484 (expr)


State 890

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  485     | expr "|>" expr .
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 670
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 485 (expr)


State 891

  404 expr_call: basic_type_declaration . '(' ')'
  405          | basic_type_declaration . '(' expr_list ')'
  486 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 696

    $default  reduce using rule 486 (expr)


State 892

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  422     | expr "<<<" expr .
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '-'   shift, and go to state 688
    '+'   shift, and go to state 689
    '*'   shift, and go to state 690
    '/'   shift, and go to state 691
    '%'   shift, and go to state 692
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 422 (expr)


State 893

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  423     | expr ">>>" expr .
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '-'   shift, and go to state 688
    '+'   shift, and go to state 689
    '*'   shift, and go to state 690
    '/'   shift, and go to state 691
    '%'   shift, and go to state 692
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 423 (expr)


State 894

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  438     | expr "&&" expr .
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 438 (expr)


State 895

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  439     | expr "||" expr .
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "^^"   shift, and go to state 680
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 439 (expr)


State 896

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  440     | expr "^^" expr .
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 440 (expr)


State 897

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  441     | expr ".." expr .
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    ".."  error (nonassociative)

    $default  reduce using rule 441 (expr)


State 898

  472 expr: expr '?' "as" . "name"
  475     | expr '?' "as" . "type" '<' $@27 type_declaration '>' $@28
  476     | expr '?' "as" . basic_type_declaration
  503 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1108
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 431
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 1109
    "name"      shift, and go to state 1110

    basic_type_declaration  go to state 1111


State 899

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  461     | expr '?' expr . ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    ':'    shift, and go to state 1112
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694


State 900

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  436     | expr '|' expr .
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 436 (expr)


State 901

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  437     | expr '^' expr .
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 437 (expr)


State 902

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  435     | expr '&' expr .
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 435 (expr)


State 903

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  429     | expr '<' expr .
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 429 (expr)


State 904

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  430     | expr '>' expr .
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 430 (expr)


State 905

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  425     | expr '-' expr .
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '*'   shift, and go to state 690
    '/'   shift, and go to state 691
    '%'   shift, and go to state 692
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 425 (expr)


State 906

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  424     | expr '+' expr .
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '*'   shift, and go to state 690
    '/'   shift, and go to state 691
    '%'   shift, and go to state 692
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 424 (expr)


State 907

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  426     | expr '*' expr .
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 426 (expr)


State 908

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  427     | expr '/' expr .
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 427 (expr)


State 909

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  428     | expr '%' expr .
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 660
    "as"  shift, and go to state 661
    "++"  shift, and go to state 664
    "--"  shift, and go to state 665
    "->"  shift, and go to state 670
    "??"  shift, and go to state 671
    "?."  shift, and go to state 672
    "?["  shift, and go to state 673
    "<|"  shift, and go to state 674
    "|>"  shift, and go to state 675
    '.'   shift, and go to state 693
    '['   shift, and go to state 694

    $default  reduce using rule 428 (expr)


State 910

  452 expr: expr '.' "?." . "name"
  501 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1113
    "name"  shift, and go to state 1114


State 911

  450 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1115
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 912

  498 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1116


State 913

  394 expr_field: expr '.' "name" .
  396           | expr '.' "name" . '(' ')'
  397           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1117

    '('       [reduce using rule 394 (expr_field)]
    $default  reduce using rule 394 (expr_field)


State 914

  395 expr_field: expr '.' '.' . "name"
  500 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1118
    "name"  shift, and go to state 1119


State 915

  448 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1120
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 916

  400 expr_field: expr '.' $@21 . error $@22

    error  shift, and go to state 1121


State 917

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  447     | expr '[' expr . ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ']'    shift, and go to state 1122


State 918

  404 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 404 (expr_call)


State 919

  315 expr_list: expr_list . ',' expr
  405 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 937
    ')'  shift, and go to state 1123


State 920

  707 type_declaration_no_options: "iterator" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 706 ($@53)

    $@53  go to state 1124


State 921

  697 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 696 ($@47)

    $@47  go to state 1125


State 922

  659 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1126


State 923

  665 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits '>' . $@42

    $default  reduce using rule 664 ($@42)

    $@42  go to state 1127


State 924

  711 type_declaration_no_options: "block" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 710 ($@55)

    $@55  go to state 1128


State 925

  714 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type . '>' $@57

    '>'  shift, and go to state 1129


State 926

  718 type_declaration_no_options: "function" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 717 ($@59)

    $@59  go to state 1130


State 927

  721 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type . '>' $@61

    '>'  shift, and go to state 1131


State 928

  725 type_declaration_no_options: "lambda" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 724 ($@63)

    $@63  go to state 1132


State 929

  728 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1133


State 930

  534 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 518
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    tuple_type                   go to state 1134
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 521


State 931

  731 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list '>' . $@67

    $default  reduce using rule 730 ($@67)

    $@67  go to state 1135


State 932

  540 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 523

    variant_type  go to state 1136


State 933

  734 type_declaration_no_options: "variant" '<' $@68 variant_type_list '>' . $@69

    $default  reduce using rule 733 ($@69)

    $@69  go to state 1137


State 934

  246 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1138
    '>'                  shift, and go to state 1139


State 935

  245 type_declaration_no_options_list: type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 245 (type_declaration_no_options_list)


State 936

  680 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 680 (type_declaration_no_options)


State 937

  315 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1084
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 938

  669 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 669 (dim_list)


State 939

  532 tuple_type: "name" ':' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 532 (tuple_type)


State 940

  538 variant_type: "name" ':' type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 538 (variant_type)


State 941

  528 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 528 (function_argument_declaration)


State 942

  617 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1140
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 943

  618 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1141


State 944

  545 copy_or_move: "<-" .

    $default  reduce using rule 545 (copy_or_move)


State 945

  619 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  620                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1142


State 946

  544 copy_or_move: '=' .

    $default  reduce using rule 544 (copy_or_move)


State 947

  548 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  549                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1143


State 948

  547 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 547 (variable_declaration)


State 949

  550 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  551                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expr_call_pipe          go to state 569
    expression_keyword      go to state 572
    expr_pipe               go to state 1144
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_assign             go to state 738
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1145
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 950

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 951

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1146
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 952

  279 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 279 (expression_return)


State 953

  276 expression_return_no_pipe: "return" "<-" expr_list .
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 937

    $default  reduce using rule 276 (expression_return_no_pipe)


State 954

  351 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1147
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 955

  352 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1148
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 956

  354 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1149
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 957

  353 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1150
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 958

  355 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1151
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 959

  345 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1152
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 960

  346 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1153
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 961

  347 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1154
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 962

  356 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1155
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 963

  357 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1156
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 964

  343 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1157
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 965

  358 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1158
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 966

  359 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1159
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 967

  348 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1160
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 968

  349 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1161
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 969

  350 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1162
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 970

  342 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1163
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 971

  285 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1164


State 972

  262 expression_delete: "delete" "explicit" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 262 (expression_delete)


State 973

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 974

   77 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1165
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 975

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 976

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 977

  284 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 284 (expression_yield)


State 978

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  281 expression_yield_no_pipe: "yield" "<-" expr .
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 954
    "-="    shift, and go to state 955
    "/="    shift, and go to state 956
    "*="    shift, and go to state 957
    "%="    shift, and go to state 958
    "&="    shift, and go to state 959
    "|="    shift, and go to state 960
    "^="    shift, and go to state 961
    "<<"    shift, and go to state 662
    ">>"    shift, and go to state 663
    "++"    shift, and go to state 664
    "--"    shift, and go to state 665
    "<="    shift, and go to state 666
    "<<="   shift, and go to state 962
    ">>="   shift, and go to state 963
    ">="    shift, and go to state 667
    "=="    shift, and go to state 668
    "!="    shift, and go to state 669
    "->"    shift, and go to state 670
    "<-"    shift, and go to state 964
    "??"    shift, and go to state 671
    "?."    shift, and go to state 672
    "?["    shift, and go to state 673
    "<|"    shift, and go to state 674
    "|>"    shift, and go to state 675
    ":="    shift, and go to state 787
    "<<<"   shift, and go to state 676
    ">>>"   shift, and go to state 677
    "<<<="  shift, and go to state 965
    ">>>="  shift, and go to state 966
    "&&"    shift, and go to state 678
    "||"    shift, and go to state 679
    "^^"    shift, and go to state 680
    "&&="   shift, and go to state 967
    "||="   shift, and go to state 968
    "^^="   shift, and go to state 969
    ".."    shift, and go to state 681
    '='     shift, and go to state 970
    '?'     shift, and go to state 682
    '|'     shift, and go to state 683
    '^'     shift, and go to state 684
    '&'     shift, and go to state 685
    '<'     shift, and go to state 686
    '>'     shift, and go to state 687
    '-'     shift, and go to state 688
    '+'     shift, and go to state 689
    '*'     shift, and go to state 690
    '/'     shift, and go to state 691
    '%'     shift, and go to state 692
    '.'     shift, and go to state 693
    '['     shift, and go to state 694
    '$'     shift, and go to state 462
    '@'     shift, and go to state 753

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 281 (expression_yield_no_pipe)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 979

  321 block_or_lambda: '@' '@' .

    $default  reduce using rule 321 (block_or_lambda)


State 980

  331 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 868

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 1166


State 981

  240 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 240 (expr_keyword)


State 982

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 237 (expressions)

    expressions  go to state 1167


State 983

   71 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1168
    "elif"         shift, and go to state 1169
    "static_elif"  shift, and go to state 1170

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1171
    expression_else      go to state 1172


State 984

   72 expression_if_then_else: expression_if_one_liner "if" expr . expression_else_one_liner "end of expression"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1173
    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "<<"    shift, and go to state 662
    ">>"    shift, and go to state 663
    "++"    shift, and go to state 664
    "--"    shift, and go to state 665
    "<="    shift, and go to state 666
    ">="    shift, and go to state 667
    "=="    shift, and go to state 668
    "!="    shift, and go to state 669
    "->"    shift, and go to state 670
    "??"    shift, and go to state 671
    "?."    shift, and go to state 672
    "?["    shift, and go to state 673
    "<|"    shift, and go to state 674
    "|>"    shift, and go to state 675
    "<<<"   shift, and go to state 676
    ">>>"   shift, and go to state 677
    "&&"    shift, and go to state 678
    "||"    shift, and go to state 679
    "^^"    shift, and go to state 680
    ".."    shift, and go to state 681
    '?'     shift, and go to state 682
    '|'     shift, and go to state 683
    '^'     shift, and go to state 684
    '&'     shift, and go to state 685
    '<'     shift, and go to state 686
    '>'     shift, and go to state 687
    '-'     shift, and go to state 688
    '+'     shift, and go to state 689
    '*'     shift, and go to state 690
    '/'     shift, and go to state 691
    '%'     shift, and go to state 692
    '.'     shift, and go to state 693
    '['     shift, and go to state 694

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1174


State 985

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 868

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 1175


State 986

  295 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1176

    tuple_expansion  go to state 1177


State 987

  298 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 298 (expression_let)


State 988

  297 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 297 (expression_let)


State 989

  253 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 990

  362 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 1178


State 991

  360 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 1179


State 992

  361 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 462
    '@'                    shift, and go to state 753

    expression_block  go to state 754
    block_or_lambda   go to state 755
    expr_block        go to state 1180


State 993

  363 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 363 (expr_assign_pipe_right)


State 994

  372 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 995

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "+=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 996

  373 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 997

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "-=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 998

  375 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 999

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "/=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1000

  374 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 1001

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "*=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1002

  376 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 1003

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "%=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1004

  366 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 366 (expr_assign_pipe)


State 1005

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr "&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1006

  367 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 367 (expr_assign_pipe)


State 1007

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr "|=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1008

  368 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 368 (expr_assign_pipe)


State 1009

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr "^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1010

  377 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1011

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1012

  378 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1013

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr ">>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1014

  365 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 365 (expr_assign_pipe)


State 1015

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1016

  344 expr_assign: expr ":=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 344 (expr_assign)


State 1017

  379 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1018

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "<<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1019

  380 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1020

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr ">>>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1021

  369 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 1022

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr "&&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1023

  370 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 1024

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr "||=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1025

  371 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 1026

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "^^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1027

  364 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 364 (expr_assign_pipe)


State 1028

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr '=' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    '$'    shift, and go to state 462
    '@'    shift, and go to state 753

    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1029

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  581 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 660
    "as"                 shift, and go to state 661
    "<<"                 shift, and go to state 662
    ">>"                 shift, and go to state 663
    "++"                 shift, and go to state 664
    "--"                 shift, and go to state 665
    "<="                 shift, and go to state 666
    ">="                 shift, and go to state 667
    "=="                 shift, and go to state 668
    "!="                 shift, and go to state 669
    "->"                 shift, and go to state 670
    "??"                 shift, and go to state 671
    "?."                 shift, and go to state 672
    "?["                 shift, and go to state 673
    "<|"                 shift, and go to state 674
    "|>"                 shift, and go to state 675
    "<<<"                shift, and go to state 676
    ">>>"                shift, and go to state 677
    "&&"                 shift, and go to state 678
    "||"                 shift, and go to state 679
    "^^"                 shift, and go to state 680
    ".."                 shift, and go to state 681
    "end of expression"  shift, and go to state 1181
    '?'                  shift, and go to state 682
    '|'                  shift, and go to state 683
    '^'                  shift, and go to state 684
    '&'                  shift, and go to state 685
    '<'                  shift, and go to state 686
    '>'                  shift, and go to state 687
    '-'                  shift, and go to state 688
    '+'                  shift, and go to state 689
    '*'                  shift, and go to state 690
    '/'                  shift, and go to state 691
    '%'                  shift, and go to state 692
    '.'                  shift, and go to state 693
    '['                  shift, and go to state 694


State 1030

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 . "end of code block"

    "end of code block"  shift, and go to state 1182


State 1031

  112 annotation_list: annotation_list . ',' annotation_declaration
  114 optional_annotation_list: '[' annotation_list . ']'
  526 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 108
    ']'  shift, and go to state 1183


State 1032

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "public"   shift, and go to state 1184
    "private"  shift, and go to state 1185

    $default  reduce using rule 513 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1186


State 1033

  518 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1187

    $default  reduce using rule 516 (optional_static_member_variable)

    optional_static_member_variable  go to state 1188


State 1034

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1189


State 1035

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 561 (let_variable_name_with_pos_list)


State 1036

  564 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 564 (let_variable_declaration)


State 1037

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  563 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 660
    "as"                 shift, and go to state 661
    "+="                 shift, and go to state 954
    "-="                 shift, and go to state 955
    "/="                 shift, and go to state 956
    "*="                 shift, and go to state 957
    "%="                 shift, and go to state 958
    "&="                 shift, and go to state 959
    "|="                 shift, and go to state 960
    "^="                 shift, and go to state 961
    "<<"                 shift, and go to state 662
    ">>"                 shift, and go to state 663
    "++"                 shift, and go to state 664
    "--"                 shift, and go to state 665
    "<="                 shift, and go to state 666
    "<<="                shift, and go to state 962
    ">>="                shift, and go to state 963
    ">="                 shift, and go to state 667
    "=="                 shift, and go to state 668
    "!="                 shift, and go to state 669
    "->"                 shift, and go to state 670
    "<-"                 shift, and go to state 964
    "??"                 shift, and go to state 671
    "?."                 shift, and go to state 672
    "?["                 shift, and go to state 673
    "<|"                 shift, and go to state 674
    "|>"                 shift, and go to state 675
    ":="                 shift, and go to state 787
    "<<<"                shift, and go to state 676
    ">>>"                shift, and go to state 677
    "<<<="               shift, and go to state 965
    ">>>="               shift, and go to state 966
    "&&"                 shift, and go to state 678
    "||"                 shift, and go to state 679
    "^^"                 shift, and go to state 680
    "&&="                shift, and go to state 967
    "||="                shift, and go to state 968
    "^^="                shift, and go to state 969
    ".."                 shift, and go to state 681
    "end of expression"  shift, and go to state 1190
    '='                  shift, and go to state 970
    '?'                  shift, and go to state 682
    '|'                  shift, and go to state 683
    '^'                  shift, and go to state 684
    '&'                  shift, and go to state 685
    '<'                  shift, and go to state 686
    '>'                  shift, and go to state 687
    '-'                  shift, and go to state 688
    '+'                  shift, and go to state 689
    '*'                  shift, and go to state 690
    '/'                  shift, and go to state 691
    '%'                  shift, and go to state 692
    '.'                  shift, and go to state 693
    '['                  shift, and go to state 694
    '$'                  shift, and go to state 462
    '@'                  shift, and go to state 753

    $default  reduce using rule 341 (expr_assign)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1038

  565 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 565 (let_variable_declaration)


State 1039

  678 type_declaration_no_options: "type" '<' $@43 type_declaration '>' $@44 .

    $default  reduce using rule 678 (type_declaration_no_options)


State 1040

  701 type_declaration_no_options: "array" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 701 (type_declaration_no_options)


State 1041

  704 type_declaration_no_options: "table" '<' $@50 table_type_pair '>' $@51 .

    $default  reduce using rule 704 (type_declaration_no_options)


State 1042

  667 table_type_pair: type_declaration "end of expression" type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 667 (table_type_pair)


State 1043

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options . '>' $@80 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1191
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1044

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options . '>' $@82 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1192
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1045

  265 new_type_declaration: '<' $@7 type_declaration . '>' $@8
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1193


State 1046

  268 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 268 (expr_new)


State 1047

  269 expr_new: "new" new_type_declaration '(' expr_list . ')'
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 937
    ')'  shift, and go to state 1194


State 1048

  270 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1195


State 1049

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1196


State 1050

  311 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1197


State 1051

  310 expr_type_decl: "type" '<' $@15 type_declaration . '>' $@16
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1198


State 1052

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options . '>' $@90 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1199
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1053

  783 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1200


State 1054

  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1201


State 1055

  795 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1202


State 1056

  794 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1203


State 1057

  456 expr: "deref" '(' expr ')' .

    $default  reduce using rule 456 (expr)


State 1058

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options . '>' $@10 expr
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1204
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1059

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options . '>' $@12 expr
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1205
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1060

  457 expr: "addr" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 1061

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options . '>' $@14 expr
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1206
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1062

  488 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 488 (expr)


State 1063

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options . '>' $@92 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1207
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1064

  787 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1208


State 1065

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  775 make_struct_decl: "default" '<' $@85 type_declaration_no_options . '>' $@86

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1209
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1066

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options . '>' $@88 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1210
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1067

  778 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1211


State 1068

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options . '>' $@84 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1212
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1069

  458 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  459     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 868

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 1213


State 1070

  490 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1071

  491 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1072

  492 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1073

  493 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1074

  494 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1075

  496 expr_mtag: "$c" '(' expr ')' . '(' ')'
  497          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1214


State 1076

  246 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list . '>' $@4 expr

    "end of expression"  shift, and go to state 1138
    '>'                  shift, and go to state 1215


State 1077

  246 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list . '>' $@6 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1138
    '>'                  shift, and go to state 1216


State 1078

   30 string_builder_body: string_builder_body "{" expr . "}"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    "}"    shift, and go to state 1217
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694


State 1079

  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1218
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1080

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  776 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 776 (make_map_tuple)


State 1081

  792 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 792 (expr_map_tuple_list)


State 1082

  793 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 793 (make_table_decl)


State 1083

  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1219
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1084

  315 expr_list: expr_list ',' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 315 (expr_list)


State 1085

  782 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 782 (make_dim_decl)


State 1086

  446 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 446 (expr)


State 1087

  386 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1220
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1088

  505 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1221
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1089

  390 func_addr_expr: '@' '@' '<' $@17 . type_declaration_no_options '>' $@18 func_addr_name

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1222


State 1090

  393 func_addr_expr: '@' '@' '<' $@19 . optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1223


State 1091

  759 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  760                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1224
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1092

  756 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1225
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1093

  755 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1226
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1094

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1097
    ']'  shift, and go to state 1227


State 1095

  315 expr_list: expr_list ',' . expr
  382 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 1228
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1084
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1096

  403 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 403 (expr_call)


State 1097

  757 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  758                   | make_struct_fields ',' . "name" ":=" expr
  761                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1229
    "name"  shift, and go to state 1230


State 1098

  402 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 402 (expr_call)


State 1099

  329 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1231
    ":="  shift, and go to state 1232
    '='   shift, and go to state 1233
    '&'   shift, and go to state 1234

    capture_entry  go to state 1235
    capture_list   go to state 1236


State 1100

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1237


State 1101

  464 expr: expr "is" "type" '<' . $@23 type_declaration_no_options '>' $@24

    $default  reduce using rule 462 ($@23)

    $@23  go to state 1238


State 1102

  504 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1239
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1103

  470 expr: expr "as" "type" '<' . $@25 type_declaration '>' $@26

    $default  reduce using rule 468 ($@25)

    $@25  go to state 1240


State 1104

  502 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1241
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1105

  383 expr_method_call: expr "->" "name" '(' . ')'
  384                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1242
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1243
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1106

  499 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1244
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1107

  449 expr: expr "?[" expr ']' .

    $default  reduce using rule 449 (expr)


State 1108

  475 expr: expr '?' "as" "type" . '<' $@27 type_declaration '>' $@28

    '<'  shift, and go to state 1245


State 1109

  503 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1246


State 1110

  472 expr: expr '?' "as" "name" .

    $default  reduce using rule 472 (expr)


State 1111

  476 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 476 (expr)


State 1112

  461 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1247
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1113

  501 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1248


State 1114

  452 expr: expr '.' "?." "name" .

    $default  reduce using rule 452 (expr)


State 1115

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  450     | expr '.' "?[" expr . ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ']'    shift, and go to state 1249


State 1116

  498 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1250
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1117

  396 expr_field: expr '.' "name" '(' . ')'
  397           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1251
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1252
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1118

  500 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1253


State 1119

  395 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 395 (expr_field)


State 1120

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  448     | expr '.' '[' expr . ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ']'    shift, and go to state 1254


State 1121

  400 expr_field: expr '.' $@21 error . $@22

    $default  reduce using rule 399 ($@22)

    $@22  go to state 1255


State 1122

  447 expr: expr '[' expr ']' .

    $default  reduce using rule 447 (expr)


State 1123

  405 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 405 (expr_call)


State 1124

  707 type_declaration_no_options: "iterator" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 707 (type_declaration_no_options)


State 1125

  697 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 697 (type_declaration_no_options)


State 1126

  659 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 659 (bitfield_bits)


State 1127

  665 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits '>' $@42 .

    $default  reduce using rule 665 (bitfield_type_declaration)


State 1128

  711 type_declaration_no_options: "block" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 711 (type_declaration_no_options)


State 1129

  714 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type '>' . $@57

    $default  reduce using rule 713 ($@57)

    $@57  go to state 1256


State 1130

  718 type_declaration_no_options: "function" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 718 (type_declaration_no_options)


State 1131

  721 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type '>' . $@61

    $default  reduce using rule 720 ($@61)

    $@61  go to state 1257


State 1132

  725 type_declaration_no_options: "lambda" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1133

  728 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 727 ($@65)

    $@65  go to state 1258


State 1134

  534 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 534 (tuple_type_list)


State 1135

  731 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list '>' $@67 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1136

  540 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 540 (variant_type_list)


State 1137

  734 type_declaration_no_options: "variant" '<' $@68 variant_type_list '>' $@69 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1138

  246 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1259


State 1139

  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1260


State 1140

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  617 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1261


State 1141

  618 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 618 (variable_name_with_pos_list)


State 1142

  619 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  620                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1262

    $default  reduce using rule 619 (variable_name_with_pos_list)


State 1143

  548 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  549                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 944
    '='   shift, and go to state 946
    '|'   shift, and go to state 377

    $default  reduce using rule 548 (variable_declaration)

    copy_or_move  go to state 1263


State 1144

  551 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 551 (variable_declaration)


State 1145

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  550 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 660
    "as"    shift, and go to state 661
    "+="    shift, and go to state 954
    "-="    shift, and go to state 955
    "/="    shift, and go to state 956
    "*="    shift, and go to state 957
    "%="    shift, and go to state 958
    "&="    shift, and go to state 959
    "|="    shift, and go to state 960
    "^="    shift, and go to state 961
    "<<"    shift, and go to state 662
    ">>"    shift, and go to state 663
    "++"    shift, and go to state 664
    "--"    shift, and go to state 665
    "<="    shift, and go to state 666
    "<<="   shift, and go to state 962
    ">>="   shift, and go to state 963
    ">="    shift, and go to state 667
    "=="    shift, and go to state 668
    "!="    shift, and go to state 669
    "->"    shift, and go to state 670
    "<-"    shift, and go to state 964
    "??"    shift, and go to state 671
    "?."    shift, and go to state 672
    "?["    shift, and go to state 673
    "<|"    shift, and go to state 674
    "|>"    shift, and go to state 675
    ":="    shift, and go to state 787
    "<<<"   shift, and go to state 676
    ">>>"   shift, and go to state 677
    "<<<="  shift, and go to state 965
    ">>>="  shift, and go to state 966
    "&&"    shift, and go to state 678
    "||"    shift, and go to state 679
    "^^"    shift, and go to state 680
    "&&="   shift, and go to state 967
    "||="   shift, and go to state 968
    "^^="   shift, and go to state 969
    ".."    shift, and go to state 681
    '='     shift, and go to state 970
    '?'     shift, and go to state 682
    '|'     shift, and go to state 683
    '^'     shift, and go to state 684
    '&'     shift, and go to state 685
    '<'     shift, and go to state 686
    '>'     shift, and go to state 687
    '-'     shift, and go to state 688
    '+'     shift, and go to state 689
    '*'     shift, and go to state 690
    '/'     shift, and go to state 691
    '%'     shift, and go to state 692
    '.'     shift, and go to state 693
    '['     shift, and go to state 694
    '$'     shift, and go to state 462
    '@'     shift, and go to state 753

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 550 (variable_declaration)

    block_or_lambda                go to state 765
    expr_full_block_assumed_piped  go to state 794


State 1146

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . expression_block
  315 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 331
    ','                    shift, and go to state 937

    expression_block  go to state 1264


State 1147

  351 expr_assign: expr "+=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 351 (expr_assign)


State 1148

  352 expr_assign: expr "-=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 352 (expr_assign)


State 1149

  354 expr_assign: expr "/=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 354 (expr_assign)


State 1150

  353 expr_assign: expr "*=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 353 (expr_assign)


State 1151

  355 expr_assign: expr "%=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 355 (expr_assign)


State 1152

  345 expr_assign: expr "&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 345 (expr_assign)


State 1153

  346 expr_assign: expr "|=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 346 (expr_assign)


State 1154

  347 expr_assign: expr "^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 347 (expr_assign)


State 1155

  356 expr_assign: expr "<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 356 (expr_assign)


State 1156

  357 expr_assign: expr ">>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 357 (expr_assign)


State 1157

  343 expr_assign: expr "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 343 (expr_assign)


State 1158

  358 expr_assign: expr "<<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 358 (expr_assign)


State 1159

  359 expr_assign: expr ">>>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 359 (expr_assign)


State 1160

  348 expr_assign: expr "&&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 348 (expr_assign)


State 1161

  349 expr_assign: expr "||=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 349 (expr_assign)


State 1162

  350 expr_assign: expr "^^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 350 (expr_assign)


State 1163

  342 expr_assign: expr '=' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 342 (expr_assign)


State 1164

  285 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 285 (expression_try_catch)


State 1165

   77 expression_with_alias: "assume" "name" '=' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 77 (expression_with_alias)


State 1166

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1265


State 1167

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  238 expressions: expressions . expression_any
  239            | expressions . error

    error                             shift, and go to state 536
    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 537
    "if"                              shift, and go to state 538
    "static_if"                       shift, and go to state 539
    "for"                             shift, and go to state 540
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "return"                          shift, and go to state 541
    "null"                            shift, and go to state 421
    "break"                           shift, and go to state 542
    "try"                             shift, and go to state 543
    "table"                           shift, and go to state 422
    "delete"                          shift, and go to state 544
    "deref"                           shift, and go to state 423
    "with"                            shift, and go to state 545
    "assume"                          shift, and go to state 546
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 426
    "continue"                        shift, and go to state 547
    "pass"                            shift, and go to state 548
    "reinterpret"                     shift, and go to state 427
    "label"                           shift, and go to state 549
    "goto"                            shift, and go to state 550
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "yield"                           shift, and go to state 552
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "$ <|"                            shift, and go to state 553
    "@ <|"                            shift, and go to state 554
    "@@ <|"                           shift, and go to state 555
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    "end of code block"               shift, and go to state 1266
    "end of expression"               shift, and go to state 558
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder             go to state 464
    expr_reader                go to state 465
    expression_label           go to state 559
    expression_goto            go to state 560
    if_or_static_if            go to state 561
    expression_if_one_liner    go to state 562
    expression_if_then_else    go to state 563
    expression_for_loop        go to state 564
    expression_unsafe          go to state 565
    expression_while_loop      go to state 566
    expression_with            go to state 567
    expression_with_alias      go to state 568
    expr_call_pipe             go to state 569
    expression_any             go to state 570
    expr_keyword               go to state 571
    expression_keyword         go to state 572
    expr_pipe                  go to state 573
    name_in_namespace          go to state 467
    expression_delete          go to state 574
    expr_new                   go to state 468
    expression_break           go to state 575
    expression_continue        go to state 576
    expression_return_no_pipe  go to state 577
    expression_return          go to state 578
    expression_yield_no_pipe   go to state 579
    expression_yield           go to state 580
    expression_try_catch       go to state 581
    kwd_let                    go to state 582
    expression_let             go to state 583
    expr_cast                  go to state 469
    expr_type_decl             go to state 470
    expr_type_info             go to state 471
    block_or_lambda            go to state 472
    expr_full_block            go to state 473
    expr_numeric_const         go to state 474
    expr_assign                go to state 584
    expr_assign_pipe           go to state 585
    expr_named_call            go to state 475
    expr_method_call           go to state 476
    func_addr_expr             go to state 477
    expr_field                 go to state 478
    expr_call                  go to state 479
    expr                       go to state 586
    expr_mtag                  go to state 481
    basic_type_declaration     go to state 482
    make_decl                  go to state 483
    make_struct_decl           go to state 484
    make_tuple_call            go to state 485
    make_dim_decl              go to state 486
    make_table_decl            go to state 487
    array_comprehension        go to state 488


State 1168

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1267


State 1169

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1170

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1171

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1268
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1172

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 71 (expression_if_then_else)


State 1173

   65 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "return"                          shift, and go to state 1269
    "null"                            shift, and go to state 421
    "break"                           shift, and go to state 542
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "continue"                        shift, and go to state 547
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "yield"                           shift, and go to state 1270
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder             go to state 464
    expr_reader                go to state 465
    expression_if_one_liner    go to state 1271
    expression_keyword         go to state 466
    name_in_namespace          go to state 467
    expr_new                   go to state 468
    expression_break           go to state 1272
    expression_continue        go to state 1273
    expression_return_no_pipe  go to state 1274
    expression_yield_no_pipe   go to state 1275
    expr_cast                  go to state 469
    expr_type_decl             go to state 470
    expr_type_info             go to state 471
    block_or_lambda            go to state 472
    expr_full_block            go to state 473
    expr_numeric_const         go to state 474
    expr_named_call            go to state 475
    expr_method_call           go to state 476
    func_addr_expr             go to state 477
    expr_field                 go to state 478
    expr_call                  go to state 479
    expr                       go to state 1276
    expr_mtag                  go to state 481
    basic_type_declaration     go to state 482
    make_decl                  go to state 483
    make_struct_decl           go to state 484
    make_tuple_call            go to state 485
    make_dim_decl              go to state 486
    make_table_decl            go to state 487
    array_comprehension        go to state 488


State 1174

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1277


State 1175

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1278


State 1176

  293 tuple_expansion: "name" .

    $default  reduce using rule 293 (tuple_expansion)


State 1177

  294 tuple_expansion: tuple_expansion . ',' "name"
  295 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1279
    ')'  shift, and go to state 1280


State 1178

  362 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 362 (expr_assign_pipe_right)


State 1179

  360 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 360 (expr_assign_pipe_right)


State 1180

  361 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 361 (expr_assign_pipe_right)


State 1181

  581 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 581 (enum_list)


State 1182

  600 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block" .

    $default  reduce using rule 600 (enum_declaration)


State 1183

  114 optional_annotation_list: '[' annotation_list ']' .
  526 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1281

    $default  reduce using rule 114 (optional_annotation_list)


State 1184

  514 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 514 (optional_public_or_private_member_variable)


State 1185

  515 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 515 (optional_public_or_private_member_variable)


State 1186

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "abstract"  shift, and go to state 1282
    "static"    shift, and go to state 1187

    $default  reduce using rule 516 (optional_static_member_variable)

    optional_static_member_variable  go to state 1283


State 1187

  517 optional_static_member_variable: "static" .

    $default  reduce using rule 517 (optional_static_member_variable)


State 1188

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1284
    "sealed"    shift, and go to state 1285

    $default  reduce using rule 508 (optional_override)

    optional_override  go to state 1286


State 1189

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression" .

    $default  reduce using rule 521 (struct_variable_declaration_list)


State 1190

  563 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 563 (let_variable_declaration)


State 1191

  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' . $@80 '(' make_struct_single ')'

    $default  reduce using rule 765 ($@80)

    $@80  go to state 1287


State 1192

  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' . $@82 '(' make_struct_single ')'

    $default  reduce using rule 768 ($@82)

    $@82  go to state 1288


State 1193

  265 new_type_declaration: '<' $@7 type_declaration '>' . $@8

    $default  reduce using rule 264 ($@8)

    $@8  go to state 1289


State 1194

  269 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 269 (expr_new)


State 1195

  270 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 270 (expr_new)


State 1196

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1290
    '>'                  shift, and go to state 1291


State 1197

  311 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 311 (expr_type_info)


State 1198

  310 expr_type_decl: "type" '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 309 ($@16)

    $@16  go to state 1292


State 1199

  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' . $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 785 ($@90)

    $@90  go to state 1293


State 1200

  783 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 783 (make_dim_decl)


State 1201

  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"
  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1294
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1202

  795 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 644
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 645
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 1295
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1203

  794 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 794 (make_table_decl)


State 1204

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 300 ($@10)

    $@10  go to state 1296


State 1205

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' . $@12 expr

    $default  reduce using rule 303 ($@12)

    $@12  go to state 1297


State 1206

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 306 ($@14)

    $@14  go to state 1298


State 1207

  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' . $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 789 ($@92)

    $@92  go to state 1299


State 1208

  787 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 787 (make_dim_decl)


State 1209

  775 make_struct_decl: "default" '<' $@85 type_declaration_no_options '>' . $@86

    $default  reduce using rule 774 ($@86)

    $@86  go to state 1300


State 1210

  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' . $@88 '(' make_struct_single ')'

    $default  reduce using rule 780 ($@88)

    $@88  go to state 1301


State 1211

  778 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 778 (make_tuple_call)


State 1212

  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' . $@84 '(' make_struct_single ')'

    $default  reduce using rule 771 ($@84)

    $@84  go to state 1302


State 1213

  458 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1303


State 1214

  496 expr_mtag: "$c" '(' expr ')' '(' . ')'
  497          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1304
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1305
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1215

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' . $@4 expr

    $default  reduce using rule 248 ($@4)

    $@4  go to state 1306


State 1216

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' . $@6 optional_expr_list_in_braces

    $default  reduce using rule 251 ($@6)

    $@6  go to state 1307


State 1217

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1218

  315 expr_list: expr_list . ',' expr
  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1308
    ','                  shift, and go to state 937


State 1219

  315 expr_list: expr_list . ',' expr
  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1309
    ','                  shift, and go to state 937


State 1220

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  386 func_addr_name: "$i" '(' expr . ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1310


State 1221

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  505          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1311


State 1222

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options . '>' $@18 func_addr_name
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1312
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1223

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list . optional_function_type '>' $@20 func_addr_name

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1313


State 1224

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  760                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1314


State 1225

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 756 (make_struct_fields)


State 1226

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 755 (make_struct_fields)


State 1227

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1315


State 1228

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  782 make_dim_decl: '[' . expr_list optional_comma ']'
  801 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 652
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "$f"                              shift, and go to state 861
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 862
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 653
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 1316
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1229

  761 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1317


State 1230

  757 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  758                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 944
    ":="  shift, and go to state 1318
    '='   shift, and go to state 946

    copy_or_move  go to state 1319


State 1231

  324 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1320


State 1232

  325 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1321


State 1233

  323 capture_entry: '=' . "name"

    "name"  shift, and go to state 1322


State 1234

  322 capture_entry: '&' . "name"

    "name"  shift, and go to state 1323


State 1235

  326 capture_list: capture_entry .

    $default  reduce using rule 326 (capture_list)


State 1236

  327 capture_list: capture_list . ',' capture_entry
  329 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1324
    ']'  shift, and go to state 1325


State 1237

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1326
    "begin of code block"  shift, and go to state 331

    expression_block       go to state 1327
    block_or_simple_block  go to state 1328


State 1238

  464 expr: expr "is" "type" '<' $@23 . type_declaration_no_options '>' $@24

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1329


State 1239

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  504          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1330


State 1240

  470 expr: expr "as" "type" '<' $@25 . type_declaration '>' $@26

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1331


State 1241

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  502          | expr "as" "$f" '(' expr . ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1332


State 1242

  383 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 383 (expr_method_call)


State 1243

  315 expr_list: expr_list . ',' expr
  384 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 937
    ')'  shift, and go to state 1333


State 1244

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  499          | expr "?." "$f" '(' expr . ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1334


State 1245

  475 expr: expr '?' "as" "type" '<' . $@27 type_declaration '>' $@28

    $default  reduce using rule 473 ($@27)

    $@27  go to state 1335


State 1246

  503 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1336
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1247

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  461     | expr '?' expr ':' expr .
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 461 (expr)


State 1248

  501 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1337
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1249

  450 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 1250

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr '.' "$f" '(' expr . ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1338


State 1251

  396 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 396 (expr_field)


State 1252

  315 expr_list: expr_list . ',' expr
  397 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 937
    ')'  shift, and go to state 1339


State 1253

  500 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1340
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1254

  448 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1255

  400 expr_field: expr '.' $@21 error $@22 .

    $default  reduce using rule 400 (expr_field)


State 1256

  714 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type '>' $@57 .

    $default  reduce using rule 714 (type_declaration_no_options)


State 1257

  721 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type '>' $@61 .

    $default  reduce using rule 721 (type_declaration_no_options)


State 1258

  728 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 728 (type_declaration_no_options)


State 1259

  246 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 246 (type_declaration_no_options_list)


State 1260

  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 464
    expr_reader             go to state 465
    optional_expr_list      go to state 1341
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 715
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1261

  617 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 617 (variable_name_with_pos_list)


State 1262

  620 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1342


State 1263

  549 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1343
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1264

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1265

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1344


State 1266

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 213 (expression_block)


State 1267

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1268

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 660
    "as"                   shift, and go to state 661
    "<<"                   shift, and go to state 662
    ">>"                   shift, and go to state 663
    "++"                   shift, and go to state 664
    "--"                   shift, and go to state 665
    "<="                   shift, and go to state 666
    ">="                   shift, and go to state 667
    "=="                   shift, and go to state 668
    "!="                   shift, and go to state 669
    "->"                   shift, and go to state 670
    "??"                   shift, and go to state 671
    "?."                   shift, and go to state 672
    "?["                   shift, and go to state 673
    "<|"                   shift, and go to state 674
    "|>"                   shift, and go to state 675
    "<<<"                  shift, and go to state 676
    ">>>"                  shift, and go to state 677
    "&&"                   shift, and go to state 678
    "||"                   shift, and go to state 679
    "^^"                   shift, and go to state 680
    ".."                   shift, and go to state 681
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 682
    '|'                    shift, and go to state 683
    '^'                    shift, and go to state 684
    '&'                    shift, and go to state 685
    '<'                    shift, and go to state 686
    '>'                    shift, and go to state 687
    '-'                    shift, and go to state 688
    '+'                    shift, and go to state 689
    '*'                    shift, and go to state 690
    '/'                    shift, and go to state 691
    '%'                    shift, and go to state 692
    '.'                    shift, and go to state 693
    '['                    shift, and go to state 694

    expression_block  go to state 1345


State 1269

  274 expression_return_no_pipe: "return" .
  275                          | "return" . expr_list
  276                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "<-"                              shift, and go to state 1346
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 274 (expression_return_no_pipe)

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 737
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1270

  280 expression_yield_no_pipe: "yield" . expr
  281                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "<-"                              shift, and go to state 1347
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1348
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1271

   65 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 65 (expression_else_one_liner)


State 1272

   69 expression_if_one_liner: expression_break .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1273

   70 expression_if_one_liner: expression_continue .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1274

   67 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1275

   68 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1276

   66 expression_if_one_liner: expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 66 (expression_if_one_liner)


State 1277

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 72 (expression_if_then_else)


State 1278

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1349


State 1279

  294 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1350


State 1280

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1351
    '&'  shift, and go to state 408

    $default  reduce using rule 555 (optional_ref)

    optional_ref  go to state 1352


State 1281

  526 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 526 (struct_variable_declaration_list)


State 1282

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@30 function_declaration_header "end of expression"

    "const"  shift, and go to state 1353

    $default  reduce using rule 511 (optional_constant)

    optional_constant  go to state 1354


State 1283

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@31 function_declaration_header expression_block

    "override"  shift, and go to state 1284
    "sealed"    shift, and go to state 1285

    $default  reduce using rule 508 (optional_override)

    optional_override  go to state 1355


State 1284

  509 optional_override: "override" .

    $default  reduce using rule 509 (optional_override)


State 1285

  510 optional_override: "sealed" .

    $default  reduce using rule 510 (optional_override)


State 1286

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1184
    "private"  shift, and go to state 1185

    $default  reduce using rule 513 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1356


State 1287

  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 . '(' make_struct_single ')'

    '('  shift, and go to state 1357


State 1288

  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 . '(' make_struct_single ')'

    '('  shift, and go to state 1358


State 1289

  265 new_type_declaration: '<' $@7 type_declaration '>' $@8 .

    $default  reduce using rule 265 (new_type_declaration)


State 1290

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1359


State 1291

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1360
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1292

  310 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 310 (expr_type_decl)


State 1293

  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1361


State 1294

  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1362


State 1295

  792 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  795 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 850

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1363


State 1296

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1364
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1297

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1365
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1298

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1366
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1299

  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1367


State 1300

  775 make_struct_decl: "default" '<' $@85 type_declaration_no_options '>' $@86 .

    $default  reduce using rule 775 (make_struct_decl)


State 1301

  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 . '(' make_struct_single ')'

    '('  shift, and go to state 1368


State 1302

  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 . '(' make_struct_single ')'

    '('  shift, and go to state 1369


State 1303

  458 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    ')'                               shift, and go to state 1370
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1371
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1304

  496 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1305

  315 expr_list: expr_list . ',' expr
  497 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 937
    ')'  shift, and go to state 1372


State 1306

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1373
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1307

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 . optional_expr_list_in_braces

    '('  shift, and go to state 1374

    '('       [reduce using rule 243 (optional_expr_list_in_braces)]
    $default  reduce using rule 243 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1375


State 1308

  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 644
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 1376
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1309

  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1377
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1310

  386 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 386 (func_addr_name)


State 1311

  505 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1312

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' . $@18 func_addr_name

    $default  reduce using rule 389 ($@18)

    $@18  go to state 1378


State 1313

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type . '>' $@20 func_addr_name

    '>'  shift, and go to state 1379


State 1314

  759 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  760                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 944
    ":="  shift, and go to state 1380
    '='   shift, and go to state 946

    copy_or_move  go to state 1381


State 1315

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 381 (expr_named_call)


State 1316

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  757 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  758                   | make_struct_fields . ',' "name" ":=" expr
  761                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1097
    ']'  shift, and go to state 1382


State 1317

  761 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1383
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1318

  758 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1384
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1319

  757 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1385
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1320

  324 capture_entry: "<-" "name" .

    $default  reduce using rule 324 (capture_entry)


State 1321

  325 capture_entry: ":=" "name" .

    $default  reduce using rule 325 (capture_entry)


State 1322

  323 capture_entry: '=' "name" .

    $default  reduce using rule 323 (capture_entry)


State 1323

  322 capture_entry: '&' "name" .

    $default  reduce using rule 322 (capture_entry)


State 1324

  327 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1231
    ":="  shift, and go to state 1232
    '='   shift, and go to state 1233
    '&'   shift, and go to state 1234

    capture_entry  go to state 1386


State 1325

  329 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1387


State 1326

  317 block_or_simple_block: "=>" . expr
  318                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "<-"                              shift, and go to state 1388
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1389
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1327

  316 block_or_simple_block: expression_block .

    $default  reduce using rule 316 (block_or_simple_block)


State 1328

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 332 (expr_full_block)


State 1329

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options . '>' $@24
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1390
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1330

  504 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1331

  470 expr: expr "as" "type" '<' $@25 type_declaration . '>' $@26
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1391


State 1332

  502 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1333

  384 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 384 (expr_method_call)


State 1334

  499 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1335

  475 expr: expr '?' "as" "type" '<' $@27 . type_declaration '>' $@28

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1392


State 1336

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr '?' "as" "$f" '(' expr . ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1393


State 1337

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr '.' "?." "$f" '(' expr . ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1394


State 1338

  498 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1339

  397 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 397 (expr_field)


State 1340

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr '.' '.' "$f" '(' expr . ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1395


State 1341

  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1396


State 1342

  620 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 620 (variable_name_with_pos_list)


State 1343

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  549 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 549 (variable_declaration)


State 1344

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1326
    "begin of code block"  shift, and go to state 331

    expression_block       go to state 1327
    block_or_simple_block  go to state 1397


State 1345

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1168
    "elif"         shift, and go to state 1169
    "static_elif"  shift, and go to state 1170

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1171
    expression_else      go to state 1398


State 1346

  276 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 953
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1347

  281 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1399
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1348

  280 expression_yield_no_pipe: "yield" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 280 (expression_yield_no_pipe)


State 1349

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1400


State 1350

  294 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1351

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1401


State 1352

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 1402


State 1353

  512 optional_constant: "const" .

    $default  reduce using rule 512 (optional_constant)


State 1354

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@30 function_declaration_header "end of expression"

    $default  reduce using rule 522 ($@30)

    $@30  go to state 1403


State 1355

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@31 function_declaration_header expression_block

    "const"  shift, and go to state 1353

    $default  reduce using rule 511 (optional_constant)

    optional_constant  go to state 1404


State 1356

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 728
    "name"  shift, and go to state 729

    variable_declaration         go to state 1405
    variable_name_with_pos_list  go to state 731


State 1357

  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' . make_struct_single ')'

    "$f"    shift, and go to state 861
    "name"  shift, and go to state 1406

    make_struct_fields  go to state 866
    make_struct_single  go to state 1407


State 1358

  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' . make_struct_single ')'

    "$f"    shift, and go to state 861
    "name"  shift, and go to state 1406

    make_struct_fields  go to state 866
    make_struct_single  go to state 1408


State 1359

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1409


State 1360

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1410


State 1361

  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1411
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1362

  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 644
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 645
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 1412
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1363

  795 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1413


State 1364

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 301 (expr_cast)


State 1365

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 304 (expr_cast)


State 1366

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 307 (expr_cast)


State 1367

  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 1414
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1368

  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' . make_struct_single ')'

    "$f"    shift, and go to state 861
    "name"  shift, and go to state 1406

    make_struct_fields  go to state 866
    make_struct_single  go to state 1415


State 1369

  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' . make_struct_single ')'

    "$f"    shift, and go to state 861
    "name"  shift, and go to state 1406

    make_struct_fields  go to state 866
    make_struct_single  go to state 1416


State 1370

  458 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 458 (expr)


State 1371

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1417


State 1372

  497 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1373

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 249 (expression_keyword)


State 1374

  244 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 464
    expr_reader             go to state 465
    optional_expr_list      go to state 1418
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    expr_list               go to state 715
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 654
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1375

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces .

    $default  reduce using rule 252 (expression_keyword)


State 1376

  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1419

    $default  reduce using rule 797 (array_comprehension_where)

    array_comprehension_where  go to state 1420


State 1377

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 660
    "as"                 shift, and go to state 661
    "<<"                 shift, and go to state 662
    ">>"                 shift, and go to state 663
    "++"                 shift, and go to state 664
    "--"                 shift, and go to state 665
    "<="                 shift, and go to state 666
    ">="                 shift, and go to state 667
    "=="                 shift, and go to state 668
    "!="                 shift, and go to state 669
    "->"                 shift, and go to state 670
    "??"                 shift, and go to state 671
    "?."                 shift, and go to state 672
    "?["                 shift, and go to state 673
    "<|"                 shift, and go to state 674
    "|>"                 shift, and go to state 675
    "<<<"                shift, and go to state 676
    ">>>"                shift, and go to state 677
    "&&"                 shift, and go to state 678
    "||"                 shift, and go to state 679
    "^^"                 shift, and go to state 680
    ".."                 shift, and go to state 681
    "end of expression"  shift, and go to state 1419
    '?'                  shift, and go to state 682
    '|'                  shift, and go to state 683
    '^'                  shift, and go to state 684
    '&'                  shift, and go to state 685
    '<'                  shift, and go to state 686
    '>'                  shift, and go to state 687
    '-'                  shift, and go to state 688
    '+'                  shift, and go to state 689
    '*'                  shift, and go to state 690
    '/'                  shift, and go to state 691
    '%'                  shift, and go to state 692
    '.'                  shift, and go to state 693
    '['                  shift, and go to state 694

    $default  reduce using rule 797 (array_comprehension_where)

    array_comprehension_where  go to state 1421


State 1378

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 856
    "name"  shift, and go to state 60

    name_in_namespace  go to state 859
    func_addr_name     go to state 1422


State 1379

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' . $@20 func_addr_name

    $default  reduce using rule 392 ($@20)

    $@20  go to state 1423


State 1380

  760 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1424
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1381

  759 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1425
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1382

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1426


State 1383

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1427


State 1384

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 758 (make_struct_fields)


State 1385

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  757 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 757 (make_struct_fields)


State 1386

  327 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 327 (capture_list)


State 1387

  329 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 329 (optional_capture_list)


State 1388

  318 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1428
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1389

  317 block_or_simple_block: "=>" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    ".."  error (nonassociative)

    $default  reduce using rule 317 (block_or_simple_block)


State 1390

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' . $@24

    $default  reduce using rule 463 ($@24)

    $@24  go to state 1429


State 1391

  470 expr: expr "as" "type" '<' $@25 type_declaration '>' . $@26

    $default  reduce using rule 469 ($@26)

    $@26  go to state 1430


State 1392

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration . '>' $@28
  736 type_declaration: type_declaration . '|' type_declaration_no_options
  737                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1431


State 1393

  503 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1394

  501 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1395

  500 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1396

  682 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 682 (type_declaration_no_options)


State 1397

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 331 (expr_block)


State 1398

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1399

  281 expression_yield_no_pipe: "yield" "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 281 (expression_yield_no_pipe)


State 1400

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 333 (expr_full_block_assumed_piped)


State 1401

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  674 type_declaration_no_options: type_declaration_no_options . dim_list
  675                            | type_declaration_no_options . '[' ']'
  683                            | type_declaration_no_options . '-' '[' ']'
  684                            | type_declaration_no_options . "explicit"
  685                            | type_declaration_no_options . "const"
  686                            | type_declaration_no_options . '-' "const"
  687                            | type_declaration_no_options . '&'
  688                            | type_declaration_no_options . '-' '&'
  689                            | type_declaration_no_options . '#'
  690                            | type_declaration_no_options . "implicit"
  691                            | type_declaration_no_options . '-' '#'
  692                            | type_declaration_no_options . "==" "const"
  693                            | type_declaration_no_options . "==" '&'
  694                            | type_declaration_no_options . '?'
  698                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 599
    "??"        shift, and go to state 370
    ":="        shift, and go to state 600
    '='         shift, and go to state 601
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    copy_or_move_or_clone  go to state 1432
    dim_list               go to state 376


State 1402

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1433
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1403

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1434


State 1404

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@31 function_declaration_header expression_block

    $default  reduce using rule 524 ($@31)

    $@31  go to state 1435


State 1405

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 518 (structure_variable_declaration)


State 1406

  755 make_struct_fields: "name" . copy_or_move expr
  756                   | "name" . ":=" expr

    "<-"  shift, and go to state 944
    ":="  shift, and go to state 1092
    '='   shift, and go to state 946

    copy_or_move  go to state 1093


State 1407

  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single . ')'

    ')'  shift, and go to state 1436


State 1408

  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single . ')'

    ')'  shift, and go to state 1437


State 1409

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1438
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1410

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 312 (expr_type_info)


State 1411

  315 expr_list: expr_list . ',' expr
  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1439


State 1412

  792 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 850

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1440


State 1413

  795 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 795 (make_table_decl)


State 1414

  315 expr_list: expr_list . ',' expr
  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 853

    $default  reduce using rule 799 (optional_comma)

    optional_comma  go to state 1441


State 1415

  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single . ')'

    ')'  shift, and go to state 1442


State 1416

  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single . ')'

    ')'  shift, and go to state 1443


State 1417

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 459 (expr)


State 1418

  244 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1444


State 1419

  798 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1445


State 1420

  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1446


State 1421

  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1447


State 1422

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name .

    $default  reduce using rule 390 (func_addr_expr)


State 1423

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 856
    "name"  shift, and go to state 60

    name_in_namespace  go to state 859
    func_addr_name     go to state 1448


State 1424

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  760 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 760 (make_struct_fields)


State 1425

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 759 (make_struct_fields)


State 1426

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 382 (expr_named_call)


State 1427

  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  762                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 944
    ":="  shift, and go to state 1449
    '='   shift, and go to state 946

    copy_or_move  go to state 1450


State 1428

  318 block_or_simple_block: "=>" "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 318 (block_or_simple_block)


State 1429

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24 .

    $default  reduce using rule 464 (expr)


State 1430

  470 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26 .

    $default  reduce using rule 470 (expr)


State 1431

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' . $@28

    $default  reduce using rule 474 ($@28)

    $@28  go to state 1451


State 1432

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1452
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1433

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 660
    "as"                 shift, and go to state 661
    "<<"                 shift, and go to state 662
    ">>"                 shift, and go to state 663
    "++"                 shift, and go to state 664
    "--"                 shift, and go to state 665
    "<="                 shift, and go to state 666
    ">="                 shift, and go to state 667
    "=="                 shift, and go to state 668
    "!="                 shift, and go to state 669
    "->"                 shift, and go to state 670
    "??"                 shift, and go to state 671
    "?."                 shift, and go to state 672
    "?["                 shift, and go to state 673
    "<|"                 shift, and go to state 674
    "|>"                 shift, and go to state 675
    "<<<"                shift, and go to state 676
    ">>>"                shift, and go to state 677
    "&&"                 shift, and go to state 678
    "||"                 shift, and go to state 679
    "^^"                 shift, and go to state 680
    ".."                 shift, and go to state 681
    "end of expression"  shift, and go to state 1453
    '?'                  shift, and go to state 682
    '|'                  shift, and go to state 683
    '^'                  shift, and go to state 684
    '&'                  shift, and go to state 685
    '<'                  shift, and go to state 686
    '>'                  shift, and go to state 687
    '-'                  shift, and go to state 688
    '+'                  shift, and go to state 689
    '*'                  shift, and go to state 690
    '/'                  shift, and go to state 691
    '%'                  shift, and go to state 692
    '.'                  shift, and go to state 693
    '['                  shift, and go to state 694


State 1434

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1454


State 1435

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1455


State 1436

  766 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')' .

    $default  reduce using rule 766 (make_struct_decl)


State 1437

  769 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')' .

    $default  reduce using rule 769 (make_struct_decl)


State 1438

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694
    ')'    shift, and go to state 1456


State 1439

  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1457


State 1440

  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1458


State 1441

  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1459


State 1442

  781 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')' .

    $default  reduce using rule 781 (make_tuple_call)


State 1443

  772 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')' .

    $default  reduce using rule 772 (make_struct_decl)


State 1444

  244 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 244 (optional_expr_list_in_braces)


State 1445

  798 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1460
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1446

  802 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 802 (array_comprehension)


State 1447

  801 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 801 (array_comprehension)


State 1448

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name .

    $default  reduce using rule 393 (func_addr_expr)


State 1449

  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1461
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1450

  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "unsafe"                          shift, and go to state 428
    "fixed_array"                     shift, and go to state 429
    "default"                         shift, and go to state 430
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 431
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 432
    "variant"                         shift, and go to state 433
    "generator"                       shift, and go to state 434
    "++"                              shift, and go to state 435
    "--"                              shift, and go to state 436
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 437
    "$i"                              shift, and go to state 438
    "$v"                              shift, and go to state 439
    "$b"                              shift, and go to state 440
    "$a"                              shift, and go to state 441
    "$c"                              shift, and go to state 442
    "..."                             shift, and go to state 443
    "integer constant"                shift, and go to state 444
    "long integer constant"           shift, and go to state 445
    "unsigned integer constant"       shift, and go to state 446
    "unsigned long integer constant"  shift, and go to state 447
    "unsigned int8 constant"          shift, and go to state 448
    "floating point constant"         shift, and go to state 449
    "double constant"                 shift, and go to state 450
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 451
    "type function"                   shift, and go to state 452
    "start of the string"             shift, and go to state 453
    "begin of code block"             shift, and go to state 454
    '-'                               shift, and go to state 455
    '+'                               shift, and go to state 456
    '*'                               shift, and go to state 457
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 458
    '!'                               shift, and go to state 459
    '['                               shift, and go to state 460
    '('                               shift, and go to state 461
    '$'                               shift, and go to state 462
    '@'                               shift, and go to state 463

    string_builder          go to state 464
    expr_reader             go to state 465
    expression_keyword      go to state 466
    name_in_namespace       go to state 467
    expr_new                go to state 468
    expr_cast               go to state 469
    expr_type_decl          go to state 470
    expr_type_info          go to state 471
    block_or_lambda         go to state 472
    expr_full_block         go to state 473
    expr_numeric_const      go to state 474
    expr_named_call         go to state 475
    expr_method_call        go to state 476
    func_addr_expr          go to state 477
    expr_field              go to state 478
    expr_call               go to state 479
    expr                    go to state 1462
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1451

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28 .

    $default  reduce using rule 475 (expr)


State 1452

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 660
    "as"                 shift, and go to state 661
    "<<"                 shift, and go to state 662
    ">>"                 shift, and go to state 663
    "++"                 shift, and go to state 664
    "--"                 shift, and go to state 665
    "<="                 shift, and go to state 666
    ">="                 shift, and go to state 667
    "=="                 shift, and go to state 668
    "!="                 shift, and go to state 669
    "->"                 shift, and go to state 670
    "??"                 shift, and go to state 671
    "?."                 shift, and go to state 672
    "?["                 shift, and go to state 673
    "<|"                 shift, and go to state 674
    "|>"                 shift, and go to state 675
    "<<<"                shift, and go to state 676
    ">>>"                shift, and go to state 677
    "&&"                 shift, and go to state 678
    "||"                 shift, and go to state 679
    "^^"                 shift, and go to state 680
    ".."                 shift, and go to state 681
    "end of expression"  shift, and go to state 1463
    '?'                  shift, and go to state 682
    '|'                  shift, and go to state 683
    '^'                  shift, and go to state 684
    '&'                  shift, and go to state 685
    '<'                  shift, and go to state 686
    '>'                  shift, and go to state 687
    '-'                  shift, and go to state 688
    '+'                  shift, and go to state 689
    '*'                  shift, and go to state 690
    '/'                  shift, and go to state 691
    '%'                  shift, and go to state 692
    '.'                  shift, and go to state 693
    '['                  shift, and go to state 694


State 1453

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)


State 1454

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression" .

    $default  reduce using rule 523 (struct_variable_declaration_list)


State 1455

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1464


State 1456

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1457

  786 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')' .

    $default  reduce using rule 786 (make_dim_decl)


State 1458

  796 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 796 (make_table_decl)


State 1459

  790 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')' .

    $default  reduce using rule 790 (make_dim_decl)


State 1460

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  798 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 798 (array_comprehension_where)


State 1461

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 762 (make_struct_fields)


State 1462

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  761 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 660
    "as"   shift, and go to state 661
    "<<"   shift, and go to state 662
    ">>"   shift, and go to state 663
    "++"   shift, and go to state 664
    "--"   shift, and go to state 665
    "<="   shift, and go to state 666
    ">="   shift, and go to state 667
    "=="   shift, and go to state 668
    "!="   shift, and go to state 669
    "->"   shift, and go to state 670
    "??"   shift, and go to state 671
    "?."   shift, and go to state 672
    "?["   shift, and go to state 673
    "<|"   shift, and go to state 674
    "|>"   shift, and go to state 675
    "<<<"  shift, and go to state 676
    ">>>"  shift, and go to state 677
    "&&"   shift, and go to state 678
    "||"   shift, and go to state 679
    "^^"   shift, and go to state 680
    ".."   shift, and go to state 681
    '?'    shift, and go to state 682
    '|'    shift, and go to state 683
    '^'    shift, and go to state 684
    '&'    shift, and go to state 685
    '<'    shift, and go to state 686
    '>'    shift, and go to state 687
    '-'    shift, and go to state 688
    '+'    shift, and go to state 689
    '*'    shift, and go to state 690
    '/'    shift, and go to state 691
    '%'    shift, and go to state 692
    '.'    shift, and go to state 693
    '['    shift, and go to state 694

    $default  reduce using rule 761 (make_struct_fields)


State 1463

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 295 (tuple_expansion_variable_declaration)


State 1464

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block .

    $default  reduce using rule 525 (struct_variable_declaration_list)
