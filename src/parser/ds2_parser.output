Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"


State 59 conflicts: 1 shift/reduce
State 373 conflicts: 1 shift/reduce
State 463 conflicts: 1 shift/reduce
State 468 conflicts: 1 shift/reduce
State 567 conflicts: 2 shift/reduce
State 604 conflicts: 1 shift/reduce
State 750 conflicts: 1 shift/reduce
State 760 conflicts: 1 shift/reduce
State 842 conflicts: 2 shift/reduce
State 909 conflicts: 1 shift/reduce
State 1314 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty
   65                          | "else" expression_if_one_liner

   66 expression_if_one_liner: expr
   67                        | expression_return_no_pipe
   68                        | expression_yield_no_pipe
   69                        | expression_break
   70                        | expression_continue

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else
   72                        | expression_if_one_liner "if" expr expression_else_one_liner "end of expression"

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 expression_with_alias: "assume" "name" '=' expr

   78 annotation_argument_value: string_constant
   79                          | "name"
   80                          | "integer constant"
   81                          | "floating point constant"
   82                          | "true"
   83                          | "false"

   84 annotation_argument_value_list: annotation_argument_value
   85                               | annotation_argument_value_list ',' annotation_argument_value

   86 annotation_argument_name: "name"
   87                         | "type"
   88                         | "in"

   89 annotation_argument: annotation_argument_name '=' string_constant
   90                    | annotation_argument_name '=' "name"
   91                    | annotation_argument_name '=' "integer constant"
   92                    | annotation_argument_name '=' "floating point constant"
   93                    | annotation_argument_name '=' "true"
   94                    | annotation_argument_name '=' "false"
   95                    | annotation_argument_name
   96                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   97 annotation_argument_list: annotation_argument
   98                         | annotation_argument_list ',' annotation_argument

   99 metadata_argument_list: '@' annotation_argument
  100                       | metadata_argument_list '@' annotation_argument

  101 annotation_declaration_name: name_in_namespace
  102                            | "require"
  103                            | "private"

  104 annotation_declaration_basic: annotation_declaration_name
  105                             | annotation_declaration_name '(' annotation_argument_list ')'

  106 annotation_declaration: annotation_declaration_basic
  107                       | '!' annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration
  111                       | '(' annotation_declaration ')'
  112                       | "|>" annotation_declaration

  113 annotation_list: annotation_declaration
  114                | annotation_list ',' annotation_declaration

  115 optional_annotation_list: %empty
  116                         | '[' annotation_list ']'

  117 optional_function_argument_list: %empty
  118                                | '(' ')'
  119                                | '(' function_argument_list ')'

  120 optional_function_type: %empty
  121                       | ':' type_declaration

  122 function_name: "name"
  123              | "operator" '!'
  124              | "operator" '~'
  125              | "operator" "+="
  126              | "operator" "-="
  127              | "operator" "*="
  128              | "operator" "/="
  129              | "operator" "%="
  130              | "operator" "&="
  131              | "operator" "|="
  132              | "operator" "^="
  133              | "operator" "&&="
  134              | "operator" "||="
  135              | "operator" "^^="
  136              | "operator" "&&"
  137              | "operator" "||"
  138              | "operator" "^^"
  139              | "operator" '+'
  140              | "operator" '-'
  141              | "operator" '*'
  142              | "operator" '/'
  143              | "operator" '%'
  144              | "operator" '<'
  145              | "operator" '>'
  146              | "operator" ".."
  147              | "operator" "=="
  148              | "operator" "!="
  149              | "operator" "<="
  150              | "operator" ">="
  151              | "operator" '&'
  152              | "operator" '|'
  153              | "operator" '^'
  154              | "++" "operator"
  155              | "--" "operator"
  156              | "operator" "++"
  157              | "operator" "--"
  158              | "operator" "<<"
  159              | "operator" ">>"
  160              | "operator" "<<="
  161              | "operator" ">>="
  162              | "operator" "<<<"
  163              | "operator" ">>>"
  164              | "operator" "<<<="
  165              | "operator" ">>>="
  166              | "operator" '[' ']'
  167              | "operator" "?[" ']'
  168              | "operator" '.'
  169              | "operator" "?."
  170              | "operator" '.' "name"
  171              | "operator" '.' "name" ":="
  172              | "operator" "?." "name"
  173              | "operator" ":="
  174              | "operator" "delete"
  175              | "operator" "??"
  176              | "operator" "is"
  177              | "operator" "as"
  178              | "operator" "is" "name"
  179              | "operator" "as" "name"
  180              | "operator" '?' "as"
  181              | "operator" '?' "as" "name"
  182              | "bool"
  183              | "string"
  184              | "int"
  185              | "int2"
  186              | "int3"
  187              | "int4"
  188              | "uint"
  189              | "uint2"
  190              | "uint3"
  191              | "uint4"
  192              | "float"
  193              | "float2"
  194              | "float3"
  195              | "float4"
  196              | "range"
  197              | "urange"
  198              | "range64"
  199              | "urange64"
  200              | "int64"
  201              | "uint64"
  202              | "double"
  203              | "int8"
  204              | "uint8"
  205              | "int16"
  206              | "uint16"

  207 global_function_declaration: optional_annotation_list "def" function_declaration

  208 optional_public_or_private_function: %empty
  209                                    | "private"
  210                                    | "public"

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type

  212 $@2: %empty

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  214 expression_block: "begin of code block" expressions "end of code block"
  215                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  216 expr_call_pipe: expr expr_full_block_assumed_piped
  217               | expression_keyword expr_full_block_assumed_piped

  218 expression_any: "end of expression"
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign "end of expression"
  223               | expression_delete "end of expression"
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break "end of expression"
  231               | expression_continue "end of expression"
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label "end of expression"
  237               | expression_goto "end of expression"
  238               | "pass" "end of expression"

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 optional_expr_list_in_braces: %empty
  246                             | '(' optional_expr_list ')'

  247 type_declaration_no_options_list: type_declaration
  248                                 | type_declaration_no_options_list "end of expression" type_declaration

  249 $@3: %empty

  250 $@4: %empty

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr

  252 $@5: %empty

  253 $@6: %empty

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

  255 expr_pipe: expr_assign " <|" expr_block
  256          | "@ <|" expr_block
  257          | "@@ <|" expr_block
  258          | "$ <|" expr_block
  259          | expr_call_pipe

  260 name_in_namespace: "name"
  261                  | "name" "::" "name"
  262                  | "::" "name"

  263 expression_delete: "delete" expr
  264                  | "delete" "explicit" expr

  265 $@7: %empty

  266 $@8: %empty

  267 new_type_declaration: '<' $@7 type_declaration '>' $@8

  268 expr_new: "new" structure_type_declaration
  269         | "new" structure_type_declaration '(' optional_expr_list ')'
  270         | "new" new_type_declaration '(' use_initializer ')'
  271         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  272         | "new" make_decl

  273 expression_break: "break"

  274 expression_continue: "continue"

  275 expression_return_no_pipe: "return"
  276                          | "return" expr_list
  277                          | "return" "<-" expr_list

  278 expression_return: expression_return_no_pipe "end of expression"
  279                  | "return" expr_pipe
  280                  | "return" "<-" expr_pipe

  281 expression_yield_no_pipe: "yield" expr
  282                         | "yield" "<-" expr

  283 expression_yield: expression_yield_no_pipe "end of expression"
  284                 | "yield" expr_pipe
  285                 | "yield" "<-" expr_pipe

  286 expression_try_catch: "try" expression_block "recover" expression_block

  287 kwd_let_var_or_nothing: "let"
  288                       | "var"
  289                       | %empty

  290 kwd_let: "let"
  291        | "var"

  292 optional_in_scope: "inscope"
  293                  | %empty

  294 tuple_expansion: "name"
  295                | tuple_expansion ',' "name"

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  298 expression_let: kwd_let optional_in_scope let_variable_declaration
  299               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  300 $@9: %empty

  301 $@10: %empty

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr

  303 $@11: %empty

  304 $@12: %empty

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr

  306 $@13: %empty

  307 $@14: %empty

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr

  309 $@15: %empty

  310 $@16: %empty

  311 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  315 expr_list: expr
  316          | expr_list ',' expr

  317 block_or_simple_block: expression_block
  318                      | "=>" expr
  319                      | "=>" "<-" expr

  320 block_or_lambda: '$'
  321                | '@'
  322                | '@' '@'

  323 capture_entry: '&' "name"
  324              | '=' "name"
  325              | "<-" "name"
  326              | ":=" "name"

  327 capture_list: capture_entry
  328             | capture_list ',' capture_entry

  329 optional_capture_list: %empty
  330                      | '[' '[' capture_list ']' ']'

  331 expr_block: expression_block
  332           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  335 expr_numeric_const: "integer constant"
  336                   | "unsigned integer constant"
  337                   | "long integer constant"
  338                   | "unsigned long integer constant"
  339                   | "unsigned int8 constant"
  340                   | "floating point constant"
  341                   | "double constant"

  342 expr_assign: expr
  343            | expr '=' expr
  344            | expr "<-" expr
  345            | expr ":=" expr
  346            | expr "&=" expr
  347            | expr "|=" expr
  348            | expr "^=" expr
  349            | expr "&&=" expr
  350            | expr "||=" expr
  351            | expr "^^=" expr
  352            | expr "+=" expr
  353            | expr "-=" expr
  354            | expr "*=" expr
  355            | expr "/=" expr
  356            | expr "%=" expr
  357            | expr "<<=" expr
  358            | expr ">>=" expr
  359            | expr "<<<=" expr
  360            | expr ">>>=" expr

  361 expr_assign_pipe_right: "@ <|" expr_block
  362                       | "@@ <|" expr_block
  363                       | "$ <|" expr_block
  364                       | expr_call_pipe

  365 expr_assign_pipe: expr '=' expr_assign_pipe_right
  366                 | expr "<-" expr_assign_pipe_right
  367                 | expr "&=" expr_assign_pipe_right
  368                 | expr "|=" expr_assign_pipe_right
  369                 | expr "^=" expr_assign_pipe_right
  370                 | expr "&&=" expr_assign_pipe_right
  371                 | expr "||=" expr_assign_pipe_right
  372                 | expr "^^=" expr_assign_pipe_right
  373                 | expr "+=" expr_assign_pipe_right
  374                 | expr "-=" expr_assign_pipe_right
  375                 | expr "*=" expr_assign_pipe_right
  376                 | expr "/=" expr_assign_pipe_right
  377                 | expr "%=" expr_assign_pipe_right
  378                 | expr "<<=" expr_assign_pipe_right
  379                 | expr ">>=" expr_assign_pipe_right
  380                 | expr "<<<=" expr_assign_pipe_right
  381                 | expr ">>>=" expr_assign_pipe_right

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  383                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  384 expr_method_call: expr "->" "name" '(' ')'
  385                 | expr "->" "name" '(' expr_list ')'

  386 func_addr_name: name_in_namespace
  387               | "$i" '(' expr ')'

  388 func_addr_expr: '@' '@' func_addr_name

  389 $@17: %empty

  390 $@18: %empty

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name

  392 $@19: %empty

  393 $@20: %empty

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

  395 expr_field: expr '.' "name"
  396           | expr '.' '.' "name"
  397           | expr '.' "name" '(' ')'
  398           | expr '.' "name" '(' expr_list ')'

  399 $@21: %empty

  400 $@22: %empty

  401 expr_field: expr '.' $@21 error $@22

  402 expr_call: name_in_namespace '(' ')'
  403          | name_in_namespace '(' make_struct_single ')'
  404          | name_in_namespace '(' expr_list ')'
  405          | basic_type_declaration '(' ')'
  406          | basic_type_declaration '(' expr_list ')'

  407 expr: "null"
  408     | name_in_namespace
  409     | expr_numeric_const
  410     | expr_reader
  411     | string_builder
  412     | make_decl
  413     | "true"
  414     | "false"
  415     | expr_field
  416     | expr_mtag
  417     | '!' expr
  418     | '~' expr
  419     | '+' expr
  420     | '-' expr
  421     | expr "<<" expr
  422     | expr ">>" expr
  423     | expr "<<<" expr
  424     | expr ">>>" expr
  425     | expr '+' expr
  426     | expr '-' expr
  427     | expr '*' expr
  428     | expr '/' expr
  429     | expr '%' expr
  430     | expr '<' expr
  431     | expr '>' expr
  432     | expr "==" expr
  433     | expr "!=" expr
  434     | expr "<=" expr
  435     | expr ">=" expr
  436     | expr '&' expr
  437     | expr '|' expr
  438     | expr '^' expr
  439     | expr "&&" expr
  440     | expr "||" expr
  441     | expr "^^" expr
  442     | expr ".." expr
  443     | "++" expr
  444     | "--" expr
  445     | expr "++"
  446     | expr "--"
  447     | '(' expr_list optional_comma ')'
  448     | expr '[' expr ']'
  449     | expr '.' '[' expr ']'
  450     | expr "?[" expr ']'
  451     | expr '.' "?[" expr ']'
  452     | expr "?." "name"
  453     | expr '.' "?." "name"
  454     | func_addr_expr
  455     | expr_call
  456     | '*' expr
  457     | "deref" '(' expr ')'
  458     | "addr" '(' expr ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  461     | expr "??" expr
  462     | expr '?' expr ':' expr

  463 $@23: %empty

  464 $@24: %empty

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr "is" basic_type_declaration
  467     | expr "is" "name"
  468     | expr "as" "name"

  469 $@25: %empty

  470 $@26: %empty

  471 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr "as" basic_type_declaration
  473     | expr '?' "as" "name"

  474 $@27: %empty

  475 $@28: %empty

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr '?' "as" basic_type_declaration
  478     | expr_type_info
  479     | expr_type_decl
  480     | expr_cast
  481     | expr_new
  482     | expr_method_call
  483     | expr_named_call
  484     | expr_full_block
  485     | expr "<|" expr
  486     | expr "|>" expr
  487     | expr "|>" basic_type_declaration
  488     | expression_keyword

  489 expr_mtag: "$$" '(' expr ')'
  490          | "$i" '(' expr ')'
  491          | "$v" '(' expr ')'
  492          | "$b" '(' expr ')'
  493          | "$a" '(' expr ')'
  494          | "..."
  495          | "$c" '(' expr ')' '(' ')'
  496          | "$c" '(' expr ')' '(' expr_list ')'
  497          | expr '.' "$f" '(' expr ')'
  498          | expr "?." "$f" '(' expr ')'
  499          | expr '.' '.' "$f" '(' expr ')'
  500          | expr '.' "?." "$f" '(' expr ')'
  501          | expr "as" "$f" '(' expr ')'
  502          | expr '?' "as" "$f" '(' expr ')'
  503          | expr "is" "$f" '(' expr ')'
  504          | '@' '@' "$c" '(' expr ')'

  505 optional_field_annotation: %empty
  506                          | metadata_argument_list

  507 optional_override: %empty
  508                  | "override"
  509                  | "sealed"

  510 optional_constant: %empty
  511                  | "const"

  512 optional_public_or_private_member_variable: %empty
  513                                           | "public"
  514                                           | "private"

  515 optional_static_member_variable: %empty
  516                                | "static"

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  518 struct_variable_declaration_list: %empty

  519 $@29: %empty

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression"

  521 $@30: %empty

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"

  523 $@31: %empty

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

  525 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  526                              | "$a" '(' expr ')'

  527 function_argument_list: function_argument_declaration
  528                       | function_argument_list "end of expression" function_argument_declaration

  529 tuple_type: type_declaration
  530           | "name" ':' type_declaration

  531 tuple_type_list: tuple_type
  532                | tuple_type_list "end of expression" tuple_type

  533 tuple_alias_type_list: %empty
  534                      | tuple_alias_type_list "end of expression"
  535                      | tuple_alias_type_list tuple_type "end of expression"

  536 variant_type: "name" ':' type_declaration

  537 variant_type_list: variant_type
  538                  | variant_type_list "end of expression" variant_type

  539 variant_alias_type_list: %empty
  540                        | variant_alias_type_list "end of expression"
  541                        | variant_alias_type_list variant_type "end of expression"

  542 copy_or_move: '='
  543             | "<-"

  544 variable_declaration: variable_name_with_pos_list
  545                     | variable_name_with_pos_list '&'
  546                     | variable_name_with_pos_list ':' type_declaration
  547                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  548                     | variable_name_with_pos_list copy_or_move expr
  549                     | variable_name_with_pos_list copy_or_move expr_pipe

  550 copy_or_move_or_clone: '='
  551                      | "<-"
  552                      | ":="

  553 optional_ref: %empty
  554             | '&'

  555 let_variable_name_with_pos_list: "name"
  556                                | "$i" '(' expr ')'
  557                                | "name" "aka" "name"
  558                                | let_variable_name_with_pos_list ',' "name"
  559                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  563                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  565 global_variable_declaration_list: %empty

  566 $@32: %empty

  567 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration

  568 optional_shared: %empty
  569                | "shared"

  570 optional_public_or_private_variable: %empty
  571                                    | "private"
  572                                    | "public"

  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  574 $@33: %empty

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

  576 enum_expression: "name"
  577                | "name" '=' expr

  578 enum_list: %empty
  579          | enum_expression
  580          | enum_list ',' enum_expression

  581 optional_public_or_private_alias: %empty
  582                                 | "private"
  583                                 | "public"

  584 $@34: %empty

  585 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration

  586 alias_declaration: "typedef" single_alias "end of expression"

  587 optional_public_or_private_enum: %empty
  588                                | "private"
  589                                | "public"

  590 enum_name: "name"

  591 optional_enum_basic_type_declaration: %empty
  592                                     | ':' enum_basic_type_declaration

  593 $@35: %empty

  594 $@36: %empty

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

  596 optional_structure_parent: %empty
  597                          | ':' name_in_namespace

  598 optional_sealed: %empty
  599                | "sealed"

  600 structure_name: optional_sealed "name" optional_structure_parent

  601 class_or_struct: "class"
  602                | "struct"

  603 optional_public_or_private_structure: %empty
  604                                     | "private"
  605                                     | "public"

  606 optional_struct_variable_declaration_list: %empty
  607                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  608 $@37: %empty

  609 $@38: %empty

  610 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

  611 variable_name_with_pos_list: "name"
  612                            | "$i" '(' expr ')'
  613                            | "name" "aka" "name"
  614                            | variable_name_with_pos_list ',' "name"
  615                            | variable_name_with_pos_list ',' "name" "aka" "name"

  616 basic_type_declaration: "bool"
  617                       | "string"
  618                       | "int"
  619                       | "int8"
  620                       | "int16"
  621                       | "int64"
  622                       | "int2"
  623                       | "int3"
  624                       | "int4"
  625                       | "uint"
  626                       | "uint8"
  627                       | "uint16"
  628                       | "uint64"
  629                       | "uint2"
  630                       | "uint3"
  631                       | "uint4"
  632                       | "float"
  633                       | "float2"
  634                       | "float3"
  635                       | "float4"
  636                       | "void"
  637                       | "range"
  638                       | "urange"
  639                       | "range64"
  640                       | "urange64"
  641                       | "double"
  642                       | "bitfield"

  643 enum_basic_type_declaration: "int"
  644                            | "int8"
  645                            | "int16"
  646                            | "uint"
  647                            | "uint8"
  648                            | "uint16"
  649                            | "int64"
  650                            | "uint64"

  651 structure_type_declaration: name_in_namespace

  652 auto_type_declaration: "auto"
  653                      | "auto" '(' "name" ')'
  654                      | "$t" '(' expr ')'

  655 bitfield_bits: "name"
  656              | bitfield_bits "end of expression" "name"

  657 bitfield_alias_bits: %empty
  658                    | "name"
  659                    | bitfield_alias_bits ',' "name"

  660 $@39: %empty

  661 $@40: %empty

  662 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40

  663 table_type_pair: type_declaration
  664                | type_declaration "end of expression" type_declaration

  665 dim_list: '[' expr ']'
  666         | dim_list '[' expr ']'

  667 type_declaration_no_options: basic_type_declaration
  668                            | auto_type_declaration
  669                            | bitfield_type_declaration
  670                            | structure_type_declaration
  671                            | type_declaration_no_options dim_list
  672                            | type_declaration_no_options '[' ']'

  673 $@41: %empty

  674 $@42: %empty

  675 type_declaration_no_options: "type" '<' $@41 type_declaration '>' $@42
  676                            | "typedecl" '(' expr ')'
  677                            | '$' name_in_namespace '(' optional_expr_list ')'

  678 $@43: %empty

  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  680                            | type_declaration_no_options '-' '[' ']'
  681                            | type_declaration_no_options "explicit"
  682                            | type_declaration_no_options "const"
  683                            | type_declaration_no_options '-' "const"
  684                            | type_declaration_no_options '&'
  685                            | type_declaration_no_options '-' '&'
  686                            | type_declaration_no_options '#'
  687                            | type_declaration_no_options "implicit"
  688                            | type_declaration_no_options '-' '#'
  689                            | type_declaration_no_options "==" "const"
  690                            | type_declaration_no_options "==" '&'
  691                            | type_declaration_no_options '*'

  692 $@44: %empty

  693 $@45: %empty

  694 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' $@45
  695                            | type_declaration_no_options "??"

  696 $@46: %empty

  697 $@47: %empty

  698 type_declaration_no_options: "array" '<' $@46 type_declaration '>' $@47

  699 $@48: %empty

  700 $@49: %empty

  701 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' $@49

  702 $@50: %empty

  703 $@51: %empty

  704 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' $@51
  705                            | "block"

  706 $@52: %empty

  707 $@53: %empty

  708 type_declaration_no_options: "block" '<' $@52 type_declaration '>' $@53

  709 $@54: %empty

  710 $@55: %empty

  711 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  712                            | "function"

  713 $@56: %empty

  714 $@57: %empty

  715 type_declaration_no_options: "function" '<' $@56 type_declaration '>' $@57

  716 $@58: %empty

  717 $@59: %empty

  718 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59
  719                            | "lambda"

  720 $@60: %empty

  721 $@61: %empty

  722 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' $@61

  723 $@62: %empty

  724 $@63: %empty

  725 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63

  726 $@64: %empty

  727 $@65: %empty

  728 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' $@65

  729 $@66: %empty

  730 $@67: %empty

  731 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' $@67

  732 type_declaration: type_declaration_no_options
  733                 | type_declaration '|' type_declaration_no_options
  734                 | type_declaration '|' '#'

  735 $@68: %empty

  736 $@69: %empty

  737 $@70: %empty

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

  739 $@71: %empty

  740 $@72: %empty

  741 $@73: %empty

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

  743 $@74: %empty

  744 $@75: %empty

  745 $@76: %empty

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

  747 make_decl: make_struct_decl
  748          | make_dim_decl
  749          | make_table_decl
  750          | array_comprehension
  751          | make_tuple_call

  752 make_struct_fields: "name" copy_or_move expr
  753                   | "name" ":=" expr
  754                   | make_struct_fields ',' "name" copy_or_move expr
  755                   | make_struct_fields ',' "name" ":=" expr
  756                   | "$f" '(' expr ')' copy_or_move expr
  757                   | "$f" '(' expr ')' ":=" expr
  758                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  760 make_struct_single: make_struct_fields

  761 make_struct_dim: make_struct_fields
  762                | make_struct_dim "end of expression" make_struct_fields

  763 use_initializer: %empty
  764                | "uninitialized"

  765 $@77: %empty

  766 $@78: %empty

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

  768 $@79: %empty

  769 $@80: %empty

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

  771 $@81: %empty

  772 $@82: %empty

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

  774 $@83: %empty

  775 $@84: %empty

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 use_initializer

  777 make_map_tuple: expr "=>" expr
  778               | expr

  779 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  780 $@85: %empty

  781 $@86: %empty

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

  783 make_dim_decl: '[' expr_list optional_comma ']'

  784 $@87: %empty

  785 $@88: %empty

  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

  787 $@89: %empty

  788 $@90: %empty

  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

  790 $@91: %empty

  791 $@92: %empty

  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'
  793              | "array" '(' expr_list optional_comma ')'

  794 $@93: %empty

  795 $@94: %empty

  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'
  797              | "fixed_array" '(' expr_list optional_comma ')'

  798 $@95: %empty

  799 $@96: %empty

  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

  801 expr_map_tuple_list: make_map_tuple
  802                    | expr_map_tuple_list ',' make_map_tuple

  803 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  804                | "table" '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  806                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  807 array_comprehension_where: %empty
  808                          | "end of expression" "where" expr

  809 optional_comma: %empty
  810               | ','

  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  812                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  813                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 107 123 417
    '#' (35) 686 688 734
    '$' (36) 20 320 677 679
    '%' (37) 35 42 143 429
    '&' (38) 151 323 436 545 554 684 685 690
    '(' (40) 96 105 111 118 119 246 269 270 271 296 297 312 313 314 382 383 384 385 387 397 398 402 403 404 405 406 447 457 458 459 460 489 490 491 492 493 495 496 497 498 499 500 501 502 503 504 526 556 612 653 654 676 677 679 756 757 758 759 767 770 773 779 782 786 789 792 793 796 797 800 804 805 806
    ')' (41) 96 105 111 118 119 246 269 270 271 296 297 312 313 314 382 383 384 385 387 397 398 402 403 404 405 406 447 457 458 459 460 489 490 491 492 493 495 496 497 498 499 500 501 502 503 504 526 556 612 653 654 676 677 679 756 757 758 759 767 770 773 779 782 786 789 792 793 796 797 800 804 805 806
    '*' (42) 141 427 456 691
    '+' (43) 139 419 425
    ',' (44) 51 85 98 114 295 316 328 383 558 559 580 614 615 659 754 755 758 759 802 810
    '-' (45) 140 420 426 680 683 685 688
    '.' (46) 43 168 170 171 395 396 397 398 401 449 451 453 497 499 500
    '/' (47) 44 142 428
    ':' (58) 53 54 121 296 462 530 536 546 547 560 561 562 592 597
    "end of expression" (59) 15 16 72 218 222 223 230 231 236 237 238 248 278 283 296 297 314 520 522 528 532 534 535 538 540 541 560 561 563 586 656 664 762 806 808 811 812 813
    '<' (60) 144 251 254 267 302 305 308 311 313 314 391 394 430 459 460 465 471 476 662 675 679 694 698 701 704 708 711 715 718 722 725 728 731 767 770 773 776 782 786 789 792 796 800 805 806
    '=' (61) 77 89 90 91 92 93 94 96 324 343 365 542 550 577 585
    '>' (62) 145 251 254 267 302 305 308 311 313 314 391 394 431 459 460 465 471 476 662 675 679 694 698 701 704 708 711 715 718 722 725 728 731 767 770 773 776 782 786 789 792 796 800 805 806
    '?' (63) 180 181 462 473 476 477 502
    '@' (64) 99 100 321 322 388 391 394 504
    '[' (91) 116 166 330 382 383 448 449 665 666 672 680 783 811 812
    ']' (93) 116 166 167 330 382 383 448 449 450 451 665 666 672 680 783 811 812
    '^' (94) 153 438
    "begin of code block" (123) 214 215 573 595 607 738 742 746 803 813
    '|' (124) 152 437 733 734
    "end of code block" (125) 214 215 573 595 607 738 742 746 803 813
    '~' (126) 124 418
    error (256) 241 401
    "lexer error" (258)
    "struct" (259) 602 767 786
    "class" (260) 601 770
    "let" (261) 287 290
    "def" (262) 207 522 524
    "while" (263) 75
    "if" (264) 62 72
    "static_if" (265) 63
    "else" (266) 60 65
    "for" (267) 73 811 812 813
    "recover" (268) 286
    "true" (269) 82 93 413
    "false" (270) 83 94 414
    "new" (271) 268 269 270 271 272
    "typeinfo" (272) 312 313 314
    "type" (273) 87 311 465 471 476 675
    "in" (274) 73 88 811 812 813
    "is" (275) 176 178 465 466 467 503
    "as" (276) 46 177 179 180 181 468 471 472 473 476 477 501 502
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 698 786 789 792 793 796
    "return" (280) 275 276 277 279 280
    "null" (281) 407
    "break" (282) 273
    "try" (283) 286
    "options" (284) 36
    "table" (285) 701 804 805 806
    "expect" (286) 49
    "const" (287) 511 682 683 689
    "require" (288) 37 102
    "operator" (289) 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181
    "enum" (290) 595
    "finally" (291) 215
    "delete" (292) 174 263 264
    "deref" (293) 457
    "typedef" (294) 586
    "typedecl" (295) 676
    "with" (296) 76
    "aka" (297) 557 559 613 615
    "assume" (298) 77
    "cast" (299) 302
    "override" (300) 508
    "abstract" (301) 522
    "upcast" (302) 305
    "iterator" (303) 704 812
    "var" (304) 288 291
    "addr" (305) 458
    "continue" (306) 274
    "where" (307) 808
    "pass" (308) 238
    "reinterpret" (309) 308
    "module" (310) 22
    "public" (311) 18 48 210 513 572 583 589 605
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 687
    "explicit" (315) 264 681
    "shared" (316) 569
    "private" (317) 19 103 209 514 571 582 588 604
    "smart_ptr" (318) 694
    "unsafe" (319) 74
    "inscope" (320) 292
    "static" (321) 516
    "fixed_array" (322) 797 800
    "default" (323) 776
    "uninitialized" (324) 764
    "bool" (325) 182 616
    "void" (326) 636
    "string" (327) 183 617
    "auto" (328) 652 653
    "int" (329) 184 618 643
    "int2" (330) 185 622
    "int3" (331) 186 623
    "int4" (332) 187 624
    "uint" (333) 188 625 646
    "bitfield" (334) 642 662 746
    "uint2" (335) 189 629
    "uint3" (336) 190 630
    "uint4" (337) 191 631
    "float" (338) 192 632
    "float2" (339) 193 633
    "float3" (340) 194 634
    "float4" (341) 195 635
    "range" (342) 196 637
    "urange" (343) 197 638
    "range64" (344) 198 639
    "urange64" (345) 199 640
    "block" (346) 705 708 711
    "int64" (347) 200 621 649
    "uint64" (348) 201 628 650
    "double" (349) 202 641
    "function" (350) 712 715 718
    "lambda" (351) 719 722 725
    "int8" (352) 203 619 644
    "uint8" (353) 204 626 647
    "int16" (354) 205 620 645
    "uint16" (355) 206 627 648
    "tuple" (356) 728 738 779 782 789
    "variant" (357) 731 742 773 792
    "generator" (358) 459 460
    "yield" (359) 281 282 284 285
    "sealed" (360) 509 599
    "+=" (361) 125 352 373
    "-=" (362) 126 353 374
    "/=" (363) 128 355 376
    "*=" (364) 127 354 375
    "%=" (365) 129 356 377
    "&=" (366) 130 346 367
    "|=" (367) 131 347 368
    "^=" (368) 132 348 369
    "<<" (369) 158 421
    ">>" (370) 159 422
    "++" (371) 154 156 443 445
    "--" (372) 155 157 444 446
    "<=" (373) 149 434
    "<<=" (374) 160 357 378
    ">>=" (375) 161 358 379
    ">=" (376) 150 435
    "==" (377) 147 432 689 690
    "!=" (378) 148 433
    "->" (379) 384 385
    "<-" (380) 277 280 282 285 319 325 344 366 543 551
    "??" (381) 175 461 695
    "?." (382) 169 172 452 453 498 500
    "?[" (383) 167 450 451
    "<|" (384) 485
    " <|" (385) 255
    "$ <|" (386) 258 363
    "@ <|" (387) 256 361
    "@@ <|" (388) 257 362
    "|>" (389) 112 486 487
    ":=" (390) 171 173 326 345 552 753 755 757 759
    "<<<" (391) 162 423
    ">>>" (392) 163 424
    "<<<=" (393) 164 359 380
    ">>>=" (394) 165 360 381
    "=>" (395) 318 319 777
    "::" (396) 261 262
    "&&" (397) 108 136 439
    "||" (398) 109 137 440
    "^^" (399) 110 138 441
    "&&=" (400) 133 349 370
    "||=" (401) 134 350 371
    "^^=" (402) 135 351 372
    ".." (403) 146 442
    "$$" (404) 489
    "$i" (405) 387 490 556 612
    "$v" (406) 491
    "$b" (407) 492
    "$a" (408) 493 526
    "$t" (409) 654
    "$c" (410) 495 496 504
    "$f" (411) 497 498 499 500 501 502 503 756 757 758 759
    "..." (412) 494
    "integer constant" <i> (413) 52 53 54 55 80 91 335
    "long integer constant" <i64> (414) 337
    "unsigned integer constant" <ui> (415) 336
    "unsigned long integer constant" <ui64> (416) 338
    "unsigned int8 constant" <ui> (417) 339
    "floating point constant" <fd> (418) 81 92 340
    "double constant" <d> (419) 341
    "name" <s> (420) 21 38 46 77 79 86 90 122 170 171 172 178 179 181 260 261 262 294 295 313 314 323 324 325 326 384 385 395 396 397 398 452 453 467 468 473 530 536 555 557 558 559 576 577 585 590 600 611 613 614 615 653 655 656 658 659 738 742 746 752 753 754 755
    "keyword" <s> (421) 39 242 251
    "type function" <s> (422) 40 254
    "start of the string" (423) 27 31
    STRING_CHARACTER <ch> (424) 23 25 32 33
    STRING_CHARACTER_ESC (425) 24 26
    "end of the string" (426) 27 31
    "{" (427) 30
    "}" (428) 30
    "end of failed eader macro" (429)
    ";}}" (430)
    ";}]" (431)
    ";]]" (432)
    ",]]" (433)
    ",}]" (434)
    UNARY_MINUS (435)
    UNARY_PLUS (436)
    PRE_INC (437)
    PRE_DEC (438)
    POST_INC (439)
    POST_DEC (440)
    DEREF (441)


Nonterminals, with rules where they appear

    $accept (214)
        on left: 0
    program (215)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (216)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (217)
        on left: 17 18 19
        on right: 22
    module_name <s> (218)
        on left: 20 21
        on right: 22
    module_declaration (219)
        on left: 22
        on right: 2
    character_sequence <s> (220)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (221)
        on left: 27
        on right: 78 89
    string_builder_body <pExpression> (222)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (223)
        on left: 31
        on right: 411
    reader_character_sequence (224)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (225)
        on left: 35
        on right: 16 410
    $@1 (226)
        on left: 34
        on right: 35
    options_declaration (227)
        on left: 36
        on right: 9
    require_declaration (228)
        on left: 37
        on right: 8
    keyword_or_name <s> (229)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (230)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (231)
        on left: 45 46
        on right: 37
    is_public_module <b> (232)
        on left: 47 48
        on right: 45 46
    expect_declaration (233)
        on left: 49
        on right: 7
    expect_list (234)
        on left: 50 51
        on right: 49 51
    expect_error (235)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (236)
        on left: 54
        on right: 236
    expression_goto <pExpression> (237)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (238)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (239)
        on left: 59 60 61
        on right: 61 71
    if_or_static_if <b> (240)
        on left: 62 63
        on right: 71
    expression_else_one_liner <pExpression> (241)
        on left: 64 65
        on right: 72
    expression_if_one_liner <pExpression> (242)
        on left: 66 67 68 69 70
        on right: 65 72
    expression_if_then_else <pExpression> (243)
        on left: 71 72
        on right: 234
    expression_for_loop <pExpression> (244)
        on left: 73
        on right: 229
    expression_unsafe <pExpression> (245)
        on left: 74
        on right: 226
    expression_while_loop <pExpression> (246)
        on left: 75
        on right: 225
    expression_with <pExpression> (247)
        on left: 76
        on right: 227
    expression_with_alias <pExpression> (248)
        on left: 77
        on right: 228
    annotation_argument_value <aa> (249)
        on left: 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_value_list <aaList> (250)
        on left: 84 85
        on right: 85 96
    annotation_argument_name <s> (251)
        on left: 86 87 88
        on right: 89 90 91 92 93 94 95 96
    annotation_argument <aa> (252)
        on left: 89 90 91 92 93 94 95 96
        on right: 97 98 99 100
    annotation_argument_list <aaList> (253)
        on left: 97 98
        on right: 36 98 105
    metadata_argument_list <aaList> (254)
        on left: 99 100
        on right: 100 506
    annotation_declaration_name <s> (255)
        on left: 101 102 103
        on right: 104 105
    annotation_declaration_basic <fa> (256)
        on left: 104 105
        on right: 106
    annotation_declaration <fa> (257)
        on left: 106 107 108 109 110 111 112
        on right: 107 108 109 110 111 112 113 114
    annotation_list <faList> (258)
        on left: 113 114
        on right: 114 116
    optional_annotation_list <faList> (259)
        on left: 115 116
        on right: 207 332 333 334 522 524 595 610
    optional_function_argument_list <pVarDeclList> (260)
        on left: 117 118 119
        on right: 211 332 333 334 394 711 718 725
    optional_function_type <pTypeDecl> (261)
        on left: 120 121
        on right: 211 332 333 334 394 711 718 725
    function_name <s> (262)
        on left: 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
        on right: 211
    global_function_declaration (263)
        on left: 207
        on right: 6
    optional_public_or_private_function <b> (264)
        on left: 208 209 210
        on right: 213
    function_declaration_header <pFuncDecl> (265)
        on left: 211
        on right: 213 522 524
    function_declaration <pFuncDecl> (266)
        on left: 213
        on right: 207
    $@2 (267)
        on left: 212
        on right: 213
    expression_block <pExpression> (268)
        on left: 214 215
        on right: 60 61 71 73 74 75 76 213 242 286 317 331 334 524
    expr_call_pipe <pExpression> (269)
        on left: 216 217
        on right: 259 364
    expression_any <pExpression> (270)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (271)
        on left: 239 240 241
        on right: 214 215 240 241
    expr_keyword <pExpression> (272)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (273)
        on left: 243 244
        on right: 246 269 677 679
    optional_expr_list_in_braces <pExpression> (274)
        on left: 245 246
        on right: 254
    type_declaration_no_options_list <pTypeDeclList> (275)
        on left: 247 248
        on right: 248 251 254 679
    expression_keyword <pExpression> (276)
        on left: 251 254
        on right: 217 488
    $@3 (277)
        on left: 249
        on right: 251
    $@4 (278)
        on left: 250
        on right: 251
    $@5 (279)
        on left: 252
        on right: 254
    $@6 (280)
        on left: 253
        on right: 254
    expr_pipe <pExpression> (281)
        on left: 255 256 257 258 259
        on right: 219 279 280 284 285 549 562 564
    name_in_namespace <s> (282)
        on left: 260 261 262
        on right: 35 101 312 313 314 382 383 386 402 403 404 408 597 651 677 679
    expression_delete <pExpression> (283)
        on left: 263 264
        on right: 223
    new_type_declaration <pTypeDecl> (284)
        on left: 267
        on right: 270 271
    $@7 (285)
        on left: 265
        on right: 267
    $@8 (286)
        on left: 266
        on right: 267
    expr_new <pExpression> (287)
        on left: 268 269 270 271 272
        on right: 481
    expression_break <pExpression> (288)
        on left: 273
        on right: 69 230
    expression_continue <pExpression> (289)
        on left: 274
        on right: 70 231
    expression_return_no_pipe <pExpression> (290)
        on left: 275 276 277
        on right: 67 278
    expression_return <pExpression> (291)
        on left: 278 279 280
        on right: 232
    expression_yield_no_pipe <pExpression> (292)
        on left: 281 282
        on right: 68 283
    expression_yield <pExpression> (293)
        on left: 283 284 285
        on right: 233
    expression_try_catch <pExpression> (294)
        on left: 286
        on right: 235
    kwd_let_var_or_nothing <b> (295)
        on left: 287 288 289
        on right: 525
    kwd_let <b> (296)
        on left: 290 291
        on right: 298 299 573 575
    optional_in_scope <b> (297)
        on left: 292 293
        on right: 298 299
    tuple_expansion <pNameList> (298)
        on left: 294 295
        on right: 295 296 297
    tuple_expansion_variable_declaration <pVarDecl> (299)
        on left: 296 297
        on right: 299
    expression_let <pExpression> (300)
        on left: 298 299
        on right: 224
    expr_cast <pExpression> (301)
        on left: 302 305 308
        on right: 480
    $@9 (302)
        on left: 300
        on right: 302
    $@10 (303)
        on left: 301
        on right: 302
    $@11 (304)
        on left: 303
        on right: 305
    $@12 (305)
        on left: 304
        on right: 305
    $@13 (306)
        on left: 306
        on right: 308
    $@14 (307)
        on left: 307
        on right: 308
    expr_type_decl <pExpression> (308)
        on left: 311
        on right: 479
    $@15 (309)
        on left: 309
        on right: 311
    $@16 (310)
        on left: 310
        on right: 311
    expr_type_info <pExpression> (311)
        on left: 312 313 314
        on right: 478
    expr_list <pExpression> (312)
        on left: 315 316
        on right: 73 244 276 277 316 383 385 398 404 406 447 496 779 783 793 796 797 800 811 812 813
    block_or_simple_block <pExpression> (313)
        on left: 317 318 319
        on right: 332 333
    block_or_lambda <i> (314)
        on left: 320 321 322
        on right: 332 333 334
    capture_entry <pCapt> (315)
        on left: 323 324 325 326
        on right: 327 328
    capture_list <pCaptList> (316)
        on left: 327 328
        on right: 328 330
    optional_capture_list <pCaptList> (317)
        on left: 329 330
        on right: 332 333 334 459 460
    expr_block <pExpression> (318)
        on left: 331 332
        on right: 255 256 257 258 361 362 363
    expr_full_block <pExpression> (319)
        on left: 333
        on right: 484
    expr_full_block_assumed_piped <pExpression> (320)
        on left: 334
        on right: 216 217
    expr_numeric_const <pExpression> (321)
        on left: 335 336 337 338 339 340 341
        on right: 409
    expr_assign <pExpression> (322)
        on left: 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360
        on right: 222 255
    expr_assign_pipe_right <pExpression> (323)
        on left: 361 362 363 364
        on right: 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381
    expr_assign_pipe <pExpression> (324)
        on left: 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381
        on right: 221
    expr_named_call <pExpression> (325)
        on left: 382 383
        on right: 483
    expr_method_call <pExpression> (326)
        on left: 384 385
        on right: 482
    func_addr_name <pExpression> (327)
        on left: 386 387
        on right: 388 391 394
    func_addr_expr <pExpression> (328)
        on left: 388 391 394
        on right: 454
    $@17 (329)
        on left: 389
        on right: 391
    $@18 (330)
        on left: 390
        on right: 391
    $@19 (331)
        on left: 392
        on right: 394
    $@20 (332)
        on left: 393
        on right: 394
    expr_field <pExpression> (333)
        on left: 395 396 397 398 401
        on right: 415
    $@21 (334)
        on left: 399
        on right: 401
    $@22 (335)
        on left: 400
        on right: 401
    expr_call <pExpression> (336)
        on left: 402 403 404 405 406
        on right: 455
    expr <pExpression> (337)
        on left: 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 465 466 467 468 471 472 473 476 477 478 479 480 481 482 483 484 485 486 487 488
        on right
    $@23 (338)
        on left: 463
        on right: 465
    $@24 (339)
        on left: 464
        on right: 465
    $@25 (340)
        on left: 469
        on right: 471
    $@26 (341)
        on left: 470
        on right: 471
    $@27 (342)
        on left: 474
        on right: 476
    $@28 (343)
        on left: 475
        on right: 476
    expr_mtag <pExpression> (344)
        on left: 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504
        on right: 416
    optional_field_annotation <aaList> (345)
        on left: 505 506
        on right: 517 525 567 575
    optional_override <i> (346)
        on left: 507 508 509
        on right: 517 524
    optional_constant <b> (347)
        on left: 510 511
        on right: 522 524
    optional_public_or_private_member_variable <b> (348)
        on left: 512 513 514
        on right: 517 522 524
    optional_static_member_variable <b> (349)
        on left: 515 516
        on right: 517 524
    structure_variable_declaration <pVarDecl> (350)
        on left: 517
        on right: 520
    struct_variable_declaration_list <pVarDeclList> (351)
        on left: 518 520 522 524
        on right: 520 522 524 607
    $@29 (352)
        on left: 519
        on right: 520
    $@30 (353)
        on left: 521
        on right: 522
    $@31 (354)
        on left: 523
        on right: 524
    function_argument_declaration <pVarDecl> (355)
        on left: 525 526
        on right: 527 528
    function_argument_list <pVarDeclList> (356)
        on left: 527 528
        on right: 119 528
    tuple_type <pVarDecl> (357)
        on left: 529 530
        on right: 531 532 535
    tuple_type_list <pVarDeclList> (358)
        on left: 531 532
        on right: 532 728
    tuple_alias_type_list <pVarDeclList> (359)
        on left: 533 534 535
        on right: 534 535 738
    variant_type <pVarDecl> (360)
        on left: 536
        on right: 537 538 541
    variant_type_list <pVarDeclList> (361)
        on left: 537 538
        on right: 538 731
    variant_alias_type_list <pVarDeclList> (362)
        on left: 539 540 541
        on right: 540 541 742
    copy_or_move <b> (363)
        on left: 542 543
        on right: 547 548 549 752 754 756 758
    variable_declaration <pVarDecl> (364)
        on left: 544 545 546 547 548 549
        on right: 517 525
    copy_or_move_or_clone <i> (365)
        on left: 550 551 552
        on right: 296 297 561 562 563 564
    optional_ref <b> (366)
        on left: 553 554
        on right: 297 563 564
    let_variable_name_with_pos_list <pNameWithPosList> (367)
        on left: 555 556 557 558 559
        on right: 558 559 560 561 562 563 564
    let_variable_declaration <pVarDecl> (368)
        on left: 560 561 562 563 564
        on right: 298 567 575
    global_variable_declaration_list <pVarDeclList> (369)
        on left: 565 567
        on right: 567 573
    $@32 (370)
        on left: 566
        on right: 567
    optional_shared <b> (371)
        on left: 568 569
        on right: 22 573 575
    optional_public_or_private_variable <b> (372)
        on left: 570 571 572
        on right: 573 575
    global_let (373)
        on left: 573 575
        on right: 5
    $@33 (374)
        on left: 574
        on right: 575
    enum_expression <pEnumPair> (375)
        on left: 576 577
        on right: 579 580
    enum_list <pEnum> (376)
        on left: 578 579 580
        on right: 580 595
    optional_public_or_private_alias <b> (377)
        on left: 581 582 583
        on right: 585 738 742 746
    single_alias (378)
        on left: 585
        on right: 586
    $@34 (379)
        on left: 584
        on right: 585
    alias_declaration (380)
        on left: 586
        on right: 10
    optional_public_or_private_enum <b> (381)
        on left: 587 588 589
        on right: 595
    enum_name <pEnum> (382)
        on left: 590
        on right: 595
    optional_enum_basic_type_declaration <type> (383)
        on left: 591 592
        on right: 595
    enum_declaration (384)
        on left: 595
        on right: 4
    $@35 (385)
        on left: 593
        on right: 595
    $@36 (386)
        on left: 594
        on right: 595
    optional_structure_parent <s> (387)
        on left: 596 597
        on right: 600
    optional_sealed <b> (388)
        on left: 598 599
        on right: 600
    structure_name <pStructure> (389)
        on left: 600
        on right: 610
    class_or_struct <b> (390)
        on left: 601 602
        on right: 610
    optional_public_or_private_structure <b> (391)
        on left: 603 604 605
        on right: 610
    optional_struct_variable_declaration_list <pVarDeclList> (392)
        on left: 606 607
        on right: 610
    structure_declaration (393)
        on left: 610
        on right: 3
    $@37 (394)
        on left: 608
        on right: 610
    $@38 (395)
        on left: 609
        on right: 610
    variable_name_with_pos_list <pNameWithPosList> (396)
        on left: 611 612 613 614 615
        on right: 73 544 545 546 547 548 549 614 615 811 812 813
    basic_type_declaration <type> (397)
        on left: 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642
        on right: 405 406 466 472 477 487 667
    enum_basic_type_declaration <type> (398)
        on left: 643 644 645 646 647 648 649 650
        on right: 592
    structure_type_declaration <pTypeDecl> (399)
        on left: 651
        on right: 268 269 670
    auto_type_declaration <pTypeDecl> (400)
        on left: 652 653 654
        on right: 668
    bitfield_bits <pNameList> (401)
        on left: 655 656
        on right: 656 662
    bitfield_alias_bits <pNameList> (402)
        on left: 657 658 659
        on right: 659 746
    bitfield_type_declaration <pTypeDecl> (403)
        on left: 662
        on right: 669
    $@39 (404)
        on left: 660
        on right: 662
    $@40 (405)
        on left: 661
        on right: 662
    table_type_pair <aTypePair> (406)
        on left: 663 664
        on right: 701
    dim_list <pTypeDecl> (407)
        on left: 665 666
        on right: 666 671
    type_declaration_no_options <pTypeDecl> (408)
        on left: 667 668 669 670 671 672 675 676 677 679 680 681 682 683 684 685 686 687 688 689 690 691 694 695 698 701 704 705 708 711 712 715 718 719 722 725 728 731
        on right: 296 302 305 308 391 459 460 465 560 561 562 671 672 680 681 682 683 684 685 686 687 688 689 690 691 695 732 733 767 770 773 776 782 786 789 792 796 800 805 806
    $@41 (409)
        on left: 673
        on right: 675
    $@42 (410)
        on left: 674
        on right: 675
    $@43 (411)
        on left: 678
        on right: 679
    $@44 (412)
        on left: 692
        on right: 694
    $@45 (413)
        on left: 693
        on right: 694
    $@46 (414)
        on left: 696
        on right: 698
    $@47 (415)
        on left: 697
        on right: 698
    $@48 (416)
        on left: 699
        on right: 701
    $@49 (417)
        on left: 700
        on right: 701
    $@50 (418)
        on left: 702
        on right: 704
    $@51 (419)
        on left: 703
        on right: 704
    $@52 (420)
        on left: 706
        on right: 708
    $@53 (421)
        on left: 707
        on right: 708
    $@54 (422)
        on left: 709
        on right: 711
    $@55 (423)
        on left: 710
        on right: 711
    $@56 (424)
        on left: 713
        on right: 715
    $@57 (425)
        on left: 714
        on right: 715
    $@58 (426)
        on left: 716
        on right: 718
    $@59 (427)
        on left: 717
        on right: 718
    $@60 (428)
        on left: 720
        on right: 722
    $@61 (429)
        on left: 721
        on right: 722
    $@62 (430)
        on left: 723
        on right: 725
    $@63 (431)
        on left: 724
        on right: 725
    $@64 (432)
        on left: 726
        on right: 728
    $@65 (433)
        on left: 727
        on right: 728
    $@66 (434)
        on left: 729
        on right: 731
    $@67 (435)
        on left: 730
        on right: 731
    type_declaration <pTypeDecl> (436)
        on left: 732 733 734
        on right: 121 247 248 267 311 471 476 529 530 536 546 547 585 663 664 675 694 698 704 708 715 722 733 734
    tuple_alias_declaration (437)
        on left: 738
        on right: 12
    $@68 (438)
        on left: 735
        on right: 738
    $@69 (439)
        on left: 736
        on right: 738
    $@70 (440)
        on left: 737
        on right: 738
    variant_alias_declaration (441)
        on left: 742
        on right: 11
    $@71 (442)
        on left: 739
        on right: 742
    $@72 (443)
        on left: 740
        on right: 742
    $@73 (444)
        on left: 741
        on right: 742
    bitfield_alias_declaration (445)
        on left: 746
        on right: 13
    $@74 (446)
        on left: 743
        on right: 746
    $@75 (447)
        on left: 744
        on right: 746
    $@76 (448)
        on left: 745
        on right: 746
    make_decl <pExpression> (449)
        on left: 747 748 749 750 751
        on right: 272 412
    make_struct_fields <pMakeStruct> (450)
        on left: 752 753 754 755 756 757 758 759
        on right: 382 383 754 755 758 759 760 761 762
    make_struct_single <pExpression> (451)
        on left: 760
        on right: 271 403
    make_struct_dim <pExpression> (452)
        on left: 761 762
        on right: 762 767 770 773 782 786 789 792
    use_initializer <b> (453)
        on left: 763 764
        on right: 270 271 767 770 776 782 786 789
    make_struct_decl <pExpression> (454)
        on left: 767 770 773 776
        on right: 747
    $@77 (455)
        on left: 765
        on right: 767
    $@78 (456)
        on left: 766
        on right: 767
    $@79 (457)
        on left: 768
        on right: 770
    $@80 (458)
        on left: 769
        on right: 770
    $@81 (459)
        on left: 771
        on right: 773
    $@82 (460)
        on left: 772
        on right: 773
    $@83 (461)
        on left: 774
        on right: 776
    $@84 (462)
        on left: 775
        on right: 776
    make_map_tuple <pExpression> (463)
        on left: 777 778
        on right: 801 802 813
    make_tuple_call <pExpression> (464)
        on left: 779 782
        on right: 751
    $@85 (465)
        on left: 780
        on right: 782
    $@86 (466)
        on left: 781
        on right: 782
    make_dim_decl <pExpression> (467)
        on left: 783 786 789 792 793 796 797 800
        on right: 748
    $@87 (468)
        on left: 784
        on right: 786
    $@88 (469)
        on left: 785
        on right: 786
    $@89 (470)
        on left: 787
        on right: 789
    $@90 (471)
        on left: 788
        on right: 789
    $@91 (472)
        on left: 790
        on right: 792
    $@92 (473)
        on left: 791
        on right: 792
    $@93 (474)
        on left: 794
        on right: 796
    $@94 (475)
        on left: 795
        on right: 796
    $@95 (476)
        on left: 798
        on right: 800
    $@96 (477)
        on left: 799
        on right: 800
    expr_map_tuple_list <pExpression> (478)
        on left: 801 802
        on right: 802 803 804 805 806
    make_table_decl <pExpression> (479)
        on left: 803 804 805 806
        on right: 749
    array_comprehension_where <pExpression> (480)
        on left: 807 808
        on right: 811 812 813
    optional_comma <b> (481)
        on left: 809 810
        on right: 447 595 746 779 783 793 796 797 800 803 804 805 806
    array_comprehension <pExpression> (482)
        on left: 811 812 813
        on right: 750


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 115 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  290 kwd_let: "let" .

    $default  reduce using rule 290 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  586 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 50
    single_alias                      go to state 51


State 8

  291 kwd_let: "var" .

    $default  reduce using rule 291 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 52
    '$'     shift, and go to state 53

    module_name  go to state 54


State 10

  746 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  738 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  742 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 581 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  116 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  207 global_function_declaration: optional_annotation_list . "def" function_declaration
  595 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"
  610 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  573 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  575           | kwd_let . optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 568 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   87 annotation_argument_name: "type" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   88 annotation_argument_name: "in" .

    $default  reduce using rule 88 (annotation_argument_name)


State 34

   86 annotation_argument_name: "name" .

    $default  reduce using rule 86 (annotation_argument_name)


State 35

   89 annotation_argument: annotation_argument_name . '=' string_constant
   90                    | annotation_argument_name . '=' "name"
   91                    | annotation_argument_name . '=' "integer constant"
   92                    | annotation_argument_name . '=' "floating point constant"
   93                    | annotation_argument_name . '=' "true"
   94                    | annotation_argument_name . '=' "false"
   95                    | annotation_argument_name .
   96                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 95 (annotation_argument)


State 36

   97 annotation_argument_list: annotation_argument .

    $default  reduce using rule 97 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  583 optional_public_or_private_alias: "public" .

    $default  reduce using rule 583 (optional_public_or_private_alias)


State 49

  582 optional_public_or_private_alias: "private" .

    $default  reduce using rule 582 (optional_public_or_private_alias)


State 50

  585 single_alias: optional_public_or_private_alias . "name" $@34 '=' type_declaration

    "name"  shift, and go to state 89


State 51

  586 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 90


State 52

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 53

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 54

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 568 (optional_shared)

    optional_shared  go to state 91


State 55

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "name"  shift, and go to state 92


State 56

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "name"  shift, and go to state 93


State 57

  742 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "name"  shift, and go to state 94


State 58

  262 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 59

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    "::"      [reduce using rule 260 (name_in_namespace)]
    $default  reduce using rule 260 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 97


State 61

  102 annotation_declaration_name: "require" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 62

  103 annotation_declaration_name: "private" .

    $default  reduce using rule 103 (annotation_declaration_name)


State 63

  112 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  107 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  111 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  104 annotation_declaration_basic: annotation_declaration_name .
  105                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 104 (annotation_declaration_basic)


State 67

  106 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 106 (annotation_declaration)


State 68

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 113 (annotation_list)


State 69

  114 annotation_list: annotation_list . ',' annotation_declaration
  116 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  101 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 101 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  602 class_or_struct: "struct" .

    $default  reduce using rule 602 (class_or_struct)


State 73

  601 class_or_struct: "class" .

    $default  reduce using rule 601 (class_or_struct)


State 74

  207 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 208 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  595 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 587 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 113


State 76

  610 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 603 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 116


State 77

  569 optional_shared: "shared" .

    $default  reduce using rule 569 (optional_shared)


State 78

  573 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  575           | kwd_let optional_shared . optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 570 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 119


State 79

   89 annotation_argument: annotation_argument_name '=' . string_constant
   90                    | annotation_argument_name '=' . "name"
   91                    | annotation_argument_name '=' . "integer constant"
   92                    | annotation_argument_name '=' . "floating point constant"
   93                    | annotation_argument_name '=' . "true"
   94                    | annotation_argument_name '=' . "false"
   96                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 120
    "false"                    shift, and go to state 121
    "integer constant"         shift, and go to state 122
    "floating point constant"  shift, and go to state 123
    "name"                     shift, and go to state 124
    "start of the string"      shift, and go to state 125
    '('                        shift, and go to state 126

    string_constant  go to state 127


State 80

   98 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 128


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 129


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 130


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 131


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 132


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 133


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  585 single_alias: optional_public_or_private_alias "name" . $@34 '=' type_declaration

    $default  reduce using rule 584 ($@34)

    $@34  go to state 134


State 90

  586 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 586 (alias_declaration)


State 91

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 135
    "private"  shift, and go to state 136

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 137


State 92

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    $default  reduce using rule 743 ($@74)

    $@74  go to state 138


State 93

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 735 ($@68)

    $@68  go to state 139


State 94

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 739 ($@71)

    $@71  go to state 140


State 95

  262 name_in_namespace: "::" "name" .

    $default  reduce using rule 262 (name_in_namespace)


State 96

  261 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 141


State 97

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 142

    reader_character_sequence  go to state 143


State 98

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  112                       | "|>" annotation_declaration .

    $default  reduce using rule 112 (annotation_declaration)


State 99

  107 annotation_declaration: '!' annotation_declaration .
  108                       | annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 100

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  111                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 144


State 101

  105 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 145


State 102

  108 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 103

  109 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 104

  110 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 105

  114 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 149
    name_in_namespace             go to state 70


State 106

  116 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 116 (optional_annotation_list)


State 107

  210 optional_public_or_private_function: "public" .

    $default  reduce using rule 210 (optional_public_or_private_function)


State 108

  209 optional_public_or_private_function: "private" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 109

  213 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 212 ($@2)

    $@2  go to state 150


State 110

  207 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 207 (global_function_declaration)


State 111

  589 optional_public_or_private_enum: "public" .

    $default  reduce using rule 589 (optional_public_or_private_enum)


State 112

  588 optional_public_or_private_enum: "private" .

    $default  reduce using rule 588 (optional_public_or_private_enum)


State 113

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 151

    enum_name  go to state 152


State 114

  605 optional_public_or_private_structure: "public" .

    $default  reduce using rule 605 (optional_public_or_private_structure)


State 115

  604 optional_public_or_private_structure: "private" .

    $default  reduce using rule 604 (optional_public_or_private_structure)


State 116

  610 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@37 structure_name $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 608 ($@37)

    $@37  go to state 153


State 117

  572 optional_public_or_private_variable: "public" .

    $default  reduce using rule 572 (optional_public_or_private_variable)


State 118

  571 optional_public_or_private_variable: "private" .

    $default  reduce using rule 571 (optional_public_or_private_variable)


State 119

  573 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  575           | kwd_let optional_shared optional_public_or_private_variable . $@33 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 154

    $default  reduce using rule 574 ($@33)

    $@33  go to state 155


State 120

   93 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 93 (annotation_argument)


State 121

   94 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 94 (annotation_argument)


State 122

   91 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 91 (annotation_argument)


State 123

   92 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 92 (annotation_argument)


State 124

   90 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 90 (annotation_argument)


State 125

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 156
    STRING_CHARACTER_ESC  shift, and go to state 157

    character_sequence  go to state 158


State 126

   96 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 125

    string_constant                 go to state 164
    annotation_argument_value       go to state 165
    annotation_argument_value_list  go to state 166


State 127

   89 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 89 (annotation_argument)


State 128

   98 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 129

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 130

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 131

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 167


State 132

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 133

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 134

  585 single_alias: optional_public_or_private_alias "name" $@34 . '=' type_declaration

    '='  shift, and go to state 168


State 135

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 136

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 137

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 138

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 . "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "begin of code block"  shift, and go to state 169


State 139

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 . "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "begin of code block"  shift, and go to state 170


State 140

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 . "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "begin of code block"  shift, and go to state 171


State 141

  261 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 261 (name_in_namespace)


State 142

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 143

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 172

    $default  reduce using rule 35 (expr_reader)


State 144

  111 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 111 (annotation_declaration)


State 145

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 173


State 146

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration .
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 108 (annotation_declaration)


State 147

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration .
  110                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 109 (annotation_declaration)


State 148

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 110 (annotation_declaration)


State 149

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  114 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 114 (annotation_list)


State 150

  213 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 204


State 151

  590 enum_name: "name" .

    $default  reduce using rule 590 (enum_name)


State 152

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    ':'  shift, and go to state 205

    $default  reduce using rule 591 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 206


State 153

  610 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 . structure_name $@38 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 207

    $default  reduce using rule 598 (optional_sealed)

    optional_sealed  go to state 208
    structure_name   go to state 209


State 154

  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 565 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 210


State 155

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 213


State 156

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 157

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 158

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215
    "end of the string"   shift, and go to state 216


State 159

   82 annotation_argument_value: "true" .

    $default  reduce using rule 82 (annotation_argument_value)


State 160

   83 annotation_argument_value: "false" .

    $default  reduce using rule 83 (annotation_argument_value)


State 161

   80 annotation_argument_value: "integer constant" .

    $default  reduce using rule 80 (annotation_argument_value)


State 162

   81 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 163

   79 annotation_argument_value: "name" .

    $default  reduce using rule 79 (annotation_argument_value)


State 164

   78 annotation_argument_value: string_constant .

    $default  reduce using rule 78 (annotation_argument_value)


State 165

   84 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 84 (annotation_argument_value_list)


State 166

   85 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 217
    ')'  shift, and go to state 218


State 167

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 168

  585 single_alias: optional_public_or_private_alias "name" $@34 '=' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 266


State 169

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" . $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    $default  reduce using rule 744 ($@75)

    $@75  go to state 267


State 170

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" . $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 736 ($@69)

    $@69  go to state 268


State 171

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" . $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 740 ($@72)

    $@72  go to state 269


State 172

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 173

  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 105 (annotation_declaration_basic)


State 174

  123 function_name: "operator" . '!'
  124              | "operator" . '~'
  125              | "operator" . "+="
  126              | "operator" . "-="
  127              | "operator" . "*="
  128              | "operator" . "/="
  129              | "operator" . "%="
  130              | "operator" . "&="
  131              | "operator" . "|="
  132              | "operator" . "^="
  133              | "operator" . "&&="
  134              | "operator" . "||="
  135              | "operator" . "^^="
  136              | "operator" . "&&"
  137              | "operator" . "||"
  138              | "operator" . "^^"
  139              | "operator" . '+'
  140              | "operator" . '-'
  141              | "operator" . '*'
  142              | "operator" . '/'
  143              | "operator" . '%'
  144              | "operator" . '<'
  145              | "operator" . '>'
  146              | "operator" . ".."
  147              | "operator" . "=="
  148              | "operator" . "!="
  149              | "operator" . "<="
  150              | "operator" . ">="
  151              | "operator" . '&'
  152              | "operator" . '|'
  153              | "operator" . '^'
  156              | "operator" . "++"
  157              | "operator" . "--"
  158              | "operator" . "<<"
  159              | "operator" . ">>"
  160              | "operator" . "<<="
  161              | "operator" . ">>="
  162              | "operator" . "<<<"
  163              | "operator" . ">>>"
  164              | "operator" . "<<<="
  165              | "operator" . ">>>="
  166              | "operator" . '[' ']'
  167              | "operator" . "?[" ']'
  168              | "operator" . '.'
  169              | "operator" . "?."
  170              | "operator" . '.' "name"
  171              | "operator" . '.' "name" ":="
  172              | "operator" . "?." "name"
  173              | "operator" . ":="
  174              | "operator" . "delete"
  175              | "operator" . "??"
  176              | "operator" . "is"
  177              | "operator" . "as"
  178              | "operator" . "is" "name"
  179              | "operator" . "as" "name"
  180              | "operator" . '?' "as"
  181              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 270
    "as"      shift, and go to state 271
    "delete"  shift, and go to state 272
    "+="      shift, and go to state 273
    "-="      shift, and go to state 274
    "/="      shift, and go to state 275
    "*="      shift, and go to state 276
    "%="      shift, and go to state 277
    "&="      shift, and go to state 278
    "|="      shift, and go to state 279
    "^="      shift, and go to state 280
    "<<"      shift, and go to state 281
    ">>"      shift, and go to state 282
    "++"      shift, and go to state 283
    "--"      shift, and go to state 284
    "<="      shift, and go to state 285
    "<<="     shift, and go to state 286
    ">>="     shift, and go to state 287
    ">="      shift, and go to state 288
    "=="      shift, and go to state 289
    "!="      shift, and go to state 290
    "??"      shift, and go to state 291
    "?."      shift, and go to state 292
    "?["      shift, and go to state 293
    ":="      shift, and go to state 294
    "<<<"     shift, and go to state 295
    ">>>"     shift, and go to state 296
    "<<<="    shift, and go to state 297
    ">>>="    shift, and go to state 298
    "&&"      shift, and go to state 299
    "||"      shift, and go to state 300
    "^^"      shift, and go to state 301
    "&&="     shift, and go to state 302
    "||="     shift, and go to state 303
    "^^="     shift, and go to state 304
    ".."      shift, and go to state 305
    '?'       shift, and go to state 306
    '|'       shift, and go to state 307
    '^'       shift, and go to state 308
    '&'       shift, and go to state 309
    '<'       shift, and go to state 310
    '>'       shift, and go to state 311
    '-'       shift, and go to state 312
    '+'       shift, and go to state 313
    '*'       shift, and go to state 314
    '/'       shift, and go to state 315
    '%'       shift, and go to state 316
    '~'       shift, and go to state 317
    '!'       shift, and go to state 318
    '.'       shift, and go to state 319
    '['       shift, and go to state 320


State 175

  182 function_name: "bool" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "string" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "int2" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "int3" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "int4" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "uint2" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "uint3" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "uint4" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "float2" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "float3" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "float4" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "range" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "urange" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "range64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "urange64" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "int64" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint64" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "double" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "int8" .

    $default  reduce using rule 203 (function_name)


State 197

  204 function_name: "uint8" .

    $default  reduce using rule 204 (function_name)


State 198

  205 function_name: "int16" .

    $default  reduce using rule 205 (function_name)


State 199

  206 function_name: "uint16" .

    $default  reduce using rule 206 (function_name)


State 200

  154 function_name: "++" . "operator"

    "operator"  shift, and go to state 321


State 201

  155 function_name: "--" . "operator"

    "operator"  shift, and go to state 322


State 202

  122 function_name: "name" .

    $default  reduce using rule 122 (function_name)


State 203

  211 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 324


State 204

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 326


State 205

  592 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 327
    "uint"    shift, and go to state 328
    "int64"   shift, and go to state 329
    "uint64"  shift, and go to state 330
    "int8"    shift, and go to state 331
    "uint8"   shift, and go to state 332
    "int16"   shift, and go to state 333
    "uint16"  shift, and go to state 334

    enum_basic_type_declaration  go to state 335


State 206

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "begin of code block"  shift, and go to state 336


State 207

  599 optional_sealed: "sealed" .

    $default  reduce using rule 599 (optional_sealed)


State 208

  600 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 337


State 209

  610 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name . $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 609 ($@38)

    $@38  go to state 338


State 210

  567 global_variable_declaration_list: global_variable_declaration_list . $@32 optional_field_annotation let_variable_declaration
  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 339

    $default  reduce using rule 566 ($@32)

    $@32  go to state 340


State 211

   99 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 341


State 212

  100 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  506 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 342

    $default  reduce using rule 506 (optional_field_annotation)


State 213

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 343
    "name"  shift, and go to state 344

    let_variable_name_with_pos_list  go to state 345
    let_variable_declaration         go to state 346


State 214

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 215

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 216

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 217

   85 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 125

    string_constant            go to state 164
    annotation_argument_value  go to state 347


State 218

   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 96 (annotation_argument)


State 219

  675 type_declaration_no_options: "type" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 348


State 220

  698 type_declaration_no_options: "array" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 349


State 221

  701 type_declaration_no_options: "table" . '<' $@48 table_type_pair '>' $@49

    '<'  shift, and go to state 350


State 222

  676 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 351


State 223

  704 type_declaration_no_options: "iterator" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 352


State 224

  694 type_declaration_no_options: "smart_ptr" . '<' $@44 type_declaration '>' $@45

    '<'  shift, and go to state 353


State 225

  616 basic_type_declaration: "bool" .

    $default  reduce using rule 616 (basic_type_declaration)


State 226

  636 basic_type_declaration: "void" .

    $default  reduce using rule 636 (basic_type_declaration)


State 227

  617 basic_type_declaration: "string" .

    $default  reduce using rule 617 (basic_type_declaration)


State 228

  652 auto_type_declaration: "auto" .
  653                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 354

    $default  reduce using rule 652 (auto_type_declaration)


State 229

  618 basic_type_declaration: "int" .

    $default  reduce using rule 618 (basic_type_declaration)


State 230

  622 basic_type_declaration: "int2" .

    $default  reduce using rule 622 (basic_type_declaration)


State 231

  623 basic_type_declaration: "int3" .

    $default  reduce using rule 623 (basic_type_declaration)


State 232

  624 basic_type_declaration: "int4" .

    $default  reduce using rule 624 (basic_type_declaration)


State 233

  625 basic_type_declaration: "uint" .

    $default  reduce using rule 625 (basic_type_declaration)


State 234

  642 basic_type_declaration: "bitfield" .
  662 bitfield_type_declaration: "bitfield" . '<' $@39 bitfield_bits '>' $@40

    '<'  shift, and go to state 355

    $default  reduce using rule 642 (basic_type_declaration)


State 235

  629 basic_type_declaration: "uint2" .

    $default  reduce using rule 629 (basic_type_declaration)


State 236

  630 basic_type_declaration: "uint3" .

    $default  reduce using rule 630 (basic_type_declaration)


State 237

  631 basic_type_declaration: "uint4" .

    $default  reduce using rule 631 (basic_type_declaration)


State 238

  632 basic_type_declaration: "float" .

    $default  reduce using rule 632 (basic_type_declaration)


State 239

  633 basic_type_declaration: "float2" .

    $default  reduce using rule 633 (basic_type_declaration)


State 240

  634 basic_type_declaration: "float3" .

    $default  reduce using rule 634 (basic_type_declaration)


State 241

  635 basic_type_declaration: "float4" .

    $default  reduce using rule 635 (basic_type_declaration)


State 242

  637 basic_type_declaration: "range" .

    $default  reduce using rule 637 (basic_type_declaration)


State 243

  638 basic_type_declaration: "urange" .

    $default  reduce using rule 638 (basic_type_declaration)


State 244

  639 basic_type_declaration: "range64" .

    $default  reduce using rule 639 (basic_type_declaration)


State 245

  640 basic_type_declaration: "urange64" .

    $default  reduce using rule 640 (basic_type_declaration)


State 246

  705 type_declaration_no_options: "block" .
  708                            | "block" . '<' $@52 type_declaration '>' $@53
  711                            | "block" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 356

    $default  reduce using rule 705 (type_declaration_no_options)


State 247

  621 basic_type_declaration: "int64" .

    $default  reduce using rule 621 (basic_type_declaration)


State 248

  628 basic_type_declaration: "uint64" .

    $default  reduce using rule 628 (basic_type_declaration)


State 249

  641 basic_type_declaration: "double" .

    $default  reduce using rule 641 (basic_type_declaration)


State 250

  712 type_declaration_no_options: "function" .
  715                            | "function" . '<' $@56 type_declaration '>' $@57
  718                            | "function" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 357

    $default  reduce using rule 712 (type_declaration_no_options)


State 251

  719 type_declaration_no_options: "lambda" .
  722                            | "lambda" . '<' $@60 type_declaration '>' $@61
  725                            | "lambda" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 358

    $default  reduce using rule 719 (type_declaration_no_options)


State 252

  619 basic_type_declaration: "int8" .

    $default  reduce using rule 619 (basic_type_declaration)


State 253

  626 basic_type_declaration: "uint8" .

    $default  reduce using rule 626 (basic_type_declaration)


State 254

  620 basic_type_declaration: "int16" .

    $default  reduce using rule 620 (basic_type_declaration)


State 255

  627 basic_type_declaration: "uint16" .

    $default  reduce using rule 627 (basic_type_declaration)


State 256

  728 type_declaration_no_options: "tuple" . '<' $@64 tuple_type_list '>' $@65

    '<'  shift, and go to state 359


State 257

  731 type_declaration_no_options: "variant" . '<' $@66 variant_type_list '>' $@67

    '<'  shift, and go to state 360


State 258

  654 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 361


State 259

  677 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  679                            | '$' . name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 362


State 260

  651 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 651 (structure_type_declaration)


State 261

  667 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 667 (type_declaration_no_options)


State 262

  670 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 670 (type_declaration_no_options)


State 263

  668 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 668 (type_declaration_no_options)


State 264

  669 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 669 (type_declaration_no_options)


State 265

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  732 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    $default  reduce using rule 732 (type_declaration)

    dim_list  go to state 373


State 266

  585 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 585 (single_alias)


State 267

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 . bitfield_alias_bits optional_comma $@76 "end of code block"

    "name"  shift, and go to state 375

    $default  reduce using rule 657 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 376


State 268

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 . tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 533 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 377


State 269

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 . variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 539 (variant_alias_type_list)

    variant_alias_type_list  go to state 378


State 270

  176 function_name: "operator" "is" .
  178              | "operator" "is" . "name"

    "name"  shift, and go to state 379

    $default  reduce using rule 176 (function_name)


State 271

  177 function_name: "operator" "as" .
  179              | "operator" "as" . "name"

    "name"  shift, and go to state 380

    $default  reduce using rule 177 (function_name)


State 272

  174 function_name: "operator" "delete" .

    $default  reduce using rule 174 (function_name)


State 273

  125 function_name: "operator" "+=" .

    $default  reduce using rule 125 (function_name)


State 274

  126 function_name: "operator" "-=" .

    $default  reduce using rule 126 (function_name)


State 275

  128 function_name: "operator" "/=" .

    $default  reduce using rule 128 (function_name)


State 276

  127 function_name: "operator" "*=" .

    $default  reduce using rule 127 (function_name)


State 277

  129 function_name: "operator" "%=" .

    $default  reduce using rule 129 (function_name)


State 278

  130 function_name: "operator" "&=" .

    $default  reduce using rule 130 (function_name)


State 279

  131 function_name: "operator" "|=" .

    $default  reduce using rule 131 (function_name)


State 280

  132 function_name: "operator" "^=" .

    $default  reduce using rule 132 (function_name)


State 281

  158 function_name: "operator" "<<" .

    $default  reduce using rule 158 (function_name)


State 282

  159 function_name: "operator" ">>" .

    $default  reduce using rule 159 (function_name)


State 283

  156 function_name: "operator" "++" .

    $default  reduce using rule 156 (function_name)


State 284

  157 function_name: "operator" "--" .

    $default  reduce using rule 157 (function_name)


State 285

  149 function_name: "operator" "<=" .

    $default  reduce using rule 149 (function_name)


State 286

  160 function_name: "operator" "<<=" .

    $default  reduce using rule 160 (function_name)


State 287

  161 function_name: "operator" ">>=" .

    $default  reduce using rule 161 (function_name)


State 288

  150 function_name: "operator" ">=" .

    $default  reduce using rule 150 (function_name)


State 289

  147 function_name: "operator" "==" .

    $default  reduce using rule 147 (function_name)


State 290

  148 function_name: "operator" "!=" .

    $default  reduce using rule 148 (function_name)


State 291

  175 function_name: "operator" "??" .

    $default  reduce using rule 175 (function_name)


State 292

  169 function_name: "operator" "?." .
  172              | "operator" "?." . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 169 (function_name)


State 293

  167 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 382


State 294

  173 function_name: "operator" ":=" .

    $default  reduce using rule 173 (function_name)


State 295

  162 function_name: "operator" "<<<" .

    $default  reduce using rule 162 (function_name)


State 296

  163 function_name: "operator" ">>>" .

    $default  reduce using rule 163 (function_name)


State 297

  164 function_name: "operator" "<<<=" .

    $default  reduce using rule 164 (function_name)


State 298

  165 function_name: "operator" ">>>=" .

    $default  reduce using rule 165 (function_name)


State 299

  136 function_name: "operator" "&&" .

    $default  reduce using rule 136 (function_name)


State 300

  137 function_name: "operator" "||" .

    $default  reduce using rule 137 (function_name)


State 301

  138 function_name: "operator" "^^" .

    $default  reduce using rule 138 (function_name)


State 302

  133 function_name: "operator" "&&=" .

    $default  reduce using rule 133 (function_name)


State 303

  134 function_name: "operator" "||=" .

    $default  reduce using rule 134 (function_name)


State 304

  135 function_name: "operator" "^^=" .

    $default  reduce using rule 135 (function_name)


State 305

  146 function_name: "operator" ".." .

    $default  reduce using rule 146 (function_name)


State 306

  180 function_name: "operator" '?' . "as"
  181              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 383


State 307

  152 function_name: "operator" '|' .

    $default  reduce using rule 152 (function_name)


State 308

  153 function_name: "operator" '^' .

    $default  reduce using rule 153 (function_name)


State 309

  151 function_name: "operator" '&' .

    $default  reduce using rule 151 (function_name)


State 310

  144 function_name: "operator" '<' .

    $default  reduce using rule 144 (function_name)


State 311

  145 function_name: "operator" '>' .

    $default  reduce using rule 145 (function_name)


State 312

  140 function_name: "operator" '-' .

    $default  reduce using rule 140 (function_name)


State 313

  139 function_name: "operator" '+' .

    $default  reduce using rule 139 (function_name)


State 314

  141 function_name: "operator" '*' .

    $default  reduce using rule 141 (function_name)


State 315

  142 function_name: "operator" '/' .

    $default  reduce using rule 142 (function_name)


State 316

  143 function_name: "operator" '%' .

    $default  reduce using rule 143 (function_name)


State 317

  124 function_name: "operator" '~' .

    $default  reduce using rule 124 (function_name)


State 318

  123 function_name: "operator" '!' .

    $default  reduce using rule 123 (function_name)


State 319

  168 function_name: "operator" '.' .
  170              | "operator" '.' . "name"
  171              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 384

    $default  reduce using rule 168 (function_name)


State 320

  166 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 385


State 321

  154 function_name: "++" "operator" .

    $default  reduce using rule 154 (function_name)


State 322

  155 function_name: "--" "operator" .

    $default  reduce using rule 155 (function_name)


State 323

  118 optional_function_argument_list: '(' . ')'
  119                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 386
    ')'   shift, and go to state 387
    '@'   shift, and go to state 211

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 388
    function_argument_declaration  go to state 389
    function_argument_list         go to state 390


State 324

  211 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 392


State 325

  214 expression_block: "begin of code block" . expressions "end of code block"
  215                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 239 (expressions)

    expressions  go to state 393


State 326

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 213 (function_declaration)


State 327

  643 enum_basic_type_declaration: "int" .

    $default  reduce using rule 643 (enum_basic_type_declaration)


State 328

  646 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 646 (enum_basic_type_declaration)


State 329

  649 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 330

  650 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 331

  644 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 644 (enum_basic_type_declaration)


State 332

  647 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 647 (enum_basic_type_declaration)


State 333

  645 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 645 (enum_basic_type_declaration)


State 334

  648 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 648 (enum_basic_type_declaration)


State 335

  592 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 592 (optional_enum_basic_type_declaration)


State 336

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@35 enum_list optional_comma $@36 "end of code block"

    $default  reduce using rule 593 ($@35)

    $@35  go to state 394


State 337

  600 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 395

    $default  reduce using rule 596 (optional_structure_parent)

    optional_structure_parent  go to state 396


State 338

  610 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 397

    $default  reduce using rule 606 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 398


State 339

  573 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 573 (global_let)


State 340

  567 global_variable_declaration_list: global_variable_declaration_list $@32 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 399


State 341

   99 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 99 (metadata_argument_list)


State 342

  100 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 400


State 343

  556 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 401


State 344

  555 let_variable_name_with_pos_list: "name" .
  557                                | "name" . "aka" "name"

    "aka"  shift, and go to state 402

    $default  reduce using rule 555 (let_variable_name_with_pos_list)


State 345

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  559                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  560 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  561                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  563                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 403
    ':'  shift, and go to state 404
    '&'  shift, and go to state 405

    $default  reduce using rule 553 (optional_ref)

    optional_ref  go to state 406


State 346

  575 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 575 (global_let)


State 347

   85 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 348

  675 type_declaration_no_options: "type" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 673 ($@41)

    $@41  go to state 407


State 349

  698 type_declaration_no_options: "array" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 696 ($@46)

    $@46  go to state 408


State 350

  701 type_declaration_no_options: "table" '<' . $@48 table_type_pair '>' $@49

    $default  reduce using rule 699 ($@48)

    $@48  go to state 409


State 351

  676 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 476
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 352

  704 type_declaration_no_options: "iterator" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 702 ($@50)

    $@50  go to state 485


State 353

  694 type_declaration_no_options: "smart_ptr" '<' . $@44 type_declaration '>' $@45

    $default  reduce using rule 692 ($@44)

    $@44  go to state 486


State 354

  653 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 487


State 355

  662 bitfield_type_declaration: "bitfield" '<' . $@39 bitfield_bits '>' $@40

    $default  reduce using rule 660 ($@39)

    $@39  go to state 488


State 356

  708 type_declaration_no_options: "block" '<' . $@52 type_declaration '>' $@53
  711                            | "block" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 709 ($@54)
    '>'       reduce using rule 709 ($@54)
    '('       reduce using rule 709 ($@54)
    $default  reduce using rule 706 ($@52)

    $@52  go to state 489
    $@54  go to state 490


State 357

  715 type_declaration_no_options: "function" '<' . $@56 type_declaration '>' $@57
  718                            | "function" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 716 ($@58)
    '>'       reduce using rule 716 ($@58)
    '('       reduce using rule 716 ($@58)
    $default  reduce using rule 713 ($@56)

    $@56  go to state 491
    $@58  go to state 492


State 358

  722 type_declaration_no_options: "lambda" '<' . $@60 type_declaration '>' $@61
  725                            | "lambda" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 723 ($@62)
    '>'       reduce using rule 723 ($@62)
    '('       reduce using rule 723 ($@62)
    $default  reduce using rule 720 ($@60)

    $@60  go to state 493
    $@62  go to state 494


State 359

  728 type_declaration_no_options: "tuple" '<' . $@64 tuple_type_list '>' $@65

    $default  reduce using rule 726 ($@64)

    $@64  go to state 495


State 360

  731 type_declaration_no_options: "variant" '<' . $@66 variant_type_list '>' $@67

    $default  reduce using rule 729 ($@66)

    $@66  go to state 496


State 361

  654 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 497
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 362

  677 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  679                            | '$' name_in_namespace . '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 498
    '('  shift, and go to state 499


State 363

  682 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 682 (type_declaration_no_options)


State 364

  687 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 687 (type_declaration_no_options)


State 365

  681 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 681 (type_declaration_no_options)


State 366

  689 type_declaration_no_options: type_declaration_no_options "==" . "const"
  690                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 500
    '&'      shift, and go to state 501


State 367

  695 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 695 (type_declaration_no_options)


State 368

  684 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 684 (type_declaration_no_options)


State 369

  680 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  683                            | type_declaration_no_options '-' . "const"
  685                            | type_declaration_no_options '-' . '&'
  688                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 502
    '&'      shift, and go to state 503
    '['      shift, and go to state 504
    '#'      shift, and go to state 505


State 370

  691 type_declaration_no_options: type_declaration_no_options '*' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 371

  665 dim_list: '[' . expr ']'
  672 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    ']'                               shift, and go to state 506
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 507
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 372

  686 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 686 (type_declaration_no_options)


State 373

  666 dim_list: dim_list . '[' expr ']'
  671 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 508

    '['       [reduce using rule 671 (type_declaration_no_options)]
    $default  reduce using rule 671 (type_declaration_no_options)


State 374

  733 type_declaration: type_declaration '|' . type_declaration_no_options
  734                 | type_declaration '|' . '#'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259
    '#'          shift, and go to state 509

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 510


State 375

  658 bitfield_alias_bits: "name" .

    $default  reduce using rule 658 (bitfield_alias_bits)


State 376

  659 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits . optional_comma $@76 "end of code block"

    ','  shift, and go to state 511

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 512


State 377

  534 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  535                      | tuple_alias_type_list . tuple_type "end of expression"
  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list . $@70 "end of code block"

    "type"               shift, and go to state 219
    "array"              shift, and go to state 220
    "table"              shift, and go to state 221
    "typedecl"           shift, and go to state 222
    "iterator"           shift, and go to state 223
    "smart_ptr"          shift, and go to state 224
    "bool"               shift, and go to state 225
    "void"               shift, and go to state 226
    "string"             shift, and go to state 227
    "auto"               shift, and go to state 228
    "int"                shift, and go to state 229
    "int2"               shift, and go to state 230
    "int3"               shift, and go to state 231
    "int4"               shift, and go to state 232
    "uint"               shift, and go to state 233
    "bitfield"           shift, and go to state 234
    "uint2"              shift, and go to state 235
    "uint3"              shift, and go to state 236
    "uint4"              shift, and go to state 237
    "float"              shift, and go to state 238
    "float2"             shift, and go to state 239
    "float3"             shift, and go to state 240
    "float4"             shift, and go to state 241
    "range"              shift, and go to state 242
    "urange"             shift, and go to state 243
    "range64"            shift, and go to state 244
    "urange64"           shift, and go to state 245
    "block"              shift, and go to state 246
    "int64"              shift, and go to state 247
    "uint64"             shift, and go to state 248
    "double"             shift, and go to state 249
    "function"           shift, and go to state 250
    "lambda"             shift, and go to state 251
    "int8"               shift, and go to state 252
    "uint8"              shift, and go to state 253
    "int16"              shift, and go to state 254
    "uint16"             shift, and go to state 255
    "tuple"              shift, and go to state 256
    "variant"            shift, and go to state 257
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 258
    "name"               shift, and go to state 513
    "end of expression"  shift, and go to state 514
    '$'                  shift, and go to state 259

    $default  reduce using rule 737 ($@70)

    name_in_namespace            go to state 260
    tuple_type                   go to state 515
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 516
    $@70                         go to state 517


State 378

  540 variant_alias_type_list: variant_alias_type_list . "end of expression"
  541                        | variant_alias_type_list . variant_type "end of expression"
  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list . $@73 "end of code block"

    "name"               shift, and go to state 518
    "end of expression"  shift, and go to state 519

    $default  reduce using rule 741 ($@73)

    variant_type  go to state 520
    $@73          go to state 521


State 379

  178 function_name: "operator" "is" "name" .

    $default  reduce using rule 178 (function_name)


State 380

  179 function_name: "operator" "as" "name" .

    $default  reduce using rule 179 (function_name)


State 381

  172 function_name: "operator" "?." "name" .

    $default  reduce using rule 172 (function_name)


State 382

  167 function_name: "operator" "?[" ']' .

    $default  reduce using rule 167 (function_name)


State 383

  180 function_name: "operator" '?' "as" .
  181              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 522

    $default  reduce using rule 180 (function_name)


State 384

  170 function_name: "operator" '.' "name" .
  171              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 523

    $default  reduce using rule 170 (function_name)


State 385

  166 function_name: "operator" '[' ']' .

    $default  reduce using rule 166 (function_name)


State 386

  526 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 524


State 387

  118 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 388

  525 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 525
    "var"  shift, and go to state 526

    $default  reduce using rule 289 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 527


State 389

  527 function_argument_list: function_argument_declaration .

    $default  reduce using rule 527 (function_argument_list)


State 390

  119 optional_function_argument_list: '(' function_argument_list . ')'
  528 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 528
    ')'                  shift, and go to state 529


State 391

  121 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 530


State 392

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 211 (function_declaration_header)


State 393

  214 expression_block: "begin of code block" expressions . "end of code block"
  215                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 531
    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 532
    "if"                              shift, and go to state 533
    "static_if"                       shift, and go to state 534
    "for"                             shift, and go to state 535
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "return"                          shift, and go to state 536
    "null"                            shift, and go to state 418
    "break"                           shift, and go to state 537
    "try"                             shift, and go to state 538
    "table"                           shift, and go to state 419
    "delete"                          shift, and go to state 539
    "deref"                           shift, and go to state 420
    "with"                            shift, and go to state 540
    "assume"                          shift, and go to state 541
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 423
    "continue"                        shift, and go to state 542
    "pass"                            shift, and go to state 543
    "reinterpret"                     shift, and go to state 424
    "label"                           shift, and go to state 544
    "goto"                            shift, and go to state 545
    "unsafe"                          shift, and go to state 546
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 547
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    "end of code block"               shift, and go to state 552
    "end of expression"               shift, and go to state 553
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder             go to state 460
    expr_reader                go to state 461
    expression_label           go to state 554
    expression_goto            go to state 555
    if_or_static_if            go to state 556
    expression_if_one_liner    go to state 557
    expression_if_then_else    go to state 558
    expression_for_loop        go to state 559
    expression_unsafe          go to state 560
    expression_while_loop      go to state 561
    expression_with            go to state 562
    expression_with_alias      go to state 563
    expr_call_pipe             go to state 564
    expression_any             go to state 565
    expr_keyword               go to state 566
    expression_keyword         go to state 567
    expr_pipe                  go to state 568
    name_in_namespace          go to state 463
    expression_delete          go to state 569
    expr_new                   go to state 464
    expression_break           go to state 570
    expression_continue        go to state 571
    expression_return_no_pipe  go to state 572
    expression_return          go to state 573
    expression_yield_no_pipe   go to state 574
    expression_yield           go to state 575
    expression_try_catch       go to state 576
    kwd_let                    go to state 577
    expression_let             go to state 578
    expr_cast                  go to state 465
    expr_type_decl             go to state 466
    expr_type_info             go to state 467
    block_or_lambda            go to state 468
    expr_full_block            go to state 469
    expr_numeric_const         go to state 470
    expr_assign                go to state 579
    expr_assign_pipe           go to state 580
    expr_named_call            go to state 471
    expr_method_call           go to state 472
    func_addr_expr             go to state 473
    expr_field                 go to state 474
    expr_call                  go to state 475
    expr                       go to state 581
    expr_mtag                  go to state 477
    basic_type_declaration     go to state 478
    make_decl                  go to state 479
    make_struct_decl           go to state 480
    make_tuple_call            go to state 481
    make_dim_decl              go to state 482
    make_table_decl            go to state 483
    array_comprehension        go to state 484


State 394

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 . enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 582

    $default  reduce using rule 578 (enum_list)

    enum_expression  go to state 583
    enum_list        go to state 584


State 395

  597 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 585


State 396

  600 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 600 (structure_name)


State 397

  607 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 518 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 586


State 398

  610 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list .

    $default  reduce using rule 610 (structure_declaration)


State 399

  567 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 343
    "name"  shift, and go to state 344

    let_variable_name_with_pos_list  go to state 345
    let_variable_declaration         go to state 587


State 400

  100 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 100 (metadata_argument_list)


State 401

  556 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 588
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 402

  557 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 589


State 403

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  559                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 590


State 404

  560 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  561                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 591


State 405

  554 optional_ref: '&' .

    $default  reduce using rule 554 (optional_ref)


State 406

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  564                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 592
    ":="  shift, and go to state 593
    '='   shift, and go to state 594

    copy_or_move_or_clone  go to state 595


State 407

  675 type_declaration_no_options: "type" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 596


State 408

  698 type_declaration_no_options: "array" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 597


State 409

  701 type_declaration_no_options: "table" '<' $@48 . table_type_pair '>' $@49

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    table_type_pair              go to state 598
    type_declaration_no_options  go to state 265
    type_declaration             go to state 599


State 410

  767 make_struct_decl: "struct" . '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 600


State 411

  770 make_struct_decl: "class" . '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 601


State 412

  413 expr: "true" .

    $default  reduce using rule 413 (expr)


State 413

  414 expr: "false" .

    $default  reduce using rule 414 (expr)


State 414

  268 expr_new: "new" . structure_type_declaration
  269         | "new" . structure_type_declaration '(' optional_expr_list ')'
  270         | "new" . new_type_declaration '(' use_initializer ')'
  271         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  272         | "new" . make_decl

    "struct"               shift, and go to state 410
    "class"                shift, and go to state 411
    "array"                shift, and go to state 417
    "table"                shift, and go to state 419
    "fixed_array"          shift, and go to state 425
    "default"              shift, and go to state 426
    "tuple"                shift, and go to state 428
    "variant"              shift, and go to state 429
    "::"                   shift, and go to state 58
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 450
    '<'                    shift, and go to state 602
    '['                    shift, and go to state 456

    name_in_namespace           go to state 260
    new_type_declaration        go to state 603
    structure_type_declaration  go to state 604
    make_decl                   go to state 605
    make_struct_decl            go to state 480
    make_tuple_call             go to state 481
    make_dim_decl               go to state 482
    make_table_decl             go to state 483
    array_comprehension         go to state 484


State 415

  312 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  313               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 606


State 416

  311 expr_type_decl: "type" . '<' $@15 type_declaration '>' $@16

    '<'  shift, and go to state 607


State 417

  786 make_dim_decl: "array" . "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'
  789              | "array" . "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'
  792              | "array" . "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'
  793              | "array" . '(' expr_list optional_comma ')'
  796              | "array" . '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 608
    "tuple"    shift, and go to state 609
    "variant"  shift, and go to state 610
    '<'        shift, and go to state 611
    '('        shift, and go to state 612


State 418

  407 expr: "null" .

    $default  reduce using rule 407 (expr)


State 419

  804 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  805                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  806                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 613
    '('  shift, and go to state 614


State 420

  457 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 615


State 421

  302 expr_cast: "cast" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 616


State 422

  305 expr_cast: "upcast" . '<' $@11 type_declaration_no_options '>' $@12 expr

    '<'  shift, and go to state 617


State 423

  458 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 618


State 424

  308 expr_cast: "reinterpret" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 619


State 425

  797 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  800              | "fixed_array" . '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 620
    '('  shift, and go to state 621


State 426

  776 make_struct_decl: "default" . '<' $@83 type_declaration_no_options '>' $@84 use_initializer

    '<'  shift, and go to state 622


State 427

  642 basic_type_declaration: "bitfield" .

    $default  reduce using rule 642 (basic_type_declaration)


State 428

  779 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  782                | "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 623
    '('  shift, and go to state 624


State 429

  773 make_struct_decl: "variant" . '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

    '<'  shift, and go to state 625


State 430

  459 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  460     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 626


State 431

  443 expr: "++" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 627
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 432

  444 expr: "--" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 628
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 433

  489 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 629


State 434

  490 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 630


State 435

  491 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 631


State 436

  492 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 632


State 437

  493 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 633


State 438

  495 expr_mtag: "$c" . '(' expr ')' '(' ')'
  496          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 634


State 439

  494 expr_mtag: "..." .

    $default  reduce using rule 494 (expr_mtag)


State 440

  335 expr_numeric_const: "integer constant" .

    $default  reduce using rule 335 (expr_numeric_const)


State 441

  337 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 442

  336 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 443

  338 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 444

  339 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 445

  340 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 446

  341 expr_numeric_const: "double constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 447

  251 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    '<'  shift, and go to state 635


State 448

  254 expression_keyword: "type function" . '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    '<'  shift, and go to state 636


State 449

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 637


State 450

  803 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  813 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "for"                             shift, and go to state 638
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 639
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_map_tuple          go to state 640
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    expr_map_tuple_list     go to state 641
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 451

  420 expr: '-' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 642
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 452

  419 expr: '+' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 643
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 453

  456 expr: '*' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 644
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 454

  418 expr: '~' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 645
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 455

  417 expr: '!' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 646
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 456

  783 make_dim_decl: '[' . expr_list optional_comma ']'
  811 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  812                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "for"                             shift, and go to state 647
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "iterator"                        shift, and go to state 648
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 649
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 457

  447 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 651
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 458

  320 block_or_lambda: '$' .

    $default  reduce using rule 320 (block_or_lambda)


State 459

  321 block_or_lambda: '@' .
  322                | '@' . '@'
  388 func_addr_expr: '@' . '@' func_addr_name
  391               | '@' . '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  394               | '@' . '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  504 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 652

    $default  reduce using rule 321 (block_or_lambda)


State 460

  411 expr: string_builder .

    $default  reduce using rule 411 (expr)


State 461

  410 expr: expr_reader .

    $default  reduce using rule 410 (expr)


State 462

  488 expr: expression_keyword .

    $default  reduce using rule 488 (expr)


State 463

  382 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  383                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  402 expr_call: name_in_namespace . '(' ')'
  403          | name_in_namespace . '(' make_struct_single ')'
  404          | name_in_namespace . '(' expr_list ')'
  408 expr: name_in_namespace .

    '('  shift, and go to state 653

    '('       [reduce using rule 408 (expr)]
    $default  reduce using rule 408 (expr)


State 464

  481 expr: expr_new .

    $default  reduce using rule 481 (expr)


State 465

  480 expr: expr_cast .

    $default  reduce using rule 480 (expr)


State 466

  479 expr: expr_type_decl .

    $default  reduce using rule 479 (expr)


State 467

  478 expr: expr_type_info .

    $default  reduce using rule 478 (expr)


State 468

  333 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 654


State 469

  484 expr: expr_full_block .

    $default  reduce using rule 484 (expr)


State 470

  409 expr: expr_numeric_const .

    $default  reduce using rule 409 (expr)


State 471

  483 expr: expr_named_call .

    $default  reduce using rule 483 (expr)


State 472

  482 expr: expr_method_call .

    $default  reduce using rule 482 (expr)


State 473

  454 expr: func_addr_expr .

    $default  reduce using rule 454 (expr)


State 474

  415 expr: expr_field .

    $default  reduce using rule 415 (expr)


State 475

  455 expr: expr_call .

    $default  reduce using rule 455 (expr)


State 476

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  676 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 690


State 477

  416 expr: expr_mtag .

    $default  reduce using rule 416 (expr)


State 478

  405 expr_call: basic_type_declaration . '(' ')'
  406          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 691


State 479

  412 expr: make_decl .

    $default  reduce using rule 412 (expr)


State 480

  747 make_decl: make_struct_decl .

    $default  reduce using rule 747 (make_decl)


State 481

  751 make_decl: make_tuple_call .

    $default  reduce using rule 751 (make_decl)


State 482

  748 make_decl: make_dim_decl .

    $default  reduce using rule 748 (make_decl)


State 483

  749 make_decl: make_table_decl .

    $default  reduce using rule 749 (make_decl)


State 484

  750 make_decl: array_comprehension .

    $default  reduce using rule 750 (make_decl)


State 485

  704 type_declaration_no_options: "iterator" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 692


State 486

  694 type_declaration_no_options: "smart_ptr" '<' $@44 . type_declaration '>' $@45

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 693


State 487

  653 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 694


State 488

  662 bitfield_type_declaration: "bitfield" '<' $@39 . bitfield_bits '>' $@40

    "name"  shift, and go to state 695

    bitfield_bits  go to state 696


State 489

  708 type_declaration_no_options: "block" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 697


State 490

  711 type_declaration_no_options: "block" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 698


State 491

  715 type_declaration_no_options: "function" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 699


State 492

  718 type_declaration_no_options: "function" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 700


State 493

  722 type_declaration_no_options: "lambda" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 701


State 494

  725 type_declaration_no_options: "lambda" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 702


State 495

  728 type_declaration_no_options: "tuple" '<' $@64 . tuple_type_list '>' $@65

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 513
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    tuple_type                   go to state 703
    tuple_type_list              go to state 704
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 516


State 496

  731 type_declaration_no_options: "variant" '<' $@66 . variant_type_list '>' $@67

    "name"  shift, and go to state 518

    variant_type       go to state 705
    variant_type_list  go to state 706


State 497

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  654 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 707


State 498

  679 type_declaration_no_options: '$' name_in_namespace '<' . $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 678 ($@43)

    $@43  go to state 708


State 499

  677 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 460
    expr_reader             go to state 461
    optional_expr_list      go to state 709
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 710
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 500

  689 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 689 (type_declaration_no_options)


State 501

  690 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 690 (type_declaration_no_options)


State 502

  683 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 683 (type_declaration_no_options)


State 503

  685 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 685 (type_declaration_no_options)


State 504

  680 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 711


State 505

  688 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 506

  672 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 672 (type_declaration_no_options)


State 507

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  665 dim_list: '[' expr . ']'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ']'    shift, and go to state 712


State 508

  666 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 713
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 509

  734 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 734 (type_declaration)


State 510

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  733 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    $default  reduce using rule 733 (type_declaration)

    dim_list  go to state 373


State 511

  659 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  810 optional_comma: ',' .

    "name"  shift, and go to state 714

    $default  reduce using rule 810 (optional_comma)


State 512

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma . $@76 "end of code block"

    $default  reduce using rule 745 ($@76)

    $@76  go to state 715


State 513

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"
  530 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 716

    $default  reduce using rule 260 (name_in_namespace)


State 514

  534 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 534 (tuple_alias_type_list)


State 515

  535 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 717


State 516

  529 tuple_type: type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 529 (tuple_type)


State 517

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 . "end of code block"

    "end of code block"  shift, and go to state 718


State 518

  536 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 719


State 519

  540 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 540 (variant_alias_type_list)


State 520

  541 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 720


State 521

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 . "end of code block"

    "end of code block"  shift, and go to state 721


State 522

  181 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 181 (function_name)


State 523

  171 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 171 (function_name)


State 524

  526 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 722
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 525

  287 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 287 (kwd_let_var_or_nothing)


State 526

  288 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 288 (kwd_let_var_or_nothing)


State 527

  525 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 723
    "name"  shift, and go to state 724

    variable_declaration         go to state 725
    variable_name_with_pos_list  go to state 726


State 528

  528 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 386
    '@'   shift, and go to state 211

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 388
    function_argument_declaration  go to state 727


State 529

  119 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 119 (optional_function_argument_list)


State 530

  121 optional_function_type: ':' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 121 (optional_function_type)


State 531

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 532

   75 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 728
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 533

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 534

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 535

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 723
    "name"  shift, and go to state 724

    variable_name_with_pos_list  go to state 729


State 536

  275 expression_return_no_pipe: "return" .
  276                          | "return" . expr_list
  277                          | "return" . "<-" expr_list
  279 expression_return: "return" . expr_pipe
  280                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 730
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 275 (expression_return_no_pipe)

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 731
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 732
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 734
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 537

  273 expression_break: "break" .

    $default  reduce using rule 273 (expression_break)


State 538

  286 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 735


State 539

  263 expression_delete: "delete" . expr
  264                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "explicit"                        shift, and go to state 736
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 737
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 540

   76 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 738
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 541

   77 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 739


State 542

  274 expression_continue: "continue" .

    $default  reduce using rule 274 (expression_continue)


State 543

  238 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 740


State 544

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 741


State 545

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "label"                           shift, and go to state 742
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 743
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 546

   74 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 744


State 547

  281 expression_yield_no_pipe: "yield" . expr
  282                         | "yield" . "<-" expr
  284 expression_yield: "yield" . expr_pipe
  285                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 745
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 746
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 747
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 548

  258 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 751


State 549

  256 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 752


State 550

  257 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 753


State 551

  242 expr_keyword: "keyword" . expr expression_block
  251 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '<'                               shift, and go to state 635
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 754
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 552

  214 expression_block: "begin of code block" expressions "end of code block" .
  215                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 755

    $default  reduce using rule 214 (expression_block)


State 553

  218 expression_any: "end of expression" .

    $default  reduce using rule 218 (expression_any)


State 554

  236 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 756


State 555

  237 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 757


State 556

   71 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 758
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 557

   72 expression_if_then_else: expression_if_one_liner . "if" expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 759


State 558

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 559

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 560

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 561

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 562

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 563

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 564

  259 expr_pipe: expr_call_pipe .

    $default  reduce using rule 259 (expr_pipe)


State 565

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 566

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 567

  217 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  488 expr: expression_keyword .

    '$'  shift, and go to state 458
    '@'  shift, and go to state 748

    '$'       [reduce using rule 488 (expr)]
    '@'       [reduce using rule 488 (expr)]
    $default  reduce using rule 488 (expr)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 761


State 568

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 569

  223 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 762


State 570

   69 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 763

    $default  reduce using rule 69 (expression_if_one_liner)


State 571

   70 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 764

    $default  reduce using rule 70 (expression_if_one_liner)


State 572

   67 expression_if_one_liner: expression_return_no_pipe .
  278 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 765

    $default  reduce using rule 67 (expression_if_one_liner)


State 573

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 574

   68 expression_if_one_liner: expression_yield_no_pipe .
  283 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 766

    $default  reduce using rule 68 (expression_if_one_liner)


State 575

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 576

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 577

  298 expression_let: kwd_let . optional_in_scope let_variable_declaration
  299               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 767

    $default  reduce using rule 293 (optional_in_scope)

    optional_in_scope  go to state 768


State 578

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 579

  222 expression_any: expr_assign . "end of expression"
  255 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 769
    "end of expression"  shift, and go to state 770


State 580

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 581

   66 expression_if_one_liner: expr .
  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  365 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  366                 | expr . "<-" expr_assign_pipe_right
  367                 | expr . "&=" expr_assign_pipe_right
  368                 | expr . "|=" expr_assign_pipe_right
  369                 | expr . "^=" expr_assign_pipe_right
  370                 | expr . "&&=" expr_assign_pipe_right
  371                 | expr . "||=" expr_assign_pipe_right
  372                 | expr . "^^=" expr_assign_pipe_right
  373                 | expr . "+=" expr_assign_pipe_right
  374                 | expr . "-=" expr_assign_pipe_right
  375                 | expr . "*=" expr_assign_pipe_right
  376                 | expr . "/=" expr_assign_pipe_right
  377                 | expr . "%=" expr_assign_pipe_right
  378                 | expr . "<<=" expr_assign_pipe_right
  379                 | expr . ">>=" expr_assign_pipe_right
  380                 | expr . "<<<=" expr_assign_pipe_right
  381                 | expr . ">>>=" expr_assign_pipe_right
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 655
    "as"    shift, and go to state 656
    "+="    shift, and go to state 771
    "-="    shift, and go to state 772
    "/="    shift, and go to state 773
    "*="    shift, and go to state 774
    "%="    shift, and go to state 775
    "&="    shift, and go to state 776
    "|="    shift, and go to state 777
    "^="    shift, and go to state 778
    "<<"    shift, and go to state 657
    ">>"    shift, and go to state 658
    "++"    shift, and go to state 659
    "--"    shift, and go to state 660
    "<="    shift, and go to state 661
    "<<="   shift, and go to state 779
    ">>="   shift, and go to state 780
    ">="    shift, and go to state 662
    "=="    shift, and go to state 663
    "!="    shift, and go to state 664
    "->"    shift, and go to state 665
    "<-"    shift, and go to state 781
    "??"    shift, and go to state 666
    "?."    shift, and go to state 667
    "?["    shift, and go to state 668
    "<|"    shift, and go to state 669
    "|>"    shift, and go to state 670
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 671
    ">>>"   shift, and go to state 672
    "<<<="  shift, and go to state 783
    ">>>="  shift, and go to state 784
    "&&"    shift, and go to state 673
    "||"    shift, and go to state 674
    "^^"    shift, and go to state 675
    "&&="   shift, and go to state 785
    "||="   shift, and go to state 786
    "^^="   shift, and go to state 787
    ".."    shift, and go to state 676
    '='     shift, and go to state 788
    '?'     shift, and go to state 677
    '|'     shift, and go to state 678
    '^'     shift, and go to state 679
    '&'     shift, and go to state 680
    '<'     shift, and go to state 681
    '>'     shift, and go to state 682
    '-'     shift, and go to state 683
    '+'     shift, and go to state 684
    '*'     shift, and go to state 685
    '/'     shift, and go to state 686
    '%'     shift, and go to state 687
    '.'     shift, and go to state 688
    '['     shift, and go to state 689
    '$'     shift, and go to state 458
    '@'     shift, and go to state 748

    "if"      reduce using rule 66 (expression_if_one_liner)
    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 582

  576 enum_expression: "name" .
  577                | "name" . '=' expr

    '='  shift, and go to state 790

    $default  reduce using rule 576 (enum_expression)


State 583

  579 enum_list: enum_expression .

    $default  reduce using rule 579 (enum_list)


State 584

  580 enum_list: enum_list . ',' enum_expression
  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list . optional_comma $@36 "end of code block"

    ','  shift, and go to state 791

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 792


State 585

  597 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 597 (optional_structure_parent)


State 586

  520 struct_variable_declaration_list: struct_variable_declaration_list . $@29 structure_variable_declaration "end of expression"
  522                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  607 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 793
    '['                  shift, and go to state 15

    "def"     reduce using rule 115 (optional_annotation_list)
    $default  reduce using rule 519 ($@29)

    optional_annotation_list  go to state 794
    $@29                      go to state 795


State 587

  567 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 567 (global_variable_declaration_list)


State 588

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  556 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 796


State 589

  557 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 557 (let_variable_name_with_pos_list)


State 590

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  559                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 797

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 591

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 363
    "implicit"           shift, and go to state 364
    "explicit"           shift, and go to state 365
    "=="                 shift, and go to state 366
    "<-"                 shift, and go to state 592
    "??"                 shift, and go to state 367
    ":="                 shift, and go to state 593
    "end of expression"  shift, and go to state 798
    '='                  shift, and go to state 594
    '&'                  shift, and go to state 368
    '-'                  shift, and go to state 369
    '*'                  shift, and go to state 370
    '['                  shift, and go to state 371
    '#'                  shift, and go to state 372

    copy_or_move_or_clone  go to state 799
    dim_list               go to state 373


State 592

  551 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 551 (copy_or_move_or_clone)


State 593

  552 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 552 (copy_or_move_or_clone)


State 594

  550 copy_or_move_or_clone: '=' .

    $default  reduce using rule 550 (copy_or_move_or_clone)


State 595

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  564                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 800
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 801
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 596

  675 type_declaration_no_options: "type" '<' $@41 type_declaration . '>' $@42
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 802


State 597

  698 type_declaration_no_options: "array" '<' $@46 type_declaration . '>' $@47
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 803


State 598

  701 type_declaration_no_options: "table" '<' $@48 table_type_pair . '>' $@49

    '>'  shift, and go to state 804


State 599

  663 table_type_pair: type_declaration .
  664                | type_declaration . "end of expression" type_declaration
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 805
    '|'                  shift, and go to state 374

    $default  reduce using rule 663 (table_type_pair)


State 600

  767 make_struct_decl: "struct" '<' . $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 765 ($@77)

    $@77  go to state 806


State 601

  770 make_struct_decl: "class" '<' . $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 768 ($@79)

    $@79  go to state 807


State 602

  267 new_type_declaration: '<' . $@7 type_declaration '>' $@8

    $default  reduce using rule 265 ($@7)

    $@7  go to state 808


State 603

  270 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  271         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 809


State 604

  268 expr_new: "new" structure_type_declaration .
  269         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 810

    '('       [reduce using rule 268 (expr_new)]
    $default  reduce using rule 268 (expr_new)


State 605

  272 expr_new: "new" make_decl .

    $default  reduce using rule 272 (expr_new)


State 606

  312 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  313               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 811


State 607

  311 expr_type_decl: "type" '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 309 ($@15)

    $@15  go to state 812


State 608

  786 make_dim_decl: "array" "struct" . '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 813


State 609

  789 make_dim_decl: "array" "tuple" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 814


State 610

  792 make_dim_decl: "array" "variant" . '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    '<'  shift, and go to state 815


State 611

  796 make_dim_decl: "array" '<' . $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'

    $default  reduce using rule 794 ($@93)

    $@93  go to state 816


State 612

  793 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 817
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 613

  805 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  806                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 818


State 614

  804 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 639
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_map_tuple          go to state 640
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    expr_map_tuple_list     go to state 819
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 615

  457 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 820
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 616

  302 expr_cast: "cast" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 300 ($@9)

    $@9  go to state 821


State 617

  305 expr_cast: "upcast" '<' . $@11 type_declaration_no_options '>' $@12 expr

    $default  reduce using rule 303 ($@11)

    $@11  go to state 822


State 618

  458 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 823
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 619

  308 expr_cast: "reinterpret" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 306 ($@13)

    $@13  go to state 824


State 620

  800 make_dim_decl: "fixed_array" '<' . $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    $default  reduce using rule 798 ($@95)

    $@95  go to state 825


State 621

  797 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 826
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 622

  776 make_struct_decl: "default" '<' . $@83 type_declaration_no_options '>' $@84 use_initializer

    $default  reduce using rule 774 ($@83)

    $@83  go to state 827


State 623

  782 make_tuple_call: "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 780 ($@85)

    $@85  go to state 828


State 624

  779 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 829
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 625

  773 make_struct_decl: "variant" '<' . $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

    $default  reduce using rule 771 ($@81)

    $@81  go to state 830


State 626

  459 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  460     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 831


State 627

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  443     | "++" expr .
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 443 (expr)


State 628

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  444     | "--" expr .
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 444 (expr)


State 629

  489 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 832
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 630

  490 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 833
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 631

  491 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 834
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 632

  492 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 835
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 633

  493 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 836
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 634

  495 expr_mtag: "$c" '(' . expr ')' '(' ')'
  496          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 837
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 635

  251 expression_keyword: "keyword" '<' . $@3 type_declaration_no_options_list '>' $@4 expr

    $default  reduce using rule 249 ($@3)

    $@3  go to state 838


State 636

  254 expression_keyword: "type function" '<' . $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    $default  reduce using rule 252 ($@5)

    $@5  go to state 839


State 637

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 156
    STRING_CHARACTER_ESC  shift, and go to state 157
    "end of the string"   shift, and go to state 840
    "{"                   shift, and go to state 841

    character_sequence  go to state 842


State 638

  813 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 723
    "name"  shift, and go to state 724

    variable_name_with_pos_list  go to state 843


State 639

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  777 make_map_tuple: expr . "=>" expr
  778               | expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "=>"   shift, and go to state 844
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 778 (make_map_tuple)


State 640

  801 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 801 (expr_map_tuple_list)


State 641

  802 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  803 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 845

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 846


State 642

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  420 expr: '-' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 420 (expr)


State 643

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  419 expr: '+' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 419 (expr)


State 644

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  456     | '*' expr .
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 456 (expr)


State 645

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  418 expr: '~' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 418 (expr)


State 646

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  417 expr: '!' expr .
  421     | expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 417 (expr)


State 647

  811 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 723
    "name"  shift, and go to state 724

    variable_name_with_pos_list  go to state 847


State 648

  812 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 848


State 649

  316 expr_list: expr_list . ',' expr
  783 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 850


State 650

  315 expr_list: expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 315 (expr_list)


State 651

  316 expr_list: expr_list . ',' expr
  447 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 851


State 652

  322 block_or_lambda: '@' '@' .
  388 func_addr_expr: '@' '@' . func_addr_name
  391               | '@' '@' . '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  394               | '@' '@' . '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  504 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 852
    "$c"    shift, and go to state 853
    "name"  shift, and go to state 59
    '<'     shift, and go to state 854

    $default  reduce using rule 322 (block_or_lambda)

    name_in_namespace  go to state 855
    func_addr_name     go to state 856


State 653

  382 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  383                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  402 expr_call: name_in_namespace '(' . ')'
  403          | name_in_namespace '(' . make_struct_single ')'
  404          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 857
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 858
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 859
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 860
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 861
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_fields      go to state 862
    make_struct_single      go to state 863
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 654

  333 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 864

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 865


State 655

  465 expr: expr "is" . "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr "is" . basic_type_declaration
  467     | expr "is" . "name"
  503 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 866
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 867
    "name"      shift, and go to state 868

    basic_type_declaration  go to state 869


State 656

  468 expr: expr "as" . "name"
  471     | expr "as" . "type" '<' $@25 type_declaration '>' $@26
  472     | expr "as" . basic_type_declaration
  501 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 870
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 871
    "name"      shift, and go to state 872

    basic_type_declaration  go to state 873


State 657

  421 expr: expr "<<" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 874
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 658

  422 expr: expr ">>" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 875
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 659

  445 expr: expr "++" .

    $default  reduce using rule 445 (expr)


State 660

  446 expr: expr "--" .

    $default  reduce using rule 446 (expr)


State 661

  434 expr: expr "<=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 876
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 662

  435 expr: expr ">=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 877
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 663

  432 expr: expr "==" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 878
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 664

  433 expr: expr "!=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 879
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 665

  384 expr_method_call: expr "->" . "name" '(' ')'
  385                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 880


State 666

  461 expr: expr "??" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 881
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 667

  452 expr: expr "?." . "name"
  498 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 882
    "name"  shift, and go to state 883


State 668

  450 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 884
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 669

  485 expr: expr "<|" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 885
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 670

  486 expr: expr "|>" . expr
  487     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 886
    expr_mtag               go to state 477
    basic_type_declaration  go to state 887
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 671

  423 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 888
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 672

  424 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 889
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 673

  439 expr: expr "&&" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 890
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 674

  440 expr: expr "||" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 891
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 675

  441 expr: expr "^^" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 892
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 676

  442 expr: expr ".." . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 893
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 677

  462 expr: expr '?' . expr ':' expr
  473     | expr '?' . "as" "name"
  476     | expr '?' . "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr '?' . "as" basic_type_declaration
  502 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "as"                              shift, and go to state 894
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 895
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 678

  437 expr: expr '|' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 896
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 679

  438 expr: expr '^' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 897
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 680

  436 expr: expr '&' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 898
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 681

  430 expr: expr '<' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 899
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 682

  431 expr: expr '>' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 900
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 683

  426 expr: expr '-' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 901
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 684

  425 expr: expr '+' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 902
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 685

  427 expr: expr '*' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 903
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 686

  428 expr: expr '/' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 904
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 687

  429 expr: expr '%' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 905
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 688

  395 expr_field: expr '.' . "name"
  396           | expr '.' . '.' "name"
  397           | expr '.' . "name" '(' ')'
  398           | expr '.' . "name" '(' expr_list ')'
  401           | expr '.' . $@21 error $@22
  449 expr: expr '.' . '[' expr ']'
  451     | expr '.' . "?[" expr ']'
  453     | expr '.' . "?." "name"
  497 expr_mtag: expr '.' . "$f" '(' expr ')'
  499          | expr '.' . '.' "$f" '(' expr ')'
  500          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 906
    "?["    shift, and go to state 907
    "$f"    shift, and go to state 908
    "name"  shift, and go to state 909
    '.'     shift, and go to state 910
    '['     shift, and go to state 911

    $default  reduce using rule 399 ($@21)

    $@21  go to state 912


State 689

  448 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 913
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 690

  676 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 676 (type_declaration_no_options)


State 691

  405 expr_call: basic_type_declaration '(' . ')'
  406          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 914
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 915
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 692

  704 type_declaration_no_options: "iterator" '<' $@50 type_declaration . '>' $@51
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 916


State 693

  694 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration . '>' $@45
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 917


State 694

  653 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 653 (auto_type_declaration)


State 695

  655 bitfield_bits: "name" .

    $default  reduce using rule 655 (bitfield_bits)


State 696

  656 bitfield_bits: bitfield_bits . "end of expression" "name"
  662 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits . '>' $@40

    "end of expression"  shift, and go to state 918
    '>'                  shift, and go to state 919


State 697

  708 type_declaration_no_options: "block" '<' $@52 type_declaration . '>' $@53
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 920


State 698

  711 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 921


State 699

  715 type_declaration_no_options: "function" '<' $@56 type_declaration . '>' $@57
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 922


State 700

  718 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 923


State 701

  722 type_declaration_no_options: "lambda" '<' $@60 type_declaration . '>' $@61
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 924


State 702

  725 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 925


State 703

  531 tuple_type_list: tuple_type .

    $default  reduce using rule 531 (tuple_type_list)


State 704

  532 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  728 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list . '>' $@65

    "end of expression"  shift, and go to state 926
    '>'                  shift, and go to state 927


State 705

  537 variant_type_list: variant_type .

    $default  reduce using rule 537 (variant_type_list)


State 706

  538 variant_type_list: variant_type_list . "end of expression" variant_type
  731 type_declaration_no_options: "variant" '<' $@66 variant_type_list . '>' $@67

    "end of expression"  shift, and go to state 928
    '>'                  shift, and go to state 929


State 707

  654 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 654 (auto_type_declaration)


State 708

  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    type_declaration_no_options_list  go to state 930
    name_in_namespace                 go to state 260
    basic_type_declaration            go to state 261
    structure_type_declaration        go to state 262
    auto_type_declaration             go to state 263
    bitfield_type_declaration         go to state 264
    type_declaration_no_options       go to state 265
    type_declaration                  go to state 931


State 709

  677 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 932


State 710

  244 optional_expr_list: expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 933

    $default  reduce using rule 244 (optional_expr_list)


State 711

  680 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 680 (type_declaration_no_options)


State 712

  665 dim_list: '[' expr ']' .

    $default  reduce using rule 665 (dim_list)


State 713

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  666 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ']'    shift, and go to state 934


State 714

  659 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 659 (bitfield_alias_bits)


State 715

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 . "end of code block"

    "end of code block"  shift, and go to state 935


State 716

  530 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 936


State 717

  535 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 535 (tuple_alias_type_list)


State 718

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block" .

    $default  reduce using rule 738 (tuple_alias_declaration)


State 719

  536 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 937


State 720

  541 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 541 (variant_alias_type_list)


State 721

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block" .

    $default  reduce using rule 742 (variant_alias_declaration)


State 722

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  526 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 938


State 723

  612 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 939


State 724

  611 variable_name_with_pos_list: "name" .
  613                            | "name" . "aka" "name"

    "aka"  shift, and go to state 940

    $default  reduce using rule 611 (variable_name_with_pos_list)


State 725

  525 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 525 (function_argument_declaration)


State 726

  544 variable_declaration: variable_name_with_pos_list .
  545                     | variable_name_with_pos_list . '&'
  546                     | variable_name_with_pos_list . ':' type_declaration
  547                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  548                     | variable_name_with_pos_list . copy_or_move expr
  549                     | variable_name_with_pos_list . copy_or_move expr_pipe
  614 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  615                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 941
    ','   shift, and go to state 942
    '='   shift, and go to state 943
    ':'   shift, and go to state 944
    '&'   shift, and go to state 945

    $default  reduce using rule 544 (variable_declaration)

    copy_or_move  go to state 946


State 727

  528 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 528 (function_argument_list)


State 728

   75 expression_while_loop: "while" expr . expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 655
    "as"                   shift, and go to state 656
    "<<"                   shift, and go to state 657
    ">>"                   shift, and go to state 658
    "++"                   shift, and go to state 659
    "--"                   shift, and go to state 660
    "<="                   shift, and go to state 661
    ">="                   shift, and go to state 662
    "=="                   shift, and go to state 663
    "!="                   shift, and go to state 664
    "->"                   shift, and go to state 665
    "??"                   shift, and go to state 666
    "?."                   shift, and go to state 667
    "?["                   shift, and go to state 668
    "<|"                   shift, and go to state 669
    "|>"                   shift, and go to state 670
    "<<<"                  shift, and go to state 671
    ">>>"                  shift, and go to state 672
    "&&"                   shift, and go to state 673
    "||"                   shift, and go to state 674
    "^^"                   shift, and go to state 675
    ".."                   shift, and go to state 676
    "begin of code block"  shift, and go to state 325
    '?'                    shift, and go to state 677
    '|'                    shift, and go to state 678
    '^'                    shift, and go to state 679
    '&'                    shift, and go to state 680
    '<'                    shift, and go to state 681
    '>'                    shift, and go to state 682
    '-'                    shift, and go to state 683
    '+'                    shift, and go to state 684
    '*'                    shift, and go to state 685
    '/'                    shift, and go to state 686
    '%'                    shift, and go to state 687
    '.'                    shift, and go to state 688
    '['                    shift, and go to state 689

    expression_block  go to state 947


State 729

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list expression_block
  614 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  615                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 948
    ','   shift, and go to state 942


State 730

  277 expression_return_no_pipe: "return" "<-" . expr_list
  280 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 949
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 950
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 734
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 731

  279 expression_return: "return" expr_pipe .

    $default  reduce using rule 279 (expression_return)


State 732

  276 expression_return_no_pipe: "return" expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 933

    $default  reduce using rule 276 (expression_return_no_pipe)


State 733

  255 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 769


State 734

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  315 expr_list: expr .
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 655
    "as"    shift, and go to state 656
    "+="    shift, and go to state 951
    "-="    shift, and go to state 952
    "/="    shift, and go to state 953
    "*="    shift, and go to state 954
    "%="    shift, and go to state 955
    "&="    shift, and go to state 956
    "|="    shift, and go to state 957
    "^="    shift, and go to state 958
    "<<"    shift, and go to state 657
    ">>"    shift, and go to state 658
    "++"    shift, and go to state 659
    "--"    shift, and go to state 660
    "<="    shift, and go to state 661
    "<<="   shift, and go to state 959
    ">>="   shift, and go to state 960
    ">="    shift, and go to state 662
    "=="    shift, and go to state 663
    "!="    shift, and go to state 664
    "->"    shift, and go to state 665
    "<-"    shift, and go to state 961
    "??"    shift, and go to state 666
    "?."    shift, and go to state 667
    "?["    shift, and go to state 668
    "<|"    shift, and go to state 669
    "|>"    shift, and go to state 670
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 671
    ">>>"   shift, and go to state 672
    "<<<="  shift, and go to state 962
    ">>>="  shift, and go to state 963
    "&&"    shift, and go to state 673
    "||"    shift, and go to state 674
    "^^"    shift, and go to state 675
    "&&="   shift, and go to state 964
    "||="   shift, and go to state 965
    "^^="   shift, and go to state 966
    ".."    shift, and go to state 676
    '='     shift, and go to state 967
    '?'     shift, and go to state 677
    '|'     shift, and go to state 678
    '^'     shift, and go to state 679
    '&'     shift, and go to state 680
    '<'     shift, and go to state 681
    '>'     shift, and go to state 682
    '-'     shift, and go to state 683
    '+'     shift, and go to state 684
    '*'     shift, and go to state 685
    '/'     shift, and go to state 686
    '%'     shift, and go to state 687
    '.'     shift, and go to state 688
    '['     shift, and go to state 689
    '$'     shift, and go to state 458
    '@'     shift, and go to state 748

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 315 (expr_list)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 735

  286 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 968


State 736

  264 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 969
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 737

  263 expression_delete: "delete" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 263 (expression_delete)


State 738

   76 expression_with: "with" expr . expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 655
    "as"                   shift, and go to state 656
    "<<"                   shift, and go to state 657
    ">>"                   shift, and go to state 658
    "++"                   shift, and go to state 659
    "--"                   shift, and go to state 660
    "<="                   shift, and go to state 661
    ">="                   shift, and go to state 662
    "=="                   shift, and go to state 663
    "!="                   shift, and go to state 664
    "->"                   shift, and go to state 665
    "??"                   shift, and go to state 666
    "?."                   shift, and go to state 667
    "?["                   shift, and go to state 668
    "<|"                   shift, and go to state 669
    "|>"                   shift, and go to state 670
    "<<<"                  shift, and go to state 671
    ">>>"                  shift, and go to state 672
    "&&"                   shift, and go to state 673
    "||"                   shift, and go to state 674
    "^^"                   shift, and go to state 675
    ".."                   shift, and go to state 676
    "begin of code block"  shift, and go to state 325
    '?'                    shift, and go to state 677
    '|'                    shift, and go to state 678
    '^'                    shift, and go to state 679
    '&'                    shift, and go to state 680
    '<'                    shift, and go to state 681
    '>'                    shift, and go to state 682
    '-'                    shift, and go to state 683
    '+'                    shift, and go to state 684
    '*'                    shift, and go to state 685
    '/'                    shift, and go to state 686
    '%'                    shift, and go to state 687
    '.'                    shift, and go to state 688
    '['                    shift, and go to state 689

    expression_block  go to state 970


State 739

   77 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 971


State 740

  238 expression_any: "pass" "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 741

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 972


State 742

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 973


State 743

   56 expression_goto: "goto" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 56 (expression_goto)


State 744

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 745

  282 expression_yield_no_pipe: "yield" "<-" . expr
  285 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 974
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 975
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 746

  284 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 284 (expression_yield)


State 747

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  281 expression_yield_no_pipe: "yield" expr .
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 655
    "as"    shift, and go to state 656
    "+="    shift, and go to state 951
    "-="    shift, and go to state 952
    "/="    shift, and go to state 953
    "*="    shift, and go to state 954
    "%="    shift, and go to state 955
    "&="    shift, and go to state 956
    "|="    shift, and go to state 957
    "^="    shift, and go to state 958
    "<<"    shift, and go to state 657
    ">>"    shift, and go to state 658
    "++"    shift, and go to state 659
    "--"    shift, and go to state 660
    "<="    shift, and go to state 661
    "<<="   shift, and go to state 959
    ">>="   shift, and go to state 960
    ">="    shift, and go to state 662
    "=="    shift, and go to state 663
    "!="    shift, and go to state 664
    "->"    shift, and go to state 665
    "<-"    shift, and go to state 961
    "??"    shift, and go to state 666
    "?."    shift, and go to state 667
    "?["    shift, and go to state 668
    "<|"    shift, and go to state 669
    "|>"    shift, and go to state 670
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 671
    ">>>"   shift, and go to state 672
    "<<<="  shift, and go to state 962
    ">>>="  shift, and go to state 963
    "&&"    shift, and go to state 673
    "||"    shift, and go to state 674
    "^^"    shift, and go to state 675
    "&&="   shift, and go to state 964
    "||="   shift, and go to state 965
    "^^="   shift, and go to state 966
    ".."    shift, and go to state 676
    '='     shift, and go to state 967
    '?'     shift, and go to state 677
    '|'     shift, and go to state 678
    '^'     shift, and go to state 679
    '&'     shift, and go to state 680
    '<'     shift, and go to state 681
    '>'     shift, and go to state 682
    '-'     shift, and go to state 683
    '+'     shift, and go to state 684
    '*'     shift, and go to state 685
    '/'     shift, and go to state 686
    '%'     shift, and go to state 687
    '.'     shift, and go to state 688
    '['     shift, and go to state 689
    '$'     shift, and go to state 458
    '@'     shift, and go to state 748

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 281 (expression_yield_no_pipe)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 748

  321 block_or_lambda: '@' .
  322                | '@' . '@'

    '@'  shift, and go to state 976

    $default  reduce using rule 321 (block_or_lambda)


State 749

  331 expr_block: expression_block .

    $default  reduce using rule 331 (expr_block)


State 750

  332 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 977


State 751

  258 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 752

  256 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 256 (expr_pipe)


State 753

  257 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 754

  242 expr_keyword: "keyword" expr . expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 655
    "as"                   shift, and go to state 656
    "<<"                   shift, and go to state 657
    ">>"                   shift, and go to state 658
    "++"                   shift, and go to state 659
    "--"                   shift, and go to state 660
    "<="                   shift, and go to state 661
    ">="                   shift, and go to state 662
    "=="                   shift, and go to state 663
    "!="                   shift, and go to state 664
    "->"                   shift, and go to state 665
    "??"                   shift, and go to state 666
    "?."                   shift, and go to state 667
    "?["                   shift, and go to state 668
    "<|"                   shift, and go to state 669
    "|>"                   shift, and go to state 670
    "<<<"                  shift, and go to state 671
    ">>>"                  shift, and go to state 672
    "&&"                   shift, and go to state 673
    "||"                   shift, and go to state 674
    "^^"                   shift, and go to state 675
    ".."                   shift, and go to state 676
    "begin of code block"  shift, and go to state 325
    '?'                    shift, and go to state 677
    '|'                    shift, and go to state 678
    '^'                    shift, and go to state 679
    '&'                    shift, and go to state 680
    '<'                    shift, and go to state 681
    '>'                    shift, and go to state 682
    '-'                    shift, and go to state 683
    '+'                    shift, and go to state 684
    '*'                    shift, and go to state 685
    '/'                    shift, and go to state 686
    '%'                    shift, and go to state 687
    '.'                    shift, and go to state 688
    '['                    shift, and go to state 689

    expression_block  go to state 978


State 755

  215 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 979


State 756

  236 expression_any: expression_label "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 757

  237 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 758

   71 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 655
    "as"                   shift, and go to state 656
    "<<"                   shift, and go to state 657
    ">>"                   shift, and go to state 658
    "++"                   shift, and go to state 659
    "--"                   shift, and go to state 660
    "<="                   shift, and go to state 661
    ">="                   shift, and go to state 662
    "=="                   shift, and go to state 663
    "!="                   shift, and go to state 664
    "->"                   shift, and go to state 665
    "??"                   shift, and go to state 666
    "?."                   shift, and go to state 667
    "?["                   shift, and go to state 668
    "<|"                   shift, and go to state 669
    "|>"                   shift, and go to state 670
    "<<<"                  shift, and go to state 671
    ">>>"                  shift, and go to state 672
    "&&"                   shift, and go to state 673
    "||"                   shift, and go to state 674
    "^^"                   shift, and go to state 675
    ".."                   shift, and go to state 676
    "begin of code block"  shift, and go to state 325
    '?'                    shift, and go to state 677
    '|'                    shift, and go to state 678
    '^'                    shift, and go to state 679
    '&'                    shift, and go to state 680
    '<'                    shift, and go to state 681
    '>'                    shift, and go to state 682
    '-'                    shift, and go to state 683
    '+'                    shift, and go to state 684
    '*'                    shift, and go to state 685
    '/'                    shift, and go to state 686
    '%'                    shift, and go to state 687
    '.'                    shift, and go to state 688
    '['                    shift, and go to state 689

    expression_block  go to state 980


State 759

   72 expression_if_then_else: expression_if_one_liner "if" . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 981
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 760

  334 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 982


State 761

  217 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 217 (expr_call_pipe)


State 762

  223 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 763

  230 expression_any: expression_break "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 764

  231 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 765

  278 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 278 (expression_return)


State 766

  283 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 283 (expression_yield)


State 767

  292 optional_in_scope: "inscope" .

    $default  reduce using rule 292 (optional_in_scope)


State 768

  298 expression_let: kwd_let optional_in_scope . let_variable_declaration
  299               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 343
    "name"  shift, and go to state 344
    '('     shift, and go to state 983

    tuple_expansion_variable_declaration  go to state 984
    let_variable_name_with_pos_list       go to state 345
    let_variable_declaration              go to state 985


State 769

  255 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 986


State 770

  222 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 771

  352 expr_assign: expr "+=" . expr
  373 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 991
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 992
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 772

  353 expr_assign: expr "-=" . expr
  374 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 993
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 994
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 773

  355 expr_assign: expr "/=" . expr
  376 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 995
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 996
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 774

  354 expr_assign: expr "*=" . expr
  375 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 997
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 998
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 775

  356 expr_assign: expr "%=" . expr
  377 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 999
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1000
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 776

  346 expr_assign: expr "&=" . expr
  367 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1001
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1002
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 777

  347 expr_assign: expr "|=" . expr
  368 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1003
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1004
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 778

  348 expr_assign: expr "^=" . expr
  369 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1005
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1006
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 779

  357 expr_assign: expr "<<=" . expr
  378 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1008
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 780

  358 expr_assign: expr ">>=" . expr
  379 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1009
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1010
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 781

  344 expr_assign: expr "<-" . expr
  366 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1011
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1012
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 782

  345 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1013
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 783

  359 expr_assign: expr "<<<=" . expr
  380 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1015
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 784

  360 expr_assign: expr ">>>=" . expr
  381 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1017
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 785

  349 expr_assign: expr "&&=" . expr
  370 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1018
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1019
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 786

  350 expr_assign: expr "||=" . expr
  371 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1020
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1021
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 787

  351 expr_assign: expr "^^=" . expr
  372 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1022
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1023
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 788

  343 expr_assign: expr '=' . expr
  365 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 990
    expression_keyword      go to state 567
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign_pipe_right  go to state 1024
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1025
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 789

  216 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 216 (expr_call_pipe)


State 790

  577 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1026
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 791

  580 enum_list: enum_list ',' . enum_expression
  810 optional_comma: ',' .

    "name"  shift, and go to state 582

    $default  reduce using rule 810 (optional_comma)

    enum_expression  go to state 1027


State 792

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma . $@36 "end of code block"

    $default  reduce using rule 594 ($@36)

    $@36  go to state 1028


State 793

  607 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 607 (optional_struct_variable_declaration_list)


State 794

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "def"  shift, and go to state 1029


State 795

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 211

    $default  reduce using rule 505 (optional_field_annotation)

    metadata_argument_list          go to state 212
    optional_field_annotation       go to state 1030
    structure_variable_declaration  go to state 1031


State 796

  556 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 556 (let_variable_name_with_pos_list)


State 797

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1032


State 798

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 560 (let_variable_declaration)


State 799

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 1033
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1034
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 800

  564 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 564 (let_variable_declaration)


State 801

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 655
    "as"                 shift, and go to state 656
    "+="                 shift, and go to state 951
    "-="                 shift, and go to state 952
    "/="                 shift, and go to state 953
    "*="                 shift, and go to state 954
    "%="                 shift, and go to state 955
    "&="                 shift, and go to state 956
    "|="                 shift, and go to state 957
    "^="                 shift, and go to state 958
    "<<"                 shift, and go to state 657
    ">>"                 shift, and go to state 658
    "++"                 shift, and go to state 659
    "--"                 shift, and go to state 660
    "<="                 shift, and go to state 661
    "<<="                shift, and go to state 959
    ">>="                shift, and go to state 960
    ">="                 shift, and go to state 662
    "=="                 shift, and go to state 663
    "!="                 shift, and go to state 664
    "->"                 shift, and go to state 665
    "<-"                 shift, and go to state 961
    "??"                 shift, and go to state 666
    "?."                 shift, and go to state 667
    "?["                 shift, and go to state 668
    "<|"                 shift, and go to state 669
    "|>"                 shift, and go to state 670
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 671
    ">>>"                shift, and go to state 672
    "<<<="               shift, and go to state 962
    ">>>="               shift, and go to state 963
    "&&"                 shift, and go to state 673
    "||"                 shift, and go to state 674
    "^^"                 shift, and go to state 675
    "&&="                shift, and go to state 964
    "||="                shift, and go to state 965
    "^^="                shift, and go to state 966
    ".."                 shift, and go to state 676
    "end of expression"  shift, and go to state 1035
    '='                  shift, and go to state 967
    '?'                  shift, and go to state 677
    '|'                  shift, and go to state 678
    '^'                  shift, and go to state 679
    '&'                  shift, and go to state 680
    '<'                  shift, and go to state 681
    '>'                  shift, and go to state 682
    '-'                  shift, and go to state 683
    '+'                  shift, and go to state 684
    '*'                  shift, and go to state 685
    '/'                  shift, and go to state 686
    '%'                  shift, and go to state 687
    '.'                  shift, and go to state 688
    '['                  shift, and go to state 689
    '$'                  shift, and go to state 458
    '@'                  shift, and go to state 748

    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 802

  675 type_declaration_no_options: "type" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 674 ($@42)

    $@42  go to state 1036


State 803

  698 type_declaration_no_options: "array" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 697 ($@47)

    $@47  go to state 1037


State 804

  701 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' . $@49

    $default  reduce using rule 700 ($@49)

    $@49  go to state 1038


State 805

  664 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1039


State 806

  767 make_struct_decl: "struct" '<' $@77 . type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1040


State 807

  770 make_struct_decl: "class" '<' $@79 . type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1041


State 808

  267 new_type_declaration: '<' $@7 . type_declaration '>' $@8

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1042


State 809

  270 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  271         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1044


State 810

  269 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 460
    expr_reader             go to state 461
    optional_expr_list      go to state 1045
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 710
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 811

  312 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  313               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '<'                               shift, and go to state 1046
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1047
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 812

  311 expr_type_decl: "type" '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1048


State 813

  786 make_dim_decl: "array" "struct" '<' . $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 784 ($@87)

    $@87  go to state 1049


State 814

  789 make_dim_decl: "array" "tuple" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 787 ($@89)

    $@89  go to state 1050


State 815

  792 make_dim_decl: "array" "variant" '<' . $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    $default  reduce using rule 790 ($@91)

    $@91  go to state 1051


State 816

  796 make_dim_decl: "array" '<' $@93 . type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1052


State 817

  316 expr_list: expr_list . ',' expr
  793 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1053


State 818

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  805 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  806                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 363
    "implicit"           shift, and go to state 364
    "explicit"           shift, and go to state 365
    "=="                 shift, and go to state 366
    "??"                 shift, and go to state 367
    "end of expression"  shift, and go to state 1054
    '&'                  shift, and go to state 368
    '>'                  shift, and go to state 1055
    '-'                  shift, and go to state 369
    '*'                  shift, and go to state 370
    '['                  shift, and go to state 371
    '#'                  shift, and go to state 372

    dim_list  go to state 373


State 819

  802 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  804 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 845

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1056


State 820

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  457     | "deref" '(' expr . ')'
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1057


State 821

  302 expr_cast: "cast" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1058


State 822

  305 expr_cast: "upcast" '<' $@11 . type_declaration_no_options '>' $@12 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1059


State 823

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  458     | "addr" '(' expr . ')'
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1060


State 824

  308 expr_cast: "reinterpret" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1061


State 825

  800 make_dim_decl: "fixed_array" '<' $@95 . type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1062


State 826

  316 expr_list: expr_list . ',' expr
  797 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1063


State 827

  776 make_struct_decl: "default" '<' $@83 . type_declaration_no_options '>' $@84 use_initializer

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1064


State 828

  782 make_tuple_call: "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1065


State 829

  316 expr_list: expr_list . ',' expr
  779 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1066


State 830

  773 make_struct_decl: "variant" '<' $@81 . type_declaration_no_options '>' $@82 '(' make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1067


State 831

  459 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  460     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1068
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 832

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  489 expr_mtag: "$$" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1069


State 833

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  490 expr_mtag: "$i" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1070


State 834

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$v" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1071


State 835

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$b" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1072


State 836

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$a" '(' expr . ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1073


State 837

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$c" '(' expr . ')' '(' ')'
  496          | "$c" '(' expr . ')' '(' expr_list ')'
  497          | expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1074


State 838

  251 expression_keyword: "keyword" '<' $@3 . type_declaration_no_options_list '>' $@4 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    type_declaration_no_options_list  go to state 1075
    name_in_namespace                 go to state 260
    basic_type_declaration            go to state 261
    structure_type_declaration        go to state 262
    auto_type_declaration             go to state 263
    bitfield_type_declaration         go to state 264
    type_declaration_no_options       go to state 265
    type_declaration                  go to state 931


State 839

  254 expression_keyword: "type function" '<' $@5 . type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    type_declaration_no_options_list  go to state 1076
    name_in_namespace                 go to state 260
    basic_type_declaration            go to state 261
    structure_type_declaration        go to state 262
    auto_type_declaration             go to state 263
    bitfield_type_declaration         go to state 264
    type_declaration_no_options       go to state 265
    type_declaration                  go to state 931


State 840

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 841

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1077
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 842

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 843

  614 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  615                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1078
    ','   shift, and go to state 942


State 844

  777 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1079
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 845

  802 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  810 optional_comma: ',' .

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 810 (optional_comma)

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 639
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_map_tuple          go to state 1080
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 846

  803 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1081


State 847

  614 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  615                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  811 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1082
    ','   shift, and go to state 942


State 848

  812 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 723
    "name"  shift, and go to state 724

    variable_name_with_pos_list  go to state 1083


State 849

  316 expr_list: expr_list ',' . expr
  810 optional_comma: ',' .

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 810 (optional_comma)

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1084
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 850

  783 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1085


State 851

  447 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1086


State 852

  387 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1087


State 853

  504 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1088


State 854

  391 func_addr_expr: '@' '@' '<' . $@17 type_declaration_no_options '>' $@18 func_addr_name
  394               | '@' '@' '<' . $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    ':'       reduce using rule 392 ($@19)
    '>'       reduce using rule 392 ($@19)
    '('       reduce using rule 392 ($@19)
    $default  reduce using rule 389 ($@17)

    $@17  go to state 1089
    $@19  go to state 1090


State 855

  386 func_addr_name: name_in_namespace .

    $default  reduce using rule 386 (func_addr_name)


State 856

  388 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 388 (func_addr_expr)


State 857

  756 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  757                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1091


State 858

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"
  752 make_struct_fields: "name" . copy_or_move expr
  753                   | "name" . ":=" expr

    "<-"  shift, and go to state 941
    ":="  shift, and go to state 1092
    "::"  shift, and go to state 96
    '='   shift, and go to state 943

    $default  reduce using rule 260 (name_in_namespace)

    copy_or_move  go to state 1093


State 859

  382 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  783 make_dim_decl: '[' . expr_list optional_comma ']'
  811 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  812                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "for"                             shift, and go to state 647
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "iterator"                        shift, and go to state 648
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 857
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 858
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 649
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_fields      go to state 1094
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 860

  402 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 402 (expr_call)


State 861

  316 expr_list: expr_list . ',' expr
  383 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  404 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1095
    ')'  shift, and go to state 1096


State 862

  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  760 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1097

    $default  reduce using rule 760 (make_struct_single)


State 863

  403 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1098


State 864

  330 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1099


State 865

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1100


State 866

  465 expr: expr "is" "type" . '<' $@23 type_declaration_no_options '>' $@24

    '<'  shift, and go to state 1101


State 867

  503 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1102


State 868

  467 expr: expr "is" "name" .

    $default  reduce using rule 467 (expr)


State 869

  466 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 466 (expr)


State 870

  471 expr: expr "as" "type" . '<' $@25 type_declaration '>' $@26

    '<'  shift, and go to state 1103


State 871

  501 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1104


State 872

  468 expr: expr "as" "name" .

    $default  reduce using rule 468 (expr)


State 873

  472 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 472 (expr)


State 874

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  421     | expr "<<" expr .
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '-'   shift, and go to state 683
    '+'   shift, and go to state 684
    '*'   shift, and go to state 685
    '/'   shift, and go to state 686
    '%'   shift, and go to state 687
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 421 (expr)


State 875

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  422     | expr ">>" expr .
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '-'   shift, and go to state 683
    '+'   shift, and go to state 684
    '*'   shift, and go to state 685
    '/'   shift, and go to state 686
    '%'   shift, and go to state 687
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 422 (expr)


State 876

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  434     | expr "<=" expr .
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 434 (expr)


State 877

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  435     | expr ">=" expr .
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 435 (expr)


State 878

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  432     | expr "==" expr .
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 432 (expr)


State 879

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  433     | expr "!=" expr .
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 433 (expr)


State 880

  384 expr_method_call: expr "->" "name" . '(' ')'
  385                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1105


State 881

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  461     | expr "??" expr .
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 461 (expr)


State 882

  498 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1106


State 883

  452 expr: expr "?." "name" .

    $default  reduce using rule 452 (expr)


State 884

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  450     | expr "?[" expr . ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ']'    shift, and go to state 1107


State 885

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  485     | expr "<|" expr .
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 485 (expr)


State 886

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  486     | expr "|>" expr .
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 665
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 486 (expr)


State 887

  405 expr_call: basic_type_declaration . '(' ')'
  406          | basic_type_declaration . '(' expr_list ')'
  487 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 691

    $default  reduce using rule 487 (expr)


State 888

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  423     | expr "<<<" expr .
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '-'   shift, and go to state 683
    '+'   shift, and go to state 684
    '*'   shift, and go to state 685
    '/'   shift, and go to state 686
    '%'   shift, and go to state 687
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 423 (expr)


State 889

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  424     | expr ">>>" expr .
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '-'   shift, and go to state 683
    '+'   shift, and go to state 684
    '*'   shift, and go to state 685
    '/'   shift, and go to state 686
    '%'   shift, and go to state 687
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 424 (expr)


State 890

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  439     | expr "&&" expr .
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 439 (expr)


State 891

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  440     | expr "||" expr .
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "^^"   shift, and go to state 675
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 440 (expr)


State 892

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  441     | expr "^^" expr .
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 441 (expr)


State 893

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  442     | expr ".." expr .
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    ".."  error (nonassociative)

    $default  reduce using rule 442 (expr)


State 894

  473 expr: expr '?' "as" . "name"
  476     | expr '?' "as" . "type" '<' $@27 type_declaration '>' $@28
  477     | expr '?' "as" . basic_type_declaration
  502 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1108
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 1109
    "name"      shift, and go to state 1110

    basic_type_declaration  go to state 1111


State 895

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  462     | expr '?' expr . ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    ':'    shift, and go to state 1112
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689


State 896

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  437     | expr '|' expr .
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 437 (expr)


State 897

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  438     | expr '^' expr .
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 438 (expr)


State 898

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  436     | expr '&' expr .
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 436 (expr)


State 899

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  430     | expr '<' expr .
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 430 (expr)


State 900

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  431     | expr '>' expr .
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 431 (expr)


State 901

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  426     | expr '-' expr .
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '*'   shift, and go to state 685
    '/'   shift, and go to state 686
    '%'   shift, and go to state 687
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 426 (expr)


State 902

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  425     | expr '+' expr .
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '*'   shift, and go to state 685
    '/'   shift, and go to state 686
    '%'   shift, and go to state 687
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 425 (expr)


State 903

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  427     | expr '*' expr .
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 427 (expr)


State 904

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  428     | expr '/' expr .
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 428 (expr)


State 905

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  429     | expr '%' expr .
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 655
    "as"  shift, and go to state 656
    "++"  shift, and go to state 659
    "--"  shift, and go to state 660
    "->"  shift, and go to state 665
    "??"  shift, and go to state 666
    "?."  shift, and go to state 667
    "?["  shift, and go to state 668
    "<|"  shift, and go to state 669
    "|>"  shift, and go to state 670
    '.'   shift, and go to state 688
    '['   shift, and go to state 689

    $default  reduce using rule 429 (expr)


State 906

  453 expr: expr '.' "?." . "name"
  500 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1113
    "name"  shift, and go to state 1114


State 907

  451 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1115
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 908

  497 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1116


State 909

  395 expr_field: expr '.' "name" .
  397           | expr '.' "name" . '(' ')'
  398           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1117

    '('       [reduce using rule 395 (expr_field)]
    $default  reduce using rule 395 (expr_field)


State 910

  396 expr_field: expr '.' '.' . "name"
  499 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1118
    "name"  shift, and go to state 1119


State 911

  449 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1120
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 912

  401 expr_field: expr '.' $@21 . error $@22

    error  shift, and go to state 1121


State 913

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  448     | expr '[' expr . ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ']'    shift, and go to state 1122


State 914

  405 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 405 (expr_call)


State 915

  316 expr_list: expr_list . ',' expr
  406 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 933
    ')'  shift, and go to state 1123


State 916

  704 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 703 ($@51)

    $@51  go to state 1124


State 917

  694 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 693 ($@45)

    $@45  go to state 1125


State 918

  656 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1126


State 919

  662 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' . $@40

    $default  reduce using rule 661 ($@40)

    $@40  go to state 1127


State 920

  708 type_declaration_no_options: "block" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 707 ($@53)

    $@53  go to state 1128


State 921

  711 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1129


State 922

  715 type_declaration_no_options: "function" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 714 ($@57)

    $@57  go to state 1130


State 923

  718 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1131


State 924

  722 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 721 ($@61)

    $@61  go to state 1132


State 925

  725 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1133


State 926

  532 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 513
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    tuple_type                   go to state 1134
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 516


State 927

  728 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' . $@65

    $default  reduce using rule 727 ($@65)

    $@65  go to state 1135


State 928

  538 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 518

    variant_type  go to state 1136


State 929

  731 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' . $@67

    $default  reduce using rule 730 ($@67)

    $@67  go to state 1137


State 930

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1138
    '>'                  shift, and go to state 1139


State 931

  247 type_declaration_no_options_list: type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 247 (type_declaration_no_options_list)


State 932

  677 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 677 (type_declaration_no_options)


State 933

  316 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1084
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 934

  666 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 666 (dim_list)


State 935

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block" .

    $default  reduce using rule 746 (bitfield_alias_declaration)


State 936

  530 tuple_type: "name" ':' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 530 (tuple_type)


State 937

  536 variant_type: "name" ':' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 536 (variant_type)


State 938

  526 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 526 (function_argument_declaration)


State 939

  612 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1140
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 940

  613 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1141


State 941

  543 copy_or_move: "<-" .

    $default  reduce using rule 543 (copy_or_move)


State 942

  614 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  615                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1142


State 943

  542 copy_or_move: '=' .

    $default  reduce using rule 542 (copy_or_move)


State 944

  546 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  547                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1143


State 945

  545 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 545 (variable_declaration)


State 946

  548 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  549                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expr_call_pipe          go to state 564
    expression_keyword      go to state 567
    expr_pipe               go to state 1144
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_assign             go to state 733
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1145
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 947

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 948

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1146
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 949

  280 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 280 (expression_return)


State 950

  277 expression_return_no_pipe: "return" "<-" expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 933

    $default  reduce using rule 277 (expression_return_no_pipe)


State 951

  352 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1147
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 952

  353 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1148
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 953

  355 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1149
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 954

  354 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1150
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 955

  356 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1151
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 956

  346 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1152
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 957

  347 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1153
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 958

  348 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1154
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 959

  357 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1155
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 960

  358 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1156
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 961

  344 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1157
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 962

  359 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1158
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 963

  360 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1159
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 964

  349 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1160
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 965

  350 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1161
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 966

  351 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1162
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 967

  343 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1163
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 968

  286 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 1164


State 969

  264 expression_delete: "delete" "explicit" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 264 (expression_delete)


State 970

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 971

   77 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1165
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 972

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 973

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 974

  285 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 285 (expression_yield)


State 975

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  282 expression_yield_no_pipe: "yield" "<-" expr .
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 655
    "as"    shift, and go to state 656
    "+="    shift, and go to state 951
    "-="    shift, and go to state 952
    "/="    shift, and go to state 953
    "*="    shift, and go to state 954
    "%="    shift, and go to state 955
    "&="    shift, and go to state 956
    "|="    shift, and go to state 957
    "^="    shift, and go to state 958
    "<<"    shift, and go to state 657
    ">>"    shift, and go to state 658
    "++"    shift, and go to state 659
    "--"    shift, and go to state 660
    "<="    shift, and go to state 661
    "<<="   shift, and go to state 959
    ">>="   shift, and go to state 960
    ">="    shift, and go to state 662
    "=="    shift, and go to state 663
    "!="    shift, and go to state 664
    "->"    shift, and go to state 665
    "<-"    shift, and go to state 961
    "??"    shift, and go to state 666
    "?."    shift, and go to state 667
    "?["    shift, and go to state 668
    "<|"    shift, and go to state 669
    "|>"    shift, and go to state 670
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 671
    ">>>"   shift, and go to state 672
    "<<<="  shift, and go to state 962
    ">>>="  shift, and go to state 963
    "&&"    shift, and go to state 673
    "||"    shift, and go to state 674
    "^^"    shift, and go to state 675
    "&&="   shift, and go to state 964
    "||="   shift, and go to state 965
    "^^="   shift, and go to state 966
    ".."    shift, and go to state 676
    '='     shift, and go to state 967
    '?'     shift, and go to state 677
    '|'     shift, and go to state 678
    '^'     shift, and go to state 679
    '&'     shift, and go to state 680
    '<'     shift, and go to state 681
    '>'     shift, and go to state 682
    '-'     shift, and go to state 683
    '+'     shift, and go to state 684
    '*'     shift, and go to state 685
    '/'     shift, and go to state 686
    '%'     shift, and go to state 687
    '.'     shift, and go to state 688
    '['     shift, and go to state 689
    '$'     shift, and go to state 458
    '@'     shift, and go to state 748

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 282 (expression_yield_no_pipe)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 976

  322 block_or_lambda: '@' '@' .

    $default  reduce using rule 322 (block_or_lambda)


State 977

  332 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 864

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1166


State 978

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 979

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1167


State 980

   71 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1168
    "elif"         shift, and go to state 1169
    "static_elif"  shift, and go to state 1170

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1171
    expression_else      go to state 1172


State 981

   72 expression_if_then_else: expression_if_one_liner "if" expr . expression_else_one_liner "end of expression"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1173
    "is"    shift, and go to state 655
    "as"    shift, and go to state 656
    "<<"    shift, and go to state 657
    ">>"    shift, and go to state 658
    "++"    shift, and go to state 659
    "--"    shift, and go to state 660
    "<="    shift, and go to state 661
    ">="    shift, and go to state 662
    "=="    shift, and go to state 663
    "!="    shift, and go to state 664
    "->"    shift, and go to state 665
    "??"    shift, and go to state 666
    "?."    shift, and go to state 667
    "?["    shift, and go to state 668
    "<|"    shift, and go to state 669
    "|>"    shift, and go to state 670
    "<<<"   shift, and go to state 671
    ">>>"   shift, and go to state 672
    "&&"    shift, and go to state 673
    "||"    shift, and go to state 674
    "^^"    shift, and go to state 675
    ".."    shift, and go to state 676
    '?'     shift, and go to state 677
    '|'     shift, and go to state 678
    '^'     shift, and go to state 679
    '&'     shift, and go to state 680
    '<'     shift, and go to state 681
    '>'     shift, and go to state 682
    '-'     shift, and go to state 683
    '+'     shift, and go to state 684
    '*'     shift, and go to state 685
    '/'     shift, and go to state 686
    '%'     shift, and go to state 687
    '.'     shift, and go to state 688
    '['     shift, and go to state 689

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1174


State 982

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 864

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1175


State 983

  296 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1176

    tuple_expansion  go to state 1177


State 984

  299 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 299 (expression_let)


State 985

  298 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 298 (expression_let)


State 986

  255 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 255 (expr_pipe)


State 987

  363 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 1178


State 988

  361 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 1179


State 989

  362 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 325
    '$'                    shift, and go to state 458
    '@'                    shift, and go to state 748

    expression_block  go to state 749
    block_or_lambda   go to state 750
    expr_block        go to state 1180


State 990

  364 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 364 (expr_assign_pipe_right)


State 991

  373 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 992

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "+=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 993

  374 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 994

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "-=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 995

  376 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 996

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "/=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 997

  375 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 998

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "*=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 999

  377 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1000

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "%=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1001

  367 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 367 (expr_assign_pipe)


State 1002

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr "&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1003

  368 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 368 (expr_assign_pipe)


State 1004

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr "|=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1005

  369 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 1006

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr "^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1007

  378 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1008

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1009

  379 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1010

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr ">>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1011

  366 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 366 (expr_assign_pipe)


State 1012

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  344 expr_assign: expr "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 344 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1013

  345 expr_assign: expr ":=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 345 (expr_assign)


State 1014

  380 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1015

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "<<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1016

  381 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1017

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr ">>>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1018

  370 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 1019

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr "&&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1020

  371 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 1021

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "||=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1022

  372 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 1023

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "^^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1024

  365 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 365 (expr_assign_pipe)


State 1025

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    '$'    shift, and go to state 458
    '@'    shift, and go to state 748

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1026

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  577 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 577 (enum_expression)


State 1027

  580 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 580 (enum_list)


State 1028

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 . "end of code block"

    "end of code block"  shift, and go to state 1181


State 1029

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "public"   shift, and go to state 1182
    "private"  shift, and go to state 1183

    $default  reduce using rule 512 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1184


State 1030

  517 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1185

    $default  reduce using rule 515 (optional_static_member_variable)

    optional_static_member_variable  go to state 1186


State 1031

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1187


State 1032

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 559 (let_variable_name_with_pos_list)


State 1033

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 562 (let_variable_declaration)


State 1034

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 655
    "as"                 shift, and go to state 656
    "+="                 shift, and go to state 951
    "-="                 shift, and go to state 952
    "/="                 shift, and go to state 953
    "*="                 shift, and go to state 954
    "%="                 shift, and go to state 955
    "&="                 shift, and go to state 956
    "|="                 shift, and go to state 957
    "^="                 shift, and go to state 958
    "<<"                 shift, and go to state 657
    ">>"                 shift, and go to state 658
    "++"                 shift, and go to state 659
    "--"                 shift, and go to state 660
    "<="                 shift, and go to state 661
    "<<="                shift, and go to state 959
    ">>="                shift, and go to state 960
    ">="                 shift, and go to state 662
    "=="                 shift, and go to state 663
    "!="                 shift, and go to state 664
    "->"                 shift, and go to state 665
    "<-"                 shift, and go to state 961
    "??"                 shift, and go to state 666
    "?."                 shift, and go to state 667
    "?["                 shift, and go to state 668
    "<|"                 shift, and go to state 669
    "|>"                 shift, and go to state 670
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 671
    ">>>"                shift, and go to state 672
    "<<<="               shift, and go to state 962
    ">>>="               shift, and go to state 963
    "&&"                 shift, and go to state 673
    "||"                 shift, and go to state 674
    "^^"                 shift, and go to state 675
    "&&="                shift, and go to state 964
    "||="                shift, and go to state 965
    "^^="                shift, and go to state 966
    ".."                 shift, and go to state 676
    "end of expression"  shift, and go to state 1188
    '='                  shift, and go to state 967
    '?'                  shift, and go to state 677
    '|'                  shift, and go to state 678
    '^'                  shift, and go to state 679
    '&'                  shift, and go to state 680
    '<'                  shift, and go to state 681
    '>'                  shift, and go to state 682
    '-'                  shift, and go to state 683
    '+'                  shift, and go to state 684
    '*'                  shift, and go to state 685
    '/'                  shift, and go to state 686
    '%'                  shift, and go to state 687
    '.'                  shift, and go to state 688
    '['                  shift, and go to state 689
    '$'                  shift, and go to state 458
    '@'                  shift, and go to state 748

    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1035

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 563 (let_variable_declaration)


State 1036

  675 type_declaration_no_options: "type" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 675 (type_declaration_no_options)


State 1037

  698 type_declaration_no_options: "array" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1038

  701 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' $@49 .

    $default  reduce using rule 701 (type_declaration_no_options)


State 1039

  664 table_type_pair: type_declaration "end of expression" type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 664 (table_type_pair)


State 1040

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options . '>' $@78 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1189
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1041

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options . '>' $@80 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1190
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1042

  267 new_type_declaration: '<' $@7 type_declaration . '>' $@8
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1191


State 1043

  764 use_initializer: "uninitialized" .

    $default  reduce using rule 764 (use_initializer)


State 1044

  270 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  271         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192
    ')'     shift, and go to state 1193

    make_struct_fields  go to state 862
    make_struct_single  go to state 1194


State 1045

  269 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1195


State 1046

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1196


State 1047

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1197


State 1048

  311 expr_type_decl: "type" '<' $@15 type_declaration . '>' $@16
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1198


State 1049

  786 make_dim_decl: "array" "struct" '<' $@87 . type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1199


State 1050

  789 make_dim_decl: "array" "tuple" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1200


State 1051

  792 make_dim_decl: "array" "variant" '<' $@91 . type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1201


State 1052

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options . '>' $@94 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1202
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1053

  793 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1203


State 1054

  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1204


State 1055

  805 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1205


State 1056

  804 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1206


State 1057

  457 expr: "deref" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 1058

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options . '>' $@10 expr
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1207
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1059

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options . '>' $@12 expr
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1208
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1060

  458 expr: "addr" '(' expr ')' .

    $default  reduce using rule 458 (expr)


State 1061

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options . '>' $@14 expr
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1209
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1062

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options . '>' $@96 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1210
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1063

  797 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1211


State 1064

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options . '>' $@84 use_initializer

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1212
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1065

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1213
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1066

  779 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1214


State 1067

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options . '>' $@82 '(' make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1215
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1068

  459 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  460     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 864

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1216


State 1069

  489 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1070

  490 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1071

  491 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1072

  492 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1073

  493 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1074

  495 expr_mtag: "$c" '(' expr ')' . '(' ')'
  496          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1217


State 1075

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list . '>' $@4 expr

    "end of expression"  shift, and go to state 1138
    '>'                  shift, and go to state 1218


State 1076

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list . '>' $@6 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1138
    '>'                  shift, and go to state 1219


State 1077

   30 string_builder_body: string_builder_body "{" expr . "}"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    "}"    shift, and go to state 1220
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689


State 1078

  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1221
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1079

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  777 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 777 (make_map_tuple)


State 1080

  802 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 802 (expr_map_tuple_list)


State 1081

  803 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 803 (make_table_decl)


State 1082

  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1222
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1083

  614 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  615                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1223
    ','   shift, and go to state 942


State 1084

  316 expr_list: expr_list ',' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 316 (expr_list)


State 1085

  783 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 783 (make_dim_decl)


State 1086

  447 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 447 (expr)


State 1087

  387 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1224
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1088

  504 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1225
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1089

  391 func_addr_expr: '@' '@' '<' $@17 . type_declaration_no_options '>' $@18 func_addr_name

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1226


State 1090

  394 func_addr_expr: '@' '@' '<' $@19 . optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1227


State 1091

  756 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  757                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1228
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1092

  753 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1229
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1093

  752 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1230
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1094

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1097
    ']'  shift, and go to state 1231


State 1095

  316 expr_list: expr_list ',' . expr
  383 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 1232
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1084
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1096

  404 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 404 (expr_call)


State 1097

  754 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  755                   | make_struct_fields ',' . "name" ":=" expr
  758                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1233
    "name"  shift, and go to state 1234


State 1098

  403 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 403 (expr_call)


State 1099

  330 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1235
    ":="  shift, and go to state 1236
    '='   shift, and go to state 1237
    '&'   shift, and go to state 1238

    capture_entry  go to state 1239
    capture_list   go to state 1240


State 1100

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1241


State 1101

  465 expr: expr "is" "type" '<' . $@23 type_declaration_no_options '>' $@24

    $default  reduce using rule 463 ($@23)

    $@23  go to state 1242


State 1102

  503 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1243
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1103

  471 expr: expr "as" "type" '<' . $@25 type_declaration '>' $@26

    $default  reduce using rule 469 ($@25)

    $@25  go to state 1244


State 1104

  501 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1245
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1105

  384 expr_method_call: expr "->" "name" '(' . ')'
  385                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1246
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1247
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1106

  498 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1248
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1107

  450 expr: expr "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 1108

  476 expr: expr '?' "as" "type" . '<' $@27 type_declaration '>' $@28

    '<'  shift, and go to state 1249


State 1109

  502 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1250


State 1110

  473 expr: expr '?' "as" "name" .

    $default  reduce using rule 473 (expr)


State 1111

  477 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 477 (expr)


State 1112

  462 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1251
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1113

  500 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1252


State 1114

  453 expr: expr '.' "?." "name" .

    $default  reduce using rule 453 (expr)


State 1115

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  451     | expr '.' "?[" expr . ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ']'    shift, and go to state 1253


State 1116

  497 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1254
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1117

  397 expr_field: expr '.' "name" '(' . ')'
  398           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1255
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1256
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1118

  499 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1257


State 1119

  396 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 396 (expr_field)


State 1120

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  449     | expr '.' '[' expr . ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ']'    shift, and go to state 1258


State 1121

  401 expr_field: expr '.' $@21 error . $@22

    $default  reduce using rule 400 ($@22)

    $@22  go to state 1259


State 1122

  448 expr: expr '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1123

  406 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 406 (expr_call)


State 1124

  704 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 704 (type_declaration_no_options)


State 1125

  694 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 694 (type_declaration_no_options)


State 1126

  656 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 656 (bitfield_bits)


State 1127

  662 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40 .

    $default  reduce using rule 662 (bitfield_type_declaration)


State 1128

  708 type_declaration_no_options: "block" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 708 (type_declaration_no_options)


State 1129

  711 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 710 ($@55)

    $@55  go to state 1260


State 1130

  715 type_declaration_no_options: "function" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 715 (type_declaration_no_options)


State 1131

  718 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 717 ($@59)

    $@59  go to state 1261


State 1132

  722 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 722 (type_declaration_no_options)


State 1133

  725 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 724 ($@63)

    $@63  go to state 1262


State 1134

  532 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 532 (tuple_type_list)


State 1135

  728 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' $@65 .

    $default  reduce using rule 728 (type_declaration_no_options)


State 1136

  538 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 538 (variant_type_list)


State 1137

  731 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' $@67 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1138

  248 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1263


State 1139

  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1264


State 1140

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  612 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1265


State 1141

  613 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 613 (variable_name_with_pos_list)


State 1142

  614 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  615                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1266

    $default  reduce using rule 614 (variable_name_with_pos_list)


State 1143

  546 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  547                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 941
    '='   shift, and go to state 943
    '|'   shift, and go to state 374

    $default  reduce using rule 546 (variable_declaration)

    copy_or_move  go to state 1267


State 1144

  549 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 549 (variable_declaration)


State 1145

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr .
  343            | expr . '=' expr
  344            | expr . "<-" expr
  345            | expr . ":=" expr
  346            | expr . "&=" expr
  347            | expr . "|=" expr
  348            | expr . "^=" expr
  349            | expr . "&&=" expr
  350            | expr . "||=" expr
  351            | expr . "^^=" expr
  352            | expr . "+=" expr
  353            | expr . "-=" expr
  354            | expr . "*=" expr
  355            | expr . "/=" expr
  356            | expr . "%=" expr
  357            | expr . "<<=" expr
  358            | expr . ">>=" expr
  359            | expr . "<<<=" expr
  360            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  548 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 655
    "as"    shift, and go to state 656
    "+="    shift, and go to state 951
    "-="    shift, and go to state 952
    "/="    shift, and go to state 953
    "*="    shift, and go to state 954
    "%="    shift, and go to state 955
    "&="    shift, and go to state 956
    "|="    shift, and go to state 957
    "^="    shift, and go to state 958
    "<<"    shift, and go to state 657
    ">>"    shift, and go to state 658
    "++"    shift, and go to state 659
    "--"    shift, and go to state 660
    "<="    shift, and go to state 661
    "<<="   shift, and go to state 959
    ">>="   shift, and go to state 960
    ">="    shift, and go to state 662
    "=="    shift, and go to state 663
    "!="    shift, and go to state 664
    "->"    shift, and go to state 665
    "<-"    shift, and go to state 961
    "??"    shift, and go to state 666
    "?."    shift, and go to state 667
    "?["    shift, and go to state 668
    "<|"    shift, and go to state 669
    "|>"    shift, and go to state 670
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 671
    ">>>"   shift, and go to state 672
    "<<<="  shift, and go to state 962
    ">>>="  shift, and go to state 963
    "&&"    shift, and go to state 673
    "||"    shift, and go to state 674
    "^^"    shift, and go to state 675
    "&&="   shift, and go to state 964
    "||="   shift, and go to state 965
    "^^="   shift, and go to state 966
    ".."    shift, and go to state 676
    '='     shift, and go to state 967
    '?'     shift, and go to state 677
    '|'     shift, and go to state 678
    '^'     shift, and go to state 679
    '&'     shift, and go to state 680
    '<'     shift, and go to state 681
    '>'     shift, and go to state 682
    '-'     shift, and go to state 683
    '+'     shift, and go to state 684
    '*'     shift, and go to state 685
    '/'     shift, and go to state 686
    '%'     shift, and go to state 687
    '.'     shift, and go to state 688
    '['     shift, and go to state 689
    '$'     shift, and go to state 458
    '@'     shift, and go to state 748

    " <|"     reduce using rule 342 (expr_assign)
    $default  reduce using rule 548 (variable_declaration)

    block_or_lambda                go to state 760
    expr_full_block_assumed_piped  go to state 789


State 1146

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . expression_block
  316 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 325
    ','                    shift, and go to state 933

    expression_block  go to state 1268


State 1147

  352 expr_assign: expr "+=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 352 (expr_assign)


State 1148

  353 expr_assign: expr "-=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 353 (expr_assign)


State 1149

  355 expr_assign: expr "/=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 355 (expr_assign)


State 1150

  354 expr_assign: expr "*=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 354 (expr_assign)


State 1151

  356 expr_assign: expr "%=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 356 (expr_assign)


State 1152

  346 expr_assign: expr "&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 346 (expr_assign)


State 1153

  347 expr_assign: expr "|=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 347 (expr_assign)


State 1154

  348 expr_assign: expr "^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 348 (expr_assign)


State 1155

  357 expr_assign: expr "<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 357 (expr_assign)


State 1156

  358 expr_assign: expr ">>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 358 (expr_assign)


State 1157

  344 expr_assign: expr "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 344 (expr_assign)


State 1158

  359 expr_assign: expr "<<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 359 (expr_assign)


State 1159

  360 expr_assign: expr ">>>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 360 (expr_assign)


State 1160

  349 expr_assign: expr "&&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 349 (expr_assign)


State 1161

  350 expr_assign: expr "||=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 350 (expr_assign)


State 1162

  351 expr_assign: expr "^^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 351 (expr_assign)


State 1163

  343 expr_assign: expr '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 343 (expr_assign)


State 1164

  286 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 286 (expression_try_catch)


State 1165

   77 expression_with_alias: "assume" "name" '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 77 (expression_with_alias)


State 1166

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1269


State 1167

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 531
    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 532
    "if"                              shift, and go to state 533
    "static_if"                       shift, and go to state 534
    "for"                             shift, and go to state 535
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "return"                          shift, and go to state 536
    "null"                            shift, and go to state 418
    "break"                           shift, and go to state 537
    "try"                             shift, and go to state 538
    "table"                           shift, and go to state 419
    "delete"                          shift, and go to state 539
    "deref"                           shift, and go to state 420
    "with"                            shift, and go to state 540
    "assume"                          shift, and go to state 541
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 423
    "continue"                        shift, and go to state 542
    "pass"                            shift, and go to state 543
    "reinterpret"                     shift, and go to state 424
    "label"                           shift, and go to state 544
    "goto"                            shift, and go to state 545
    "unsafe"                          shift, and go to state 546
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 547
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "$ <|"                            shift, and go to state 548
    "@ <|"                            shift, and go to state 549
    "@@ <|"                           shift, and go to state 550
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 551
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    "end of code block"               shift, and go to state 1270
    "end of expression"               shift, and go to state 553
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder             go to state 460
    expr_reader                go to state 461
    expression_label           go to state 554
    expression_goto            go to state 555
    if_or_static_if            go to state 556
    expression_if_one_liner    go to state 557
    expression_if_then_else    go to state 558
    expression_for_loop        go to state 559
    expression_unsafe          go to state 560
    expression_while_loop      go to state 561
    expression_with            go to state 562
    expression_with_alias      go to state 563
    expr_call_pipe             go to state 564
    expression_any             go to state 565
    expr_keyword               go to state 566
    expression_keyword         go to state 567
    expr_pipe                  go to state 568
    name_in_namespace          go to state 463
    expression_delete          go to state 569
    expr_new                   go to state 464
    expression_break           go to state 570
    expression_continue        go to state 571
    expression_return_no_pipe  go to state 572
    expression_return          go to state 573
    expression_yield_no_pipe   go to state 574
    expression_yield           go to state 575
    expression_try_catch       go to state 576
    kwd_let                    go to state 577
    expression_let             go to state 578
    expr_cast                  go to state 465
    expr_type_decl             go to state 466
    expr_type_info             go to state 467
    block_or_lambda            go to state 468
    expr_full_block            go to state 469
    expr_numeric_const         go to state 470
    expr_assign                go to state 579
    expr_assign_pipe           go to state 580
    expr_named_call            go to state 471
    expr_method_call           go to state 472
    func_addr_expr             go to state 473
    expr_field                 go to state 474
    expr_call                  go to state 475
    expr                       go to state 581
    expr_mtag                  go to state 477
    basic_type_declaration     go to state 478
    make_decl                  go to state 479
    make_struct_decl           go to state 480
    make_tuple_call            go to state 481
    make_dim_decl              go to state 482
    make_table_decl            go to state 483
    array_comprehension        go to state 484


State 1168

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 1271


State 1169

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1170

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1171

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1272
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1172

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 71 (expression_if_then_else)


State 1173

   65 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "return"                          shift, and go to state 1273
    "null"                            shift, and go to state 418
    "break"                           shift, and go to state 537
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "continue"                        shift, and go to state 542
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 1274
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder             go to state 460
    expr_reader                go to state 461
    expression_if_one_liner    go to state 1275
    expression_keyword         go to state 462
    name_in_namespace          go to state 463
    expr_new                   go to state 464
    expression_break           go to state 1276
    expression_continue        go to state 1277
    expression_return_no_pipe  go to state 1278
    expression_yield_no_pipe   go to state 1279
    expr_cast                  go to state 465
    expr_type_decl             go to state 466
    expr_type_info             go to state 467
    block_or_lambda            go to state 468
    expr_full_block            go to state 469
    expr_numeric_const         go to state 470
    expr_named_call            go to state 471
    expr_method_call           go to state 472
    func_addr_expr             go to state 473
    expr_field                 go to state 474
    expr_call                  go to state 475
    expr                       go to state 1280
    expr_mtag                  go to state 477
    basic_type_declaration     go to state 478
    make_decl                  go to state 479
    make_struct_decl           go to state 480
    make_tuple_call            go to state 481
    make_dim_decl              go to state 482
    make_table_decl            go to state 483
    array_comprehension        go to state 484


State 1174

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1281


State 1175

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 323

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1282


State 1176

  294 tuple_expansion: "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1177

  295 tuple_expansion: tuple_expansion . ',' "name"
  296 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1283
    ')'  shift, and go to state 1284


State 1178

  363 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 363 (expr_assign_pipe_right)


State 1179

  361 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 361 (expr_assign_pipe_right)


State 1180

  362 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 362 (expr_assign_pipe_right)


State 1181

  595 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block" .

    $default  reduce using rule 595 (enum_declaration)


State 1182

  513 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 513 (optional_public_or_private_member_variable)


State 1183

  514 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 514 (optional_public_or_private_member_variable)


State 1184

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@30 function_declaration_header "end of expression"
  524                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "abstract"  shift, and go to state 1285
    "static"    shift, and go to state 1185

    $default  reduce using rule 515 (optional_static_member_variable)

    optional_static_member_variable  go to state 1286


State 1185

  516 optional_static_member_variable: "static" .

    $default  reduce using rule 516 (optional_static_member_variable)


State 1186

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1287
    "sealed"    shift, and go to state 1288

    $default  reduce using rule 507 (optional_override)

    optional_override  go to state 1289


State 1187

  520 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression" .

    $default  reduce using rule 520 (struct_variable_declaration_list)


State 1188

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 561 (let_variable_declaration)


State 1189

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' . $@78 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 766 ($@78)

    $@78  go to state 1290


State 1190

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' . $@80 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 769 ($@80)

    $@80  go to state 1291


State 1191

  267 new_type_declaration: '<' $@7 type_declaration '>' . $@8

    $default  reduce using rule 266 ($@8)

    $@8  go to state 1292


State 1192

  752 make_struct_fields: "name" . copy_or_move expr
  753                   | "name" . ":=" expr

    "<-"  shift, and go to state 941
    ":="  shift, and go to state 1092
    '='   shift, and go to state 943

    copy_or_move  go to state 1093


State 1193

  270 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 270 (expr_new)


State 1194

  271 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1293


State 1195

  269 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 269 (expr_new)


State 1196

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1294
    '>'                  shift, and go to state 1295


State 1197

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 312 (expr_type_info)


State 1198

  311 expr_type_decl: "type" '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 310 ($@16)

    $@16  go to state 1296


State 1199

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options . '>' $@88 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1297
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1200

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1298
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1201

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options . '>' $@92 '(' make_struct_dim ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1299
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1202

  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' . $@94 '(' expr_list optional_comma ')'

    $default  reduce using rule 795 ($@94)

    $@94  go to state 1300


State 1203

  793 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 793 (make_dim_decl)


State 1204

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"
  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1301
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1205

  805 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 639
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_map_tuple          go to state 640
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    expr_map_tuple_list     go to state 1302
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1206

  804 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 804 (make_table_decl)


State 1207

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 301 ($@10)

    $@10  go to state 1303


State 1208

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' . $@12 expr

    $default  reduce using rule 304 ($@12)

    $@12  go to state 1304


State 1209

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 307 ($@14)

    $@14  go to state 1305


State 1210

  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' . $@96 '(' expr_list optional_comma ')'

    $default  reduce using rule 799 ($@96)

    $@96  go to state 1306


State 1211

  797 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 797 (make_dim_decl)


State 1212

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' . $@84 use_initializer

    $default  reduce using rule 775 ($@84)

    $@84  go to state 1307


State 1213

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 781 ($@86)

    $@86  go to state 1308


State 1214

  779 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 779 (make_tuple_call)


State 1215

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' . $@82 '(' make_struct_dim ')'

    $default  reduce using rule 772 ($@82)

    $@82  go to state 1309


State 1216

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1310


State 1217

  495 expr_mtag: "$c" '(' expr ')' '(' . ')'
  496          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1311
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1312
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1218

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' . $@4 expr

    $default  reduce using rule 250 ($@4)

    $@4  go to state 1313


State 1219

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' . $@6 optional_expr_list_in_braces

    $default  reduce using rule 253 ($@6)

    $@6  go to state 1314


State 1220

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1221

  316 expr_list: expr_list . ',' expr
  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1315
    ','                  shift, and go to state 933


State 1222

  316 expr_list: expr_list . ',' expr
  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1316
    ','                  shift, and go to state 933


State 1223

  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1317
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1224

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  387 func_addr_name: "$i" '(' expr . ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1318


State 1225

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  504          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1319


State 1226

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options . '>' $@18 func_addr_name
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1320
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1227

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list . optional_function_type '>' $@20 func_addr_name

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1321


State 1228

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  757                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1322


State 1229

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  753 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 753 (make_struct_fields)


State 1230

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  752 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 752 (make_struct_fields)


State 1231

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1323


State 1232

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  783 make_dim_decl: '[' . expr_list optional_comma ']'
  811 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  812                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "for"                             shift, and go to state 647
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "iterator"                        shift, and go to state 648
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 857
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 858
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 649
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_fields      go to state 1324
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1233

  758 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1325


State 1234

  754 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  755                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 941
    ":="  shift, and go to state 1326
    '='   shift, and go to state 943

    copy_or_move  go to state 1327


State 1235

  325 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1328


State 1236

  326 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1329


State 1237

  324 capture_entry: '=' . "name"

    "name"  shift, and go to state 1330


State 1238

  323 capture_entry: '&' . "name"

    "name"  shift, and go to state 1331


State 1239

  327 capture_list: capture_entry .

    $default  reduce using rule 327 (capture_list)


State 1240

  328 capture_list: capture_list . ',' capture_entry
  330 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1332
    ']'  shift, and go to state 1333


State 1241

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1334
    "begin of code block"  shift, and go to state 325

    expression_block       go to state 1335
    block_or_simple_block  go to state 1336


State 1242

  465 expr: expr "is" "type" '<' $@23 . type_declaration_no_options '>' $@24

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1337


State 1243

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  503          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1338


State 1244

  471 expr: expr "as" "type" '<' $@25 . type_declaration '>' $@26

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1339


State 1245

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  501          | expr "as" "$f" '(' expr . ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1340


State 1246

  384 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 384 (expr_method_call)


State 1247

  316 expr_list: expr_list . ',' expr
  385 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 933
    ')'  shift, and go to state 1341


State 1248

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  498          | expr "?." "$f" '(' expr . ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1342


State 1249

  476 expr: expr '?' "as" "type" '<' . $@27 type_declaration '>' $@28

    $default  reduce using rule 474 ($@27)

    $@27  go to state 1343


State 1250

  502 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1344
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1251

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  462     | expr '?' expr ':' expr .
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 462 (expr)


State 1252

  500 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1345
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1253

  451 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 451 (expr)


State 1254

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr '.' "$f" '(' expr . ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1346


State 1255

  397 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 397 (expr_field)


State 1256

  316 expr_list: expr_list . ',' expr
  398 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 933
    ')'  shift, and go to state 1347


State 1257

  499 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1348
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1258

  449 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 449 (expr)


State 1259

  401 expr_field: expr '.' $@21 error $@22 .

    $default  reduce using rule 401 (expr_field)


State 1260

  711 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 711 (type_declaration_no_options)


State 1261

  718 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 718 (type_declaration_no_options)


State 1262

  725 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1263

  248 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374

    $default  reduce using rule 248 (type_declaration_no_options_list)


State 1264

  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 460
    expr_reader             go to state 461
    optional_expr_list      go to state 1349
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 710
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1265

  612 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 612 (variable_name_with_pos_list)


State 1266

  615 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1350


State 1267

  547 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1351
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1268

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1269

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1352


State 1270

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 215 (expression_block)


State 1271

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1272

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 655
    "as"                   shift, and go to state 656
    "<<"                   shift, and go to state 657
    ">>"                   shift, and go to state 658
    "++"                   shift, and go to state 659
    "--"                   shift, and go to state 660
    "<="                   shift, and go to state 661
    ">="                   shift, and go to state 662
    "=="                   shift, and go to state 663
    "!="                   shift, and go to state 664
    "->"                   shift, and go to state 665
    "??"                   shift, and go to state 666
    "?."                   shift, and go to state 667
    "?["                   shift, and go to state 668
    "<|"                   shift, and go to state 669
    "|>"                   shift, and go to state 670
    "<<<"                  shift, and go to state 671
    ">>>"                  shift, and go to state 672
    "&&"                   shift, and go to state 673
    "||"                   shift, and go to state 674
    "^^"                   shift, and go to state 675
    ".."                   shift, and go to state 676
    "begin of code block"  shift, and go to state 325
    '?'                    shift, and go to state 677
    '|'                    shift, and go to state 678
    '^'                    shift, and go to state 679
    '&'                    shift, and go to state 680
    '<'                    shift, and go to state 681
    '>'                    shift, and go to state 682
    '-'                    shift, and go to state 683
    '+'                    shift, and go to state 684
    '*'                    shift, and go to state 685
    '/'                    shift, and go to state 686
    '%'                    shift, and go to state 687
    '.'                    shift, and go to state 688
    '['                    shift, and go to state 689

    expression_block  go to state 1353


State 1273

  275 expression_return_no_pipe: "return" .
  276                          | "return" . expr_list
  277                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 1354
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 275 (expression_return_no_pipe)

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 732
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1274

  281 expression_yield_no_pipe: "yield" . expr
  282                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 1355
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1356
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1275

   65 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 65 (expression_else_one_liner)


State 1276

   69 expression_if_one_liner: expression_break .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1277

   70 expression_if_one_liner: expression_continue .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1278

   67 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1279

   68 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1280

   66 expression_if_one_liner: expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 66 (expression_if_one_liner)


State 1281

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 72 (expression_if_then_else)


State 1282

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 391

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1357


State 1283

  295 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1358


State 1284

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  297                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1359
    '&'  shift, and go to state 405

    $default  reduce using rule 553 (optional_ref)

    optional_ref  go to state 1360


State 1285

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@30 function_declaration_header "end of expression"

    "const"  shift, and go to state 1361

    $default  reduce using rule 510 (optional_constant)

    optional_constant  go to state 1362


State 1286

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@31 function_declaration_header expression_block

    "override"  shift, and go to state 1287
    "sealed"    shift, and go to state 1288

    $default  reduce using rule 507 (optional_override)

    optional_override  go to state 1363


State 1287

  508 optional_override: "override" .

    $default  reduce using rule 508 (optional_override)


State 1288

  509 optional_override: "sealed" .

    $default  reduce using rule 509 (optional_override)


State 1289

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1182
    "private"  shift, and go to state 1183

    $default  reduce using rule 512 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1364


State 1290

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1365


State 1291

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1366


State 1292

  267 new_type_declaration: '<' $@7 type_declaration '>' $@8 .

    $default  reduce using rule 267 (new_type_declaration)


State 1293

  271 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 271 (expr_new)


State 1294

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1367


State 1295

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1368
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1296

  311 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 311 (expr_type_decl)


State 1297

  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' . $@88 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 785 ($@88)

    $@88  go to state 1369


State 1298

  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 788 ($@90)

    $@90  go to state 1370


State 1299

  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' . $@92 '(' make_struct_dim ')'

    $default  reduce using rule 791 ($@92)

    $@92  go to state 1371


State 1300

  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1372


State 1301

  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1373


State 1302

  802 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  805 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 845

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1374


State 1303

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1375
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1304

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1376
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1305

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1377
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1306

  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1378


State 1307

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 . use_initializer

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1379


State 1308

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1380


State 1309

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 . '(' make_struct_dim ')'

    '('  shift, and go to state 1381


State 1310

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1382
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1383
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1311

  495 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1312

  316 expr_list: expr_list . ',' expr
  496 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 933
    ')'  shift, and go to state 1384


State 1313

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1385
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1314

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 . optional_expr_list_in_braces

    '('  shift, and go to state 1386

    '('       [reduce using rule 245 (optional_expr_list_in_braces)]
    $default  reduce using rule 245 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1387


State 1315

  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 639
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_map_tuple          go to state 1388
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1316

  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1389
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1317

  316 expr_list: expr_list . ',' expr
  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1390
    ','                  shift, and go to state 933


State 1318

  387 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 387 (func_addr_name)


State 1319

  504 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1320

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' . $@18 func_addr_name

    $default  reduce using rule 390 ($@18)

    $@18  go to state 1391


State 1321

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type . '>' $@20 func_addr_name

    '>'  shift, and go to state 1392


State 1322

  756 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  757                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 941
    ":="  shift, and go to state 1393
    '='   shift, and go to state 943

    copy_or_move  go to state 1394


State 1323

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 382 (expr_named_call)


State 1324

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1097
    ']'  shift, and go to state 1395


State 1325

  758 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1396
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1326

  755 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1397
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1327

  754 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1398
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1328

  325 capture_entry: "<-" "name" .

    $default  reduce using rule 325 (capture_entry)


State 1329

  326 capture_entry: ":=" "name" .

    $default  reduce using rule 326 (capture_entry)


State 1330

  324 capture_entry: '=' "name" .

    $default  reduce using rule 324 (capture_entry)


State 1331

  323 capture_entry: '&' "name" .

    $default  reduce using rule 323 (capture_entry)


State 1332

  328 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1235
    ":="  shift, and go to state 1236
    '='   shift, and go to state 1237
    '&'   shift, and go to state 1238

    capture_entry  go to state 1399


State 1333

  330 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1400


State 1334

  318 block_or_simple_block: "=>" . expr
  319                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 1401
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1402
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1335

  317 block_or_simple_block: expression_block .

    $default  reduce using rule 317 (block_or_simple_block)


State 1336

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 333 (expr_full_block)


State 1337

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options . '>' $@24
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "??"        shift, and go to state 367
    '&'         shift, and go to state 368
    '>'         shift, and go to state 1403
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    dim_list  go to state 373


State 1338

  503 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1339

  471 expr: expr "as" "type" '<' $@25 type_declaration . '>' $@26
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1404


State 1340

  501 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1341

  385 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 385 (expr_method_call)


State 1342

  498 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1343

  476 expr: expr '?' "as" "type" '<' $@27 . type_declaration '>' $@28

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 265
    type_declaration             go to state 1405


State 1344

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr '?' "as" "$f" '(' expr . ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1406


State 1345

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr '.' "?." "$f" '(' expr . ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1407


State 1346

  497 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1347

  398 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 398 (expr_field)


State 1348

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr '.' '.' "$f" '(' expr . ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1408


State 1349

  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1409


State 1350

  615 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 615 (variable_name_with_pos_list)


State 1351

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  547 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 547 (variable_declaration)


State 1352

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1334
    "begin of code block"  shift, and go to state 325

    expression_block       go to state 1335
    block_or_simple_block  go to state 1410


State 1353

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1168
    "elif"         shift, and go to state 1169
    "static_elif"  shift, and go to state 1170

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1171
    expression_else      go to state 1411


State 1354

  277 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 950
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1355

  282 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1412
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1356

  281 expression_yield_no_pipe: "yield" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 281 (expression_yield_no_pipe)


State 1357

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 1413


State 1358

  295 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 295 (tuple_expansion)


State 1359

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 59
    '$'          shift, and go to state 259

    name_in_namespace            go to state 260
    basic_type_declaration       go to state 261
    structure_type_declaration   go to state 262
    auto_type_declaration        go to state 263
    bitfield_type_declaration    go to state 264
    type_declaration_no_options  go to state 1414


State 1360

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 592
    ":="  shift, and go to state 593
    '='   shift, and go to state 594

    copy_or_move_or_clone  go to state 1415


State 1361

  511 optional_constant: "const" .

    $default  reduce using rule 511 (optional_constant)


State 1362

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@30 function_declaration_header "end of expression"

    $default  reduce using rule 521 ($@30)

    $@30  go to state 1416


State 1363

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@31 function_declaration_header expression_block

    "const"  shift, and go to state 1361

    $default  reduce using rule 510 (optional_constant)

    optional_constant  go to state 1417


State 1364

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 723
    "name"  shift, and go to state 724

    variable_declaration         go to state 1418
    variable_name_with_pos_list  go to state 726


State 1365

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1419


State 1366

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1420


State 1367

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1421


State 1368

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1422


State 1369

  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1423


State 1370

  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1424


State 1371

  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 . '(' make_struct_dim ')'

    '('  shift, and go to state 1425


State 1372

  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1426
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1373

  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 639
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_map_tuple          go to state 640
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    expr_map_tuple_list     go to state 1427
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1374

  805 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1428


State 1375

  302 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 302 (expr_cast)


State 1376

  305 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 305 (expr_cast)


State 1377

  308 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 308 (expr_cast)


State 1378

  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 1429
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1379

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 use_initializer .

    $default  reduce using rule 776 (make_struct_decl)


State 1380

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1430


State 1381

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1432


State 1382

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 459 (expr)


State 1383

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1433


State 1384

  496 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1385

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 251 (expression_keyword)


State 1386

  246 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 460
    expr_reader             go to state 461
    optional_expr_list      go to state 1434
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    expr_list               go to state 710
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 650
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1387

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces .

    $default  reduce using rule 254 (expression_keyword)


State 1388

  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1435

    $default  reduce using rule 807 (array_comprehension_where)

    array_comprehension_where  go to state 1436


State 1389

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 655
    "as"                 shift, and go to state 656
    "<<"                 shift, and go to state 657
    ">>"                 shift, and go to state 658
    "++"                 shift, and go to state 659
    "--"                 shift, and go to state 660
    "<="                 shift, and go to state 661
    ">="                 shift, and go to state 662
    "=="                 shift, and go to state 663
    "!="                 shift, and go to state 664
    "->"                 shift, and go to state 665
    "??"                 shift, and go to state 666
    "?."                 shift, and go to state 667
    "?["                 shift, and go to state 668
    "<|"                 shift, and go to state 669
    "|>"                 shift, and go to state 670
    "<<<"                shift, and go to state 671
    ">>>"                shift, and go to state 672
    "&&"                 shift, and go to state 673
    "||"                 shift, and go to state 674
    "^^"                 shift, and go to state 675
    ".."                 shift, and go to state 676
    "end of expression"  shift, and go to state 1435
    '?'                  shift, and go to state 677
    '|'                  shift, and go to state 678
    '^'                  shift, and go to state 679
    '&'                  shift, and go to state 680
    '<'                  shift, and go to state 681
    '>'                  shift, and go to state 682
    '-'                  shift, and go to state 683
    '+'                  shift, and go to state 684
    '*'                  shift, and go to state 685
    '/'                  shift, and go to state 686
    '%'                  shift, and go to state 687
    '.'                  shift, and go to state 688
    '['                  shift, and go to state 689

    $default  reduce using rule 807 (array_comprehension_where)

    array_comprehension_where  go to state 1437


State 1390

  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1438
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1391

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 852
    "name"  shift, and go to state 59

    name_in_namespace  go to state 855
    func_addr_name     go to state 1439


State 1392

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' . $@20 func_addr_name

    $default  reduce using rule 393 ($@20)

    $@20  go to state 1440


State 1393

  757 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1441
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1394

  756 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1442
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1395

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1443


State 1396

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1444


State 1397

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 755 (make_struct_fields)


State 1398

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  754 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 754 (make_struct_fields)


State 1399

  328 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 328 (capture_list)


State 1400

  330 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 330 (optional_capture_list)


State 1401

  319 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1445
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1402

  318 block_or_simple_block: "=>" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    ".."  error (nonassociative)

    $default  reduce using rule 318 (block_or_simple_block)


State 1403

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' . $@24

    $default  reduce using rule 464 ($@24)

    $@24  go to state 1446


State 1404

  471 expr: expr "as" "type" '<' $@25 type_declaration '>' . $@26

    $default  reduce using rule 470 ($@26)

    $@26  go to state 1447


State 1405

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration . '>' $@28
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 374
    '>'  shift, and go to state 1448


State 1406

  502 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1407

  500 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1408

  499 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1409

  679 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 679 (type_declaration_no_options)


State 1410

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 332 (expr_block)


State 1411

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1412

  282 expression_yield_no_pipe: "yield" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 282 (expression_yield_no_pipe)


State 1413

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 334 (expr_full_block_assumed_piped)


State 1414

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '*'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 363
    "implicit"  shift, and go to state 364
    "explicit"  shift, and go to state 365
    "=="        shift, and go to state 366
    "<-"        shift, and go to state 592
    "??"        shift, and go to state 367
    ":="        shift, and go to state 593
    '='         shift, and go to state 594
    '&'         shift, and go to state 368
    '-'         shift, and go to state 369
    '*'         shift, and go to state 370
    '['         shift, and go to state 371
    '#'         shift, and go to state 372

    copy_or_move_or_clone  go to state 1449
    dim_list               go to state 373


State 1415

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1450
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1416

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1451


State 1417

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@31 function_declaration_header expression_block

    $default  reduce using rule 523 ($@31)

    $@31  go to state 1452


State 1418

  517 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 517 (structure_variable_declaration)


State 1419

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1453


State 1420

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1454


State 1421

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1455
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1422

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1423

  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1456


State 1424

  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 1043

    $default  reduce using rule 763 (use_initializer)

    use_initializer  go to state 1457


State 1425

  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1458


State 1426

  316 expr_list: expr_list . ',' expr
  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1459


State 1427

  802 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 845

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1460


State 1428

  805 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 805 (make_table_decl)


State 1429

  316 expr_list: expr_list . ',' expr
  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 849

    $default  reduce using rule 809 (optional_comma)

    optional_comma  go to state 1461


State 1430

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1462


State 1431

  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  761 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1097

    $default  reduce using rule 761 (make_struct_dim)


State 1432

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1464


State 1433

  460 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 460 (expr)


State 1434

  246 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1465


State 1435

  808 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1466


State 1436

  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1467


State 1437

  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1468


State 1438

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 655
    "as"                 shift, and go to state 656
    "<<"                 shift, and go to state 657
    ">>"                 shift, and go to state 658
    "++"                 shift, and go to state 659
    "--"                 shift, and go to state 660
    "<="                 shift, and go to state 661
    ">="                 shift, and go to state 662
    "=="                 shift, and go to state 663
    "!="                 shift, and go to state 664
    "->"                 shift, and go to state 665
    "??"                 shift, and go to state 666
    "?."                 shift, and go to state 667
    "?["                 shift, and go to state 668
    "<|"                 shift, and go to state 669
    "|>"                 shift, and go to state 670
    "<<<"                shift, and go to state 671
    ">>>"                shift, and go to state 672
    "&&"                 shift, and go to state 673
    "||"                 shift, and go to state 674
    "^^"                 shift, and go to state 675
    ".."                 shift, and go to state 676
    "end of expression"  shift, and go to state 1435
    '?'                  shift, and go to state 677
    '|'                  shift, and go to state 678
    '^'                  shift, and go to state 679
    '&'                  shift, and go to state 680
    '<'                  shift, and go to state 681
    '>'                  shift, and go to state 682
    '-'                  shift, and go to state 683
    '+'                  shift, and go to state 684
    '*'                  shift, and go to state 685
    '/'                  shift, and go to state 686
    '%'                  shift, and go to state 687
    '.'                  shift, and go to state 688
    '['                  shift, and go to state 689

    $default  reduce using rule 807 (array_comprehension_where)

    array_comprehension_where  go to state 1469


State 1439

  391 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name .

    $default  reduce using rule 391 (func_addr_expr)


State 1440

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 852
    "name"  shift, and go to state 59

    name_in_namespace  go to state 855
    func_addr_name     go to state 1470


State 1441

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  757 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 757 (make_struct_fields)


State 1442

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 756 (make_struct_fields)


State 1443

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 383 (expr_named_call)


State 1444

  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 941
    ":="  shift, and go to state 1471
    '='   shift, and go to state 943

    copy_or_move  go to state 1472


State 1445

  319 block_or_simple_block: "=>" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 319 (block_or_simple_block)


State 1446

  465 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24 .

    $default  reduce using rule 465 (expr)


State 1447

  471 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26 .

    $default  reduce using rule 471 (expr)


State 1448

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' . $@28

    $default  reduce using rule 475 ($@28)

    $@28  go to state 1473


State 1449

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1474
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1450

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 655
    "as"                 shift, and go to state 656
    "<<"                 shift, and go to state 657
    ">>"                 shift, and go to state 658
    "++"                 shift, and go to state 659
    "--"                 shift, and go to state 660
    "<="                 shift, and go to state 661
    ">="                 shift, and go to state 662
    "=="                 shift, and go to state 663
    "!="                 shift, and go to state 664
    "->"                 shift, and go to state 665
    "??"                 shift, and go to state 666
    "?."                 shift, and go to state 667
    "?["                 shift, and go to state 668
    "<|"                 shift, and go to state 669
    "|>"                 shift, and go to state 670
    "<<<"                shift, and go to state 671
    ">>>"                shift, and go to state 672
    "&&"                 shift, and go to state 673
    "||"                 shift, and go to state 674
    "^^"                 shift, and go to state 675
    ".."                 shift, and go to state 676
    "end of expression"  shift, and go to state 1475
    '?'                  shift, and go to state 677
    '|'                  shift, and go to state 678
    '^'                  shift, and go to state 679
    '&'                  shift, and go to state 680
    '<'                  shift, and go to state 681
    '>'                  shift, and go to state 682
    '-'                  shift, and go to state 683
    '+'                  shift, and go to state 684
    '*'                  shift, and go to state 685
    '/'                  shift, and go to state 686
    '%'                  shift, and go to state 687
    '.'                  shift, and go to state 688
    '['                  shift, and go to state 689


State 1451

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1476


State 1452

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1477


State 1453

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1478


State 1454

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1479


State 1455

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689
    ')'    shift, and go to state 1480


State 1456

  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1481


State 1457

  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1431
    make_struct_dim     go to state 1482


State 1458

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1483


State 1459

  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1484


State 1460

  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1485


State 1461

  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1486


State 1462

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1487


State 1463

  762 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 1192

    make_struct_fields  go to state 1488


State 1464

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_dim ')' .

    $default  reduce using rule 773 (make_struct_decl)


State 1465

  246 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 246 (optional_expr_list_in_braces)


State 1466

  808 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1489
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1467

  813 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 813 (array_comprehension)


State 1468

  811 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 811 (array_comprehension)


State 1469

  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1490


State 1470

  394 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name .

    $default  reduce using rule 394 (func_addr_expr)


State 1471

  759 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1491
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1472

  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 410
    "class"                           shift, and go to state 411
    "true"                            shift, and go to state 412
    "false"                           shift, and go to state 413
    "new"                             shift, and go to state 414
    "typeinfo"                        shift, and go to state 415
    "type"                            shift, and go to state 416
    "array"                           shift, and go to state 417
    "null"                            shift, and go to state 418
    "table"                           shift, and go to state 419
    "deref"                           shift, and go to state 420
    "cast"                            shift, and go to state 421
    "upcast"                          shift, and go to state 422
    "addr"                            shift, and go to state 423
    "reinterpret"                     shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 447
    "type function"                   shift, and go to state 448
    "start of the string"             shift, and go to state 449
    "begin of code block"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459

    string_builder          go to state 460
    expr_reader             go to state 461
    expression_keyword      go to state 462
    name_in_namespace       go to state 463
    expr_new                go to state 464
    expr_cast               go to state 465
    expr_type_decl          go to state 466
    expr_type_info          go to state 467
    block_or_lambda         go to state 468
    expr_full_block         go to state 469
    expr_numeric_const      go to state 470
    expr_named_call         go to state 471
    expr_method_call        go to state 472
    func_addr_expr          go to state 473
    expr_field              go to state 474
    expr_call               go to state 475
    expr                    go to state 1492
    expr_mtag               go to state 477
    basic_type_declaration  go to state 478
    make_decl               go to state 479
    make_struct_decl        go to state 480
    make_tuple_call         go to state 481
    make_dim_decl           go to state 482
    make_table_decl         go to state 483
    array_comprehension     go to state 484


State 1473

  476 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28 .

    $default  reduce using rule 476 (expr)


State 1474

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 655
    "as"                 shift, and go to state 656
    "<<"                 shift, and go to state 657
    ">>"                 shift, and go to state 658
    "++"                 shift, and go to state 659
    "--"                 shift, and go to state 660
    "<="                 shift, and go to state 661
    ">="                 shift, and go to state 662
    "=="                 shift, and go to state 663
    "!="                 shift, and go to state 664
    "->"                 shift, and go to state 665
    "??"                 shift, and go to state 666
    "?."                 shift, and go to state 667
    "?["                 shift, and go to state 668
    "<|"                 shift, and go to state 669
    "|>"                 shift, and go to state 670
    "<<<"                shift, and go to state 671
    ">>>"                shift, and go to state 672
    "&&"                 shift, and go to state 673
    "||"                 shift, and go to state 674
    "^^"                 shift, and go to state 675
    ".."                 shift, and go to state 676
    "end of expression"  shift, and go to state 1493
    '?'                  shift, and go to state 677
    '|'                  shift, and go to state 678
    '^'                  shift, and go to state 679
    '&'                  shift, and go to state 680
    '<'                  shift, and go to state 681
    '>'                  shift, and go to state 682
    '-'                  shift, and go to state 683
    '+'                  shift, and go to state 684
    '*'                  shift, and go to state 685
    '/'                  shift, and go to state 686
    '%'                  shift, and go to state 687
    '.'                  shift, and go to state 688
    '['                  shift, and go to state 689


State 1475

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 297 (tuple_expansion_variable_declaration)


State 1476

  522 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression" .

    $default  reduce using rule 522 (struct_variable_declaration_list)


State 1477

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 325

    expression_block  go to state 1494


State 1478

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 767 (make_struct_decl)


State 1479

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 770 (make_struct_decl)


State 1480

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 314 (expr_type_info)


State 1481

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1495


State 1482

  762 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1463
    ')'                  shift, and go to state 1496


State 1483

  792 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')' .

    $default  reduce using rule 792 (make_dim_decl)


State 1484

  796 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' expr_list optional_comma ')' .

    $default  reduce using rule 796 (make_dim_decl)


State 1485

  806 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 806 (make_table_decl)


State 1486

  800 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')' .

    $default  reduce using rule 800 (make_dim_decl)


State 1487

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 782 (make_tuple_call)


State 1488

  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  762 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1097

    $default  reduce using rule 762 (make_struct_dim)


State 1489

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  808 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 808 (array_comprehension_where)


State 1490

  812 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 812 (array_comprehension)


State 1491

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 759 (make_struct_fields)


State 1492

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  401           | expr . '.' $@21 error $@22
  421 expr: expr . "<<" expr
  422     | expr . ">>" expr
  423     | expr . "<<<" expr
  424     | expr . ">>>" expr
  425     | expr . '+' expr
  426     | expr . '-' expr
  427     | expr . '*' expr
  428     | expr . '/' expr
  429     | expr . '%' expr
  430     | expr . '<' expr
  431     | expr . '>' expr
  432     | expr . "==" expr
  433     | expr . "!=" expr
  434     | expr . "<=" expr
  435     | expr . ">=" expr
  436     | expr . '&' expr
  437     | expr . '|' expr
  438     | expr . '^' expr
  439     | expr . "&&" expr
  440     | expr . "||" expr
  441     | expr . "^^" expr
  442     | expr . ".." expr
  445     | expr . "++"
  446     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  461     | expr . "??" expr
  462     | expr . '?' expr ':' expr
  465     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  466     | expr . "is" basic_type_declaration
  467     | expr . "is" "name"
  468     | expr . "as" "name"
  471     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  472     | expr . "as" basic_type_declaration
  473     | expr . '?' "as" "name"
  476     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  477     | expr . '?' "as" basic_type_declaration
  485     | expr . "<|" expr
  486     | expr . "|>" expr
  487     | expr . "|>" basic_type_declaration
  497 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr . "?." "$f" '(' expr ')'
  499          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr . "as" "$f" '(' expr ')'
  502          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 655
    "as"   shift, and go to state 656
    "<<"   shift, and go to state 657
    ">>"   shift, and go to state 658
    "++"   shift, and go to state 659
    "--"   shift, and go to state 660
    "<="   shift, and go to state 661
    ">="   shift, and go to state 662
    "=="   shift, and go to state 663
    "!="   shift, and go to state 664
    "->"   shift, and go to state 665
    "??"   shift, and go to state 666
    "?."   shift, and go to state 667
    "?["   shift, and go to state 668
    "<|"   shift, and go to state 669
    "|>"   shift, and go to state 670
    "<<<"  shift, and go to state 671
    ">>>"  shift, and go to state 672
    "&&"   shift, and go to state 673
    "||"   shift, and go to state 674
    "^^"   shift, and go to state 675
    ".."   shift, and go to state 676
    '?'    shift, and go to state 677
    '|'    shift, and go to state 678
    '^'    shift, and go to state 679
    '&'    shift, and go to state 680
    '<'    shift, and go to state 681
    '>'    shift, and go to state 682
    '-'    shift, and go to state 683
    '+'    shift, and go to state 684
    '*'    shift, and go to state 685
    '/'    shift, and go to state 686
    '%'    shift, and go to state 687
    '.'    shift, and go to state 688
    '['    shift, and go to state 689

    $default  reduce using rule 758 (make_struct_fields)


State 1493

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)


State 1494

  524 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block .

    $default  reduce using rule 524 (struct_variable_declaration_list)


State 1495

  786 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 786 (make_dim_decl)


State 1496

  789 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 789 (make_dim_decl)
