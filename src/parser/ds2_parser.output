Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


State 464 conflicts: 1 shift/reduce
State 640 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 require_module_name: "name"
   39                    | '%' require_module_name
   40                    | require_module_name '.' "name"
   41                    | require_module_name '/' "name"

   42 require_module: require_module_name is_public_module
   43               | require_module_name "as" "name" is_public_module

   44 is_public_module: %empty
   45                 | "public"

   46 expect_declaration: "expect" expect_list

   47 expect_list: expect_error
   48            | expect_list ',' expect_error

   49 expect_error: "integer constant"
   50             | "integer constant" ':' "integer constant"

   51 expression_label: "label" "integer constant" ':'

   52 expression_goto: "goto" "label" "integer constant"
   53                | "goto" expr

   54 elif_or_static_elif: "elif"
   55                    | "static_elif"

   56 expression_else: %empty
   57                | "else" expression_block
   58                | elif_or_static_elif '(' expr ')' expression_block expression_else

   59 if_or_static_if: "if"
   60                | "static_if"

   61 expression_else_one_liner: %empty
   62                          | "else" expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return
   65                        | expression_yield
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   69                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   71 expression_unsafe: "unsafe" expression_block

   72 expression_while_loop: "while" '(' expr ')' expression_block

   73 expression_with: "with" '(' expr ')' expression_block

   74 expression_with_alias: "assume" "name" '=' expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 metadata_argument_list: '@' annotation_argument
   97                       | metadata_argument_list '@' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@2: %empty

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  211 expression_block: "begin of code block" expressions "end of code block"
  212                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped

  214 expression_any: "end of expression"
  215               | expr_assign "end of expression"
  216               | expression_delete "end of expression"
  217               | expression_let
  218               | expression_while_loop
  219               | expression_unsafe
  220               | expression_with
  221               | expression_with_alias "end of expression"
  222               | expression_for_loop
  223               | expression_break "end of expression"
  224               | expression_continue "end of expression"
  225               | expression_return "end of expression"
  226               | expression_yield "end of expression"
  227               | expression_if_then_else
  228               | expression_try_catch
  229               | expression_label "end of expression"
  230               | expression_goto "end of expression"
  231               | "pass" "end of expression"

  232 expressions: %empty
  233            | expressions expression_any
  234            | expressions error

  235 optional_expr_list: %empty
  236                   | expr_list

  237 type_declaration_no_options_list: type_declaration
  238                                 | type_declaration_no_options_list "end of expression" type_declaration

  239 name_in_namespace: "name"
  240                  | "name" "::" "name"
  241                  | "::" "name"

  242 expression_delete: "delete" expr
  243                  | "delete" "explicit" expr

  244 $@3: %empty

  245 $@4: %empty

  246 new_type_declaration: '<' $@3 type_declaration '>' $@4

  247 expr_new: "new" structure_type_declaration
  248         | "new" structure_type_declaration '(' optional_expr_list ')'
  249         | "new" new_type_declaration '(' use_initializer ')'
  250         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  251         | "new" make_decl

  252 expression_break: "break"

  253 expression_continue: "continue"

  254 expression_return: "return"
  255                  | "return" expr
  256                  | "return" "<-" expr

  257 expression_yield: "yield" expr
  258                 | "yield" "<-" expr

  259 expression_try_catch: "try" expression_block "recover" expression_block

  260 kwd_let_var_or_nothing: "let"
  261                       | "var"
  262                       | %empty

  263 kwd_let: "let"
  264        | "var"

  265 optional_in_scope: "inscope"
  266                  | %empty

  267 tuple_expansion: "name"
  268                | tuple_expansion ',' "name"

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  271 expression_let: kwd_let optional_in_scope let_variable_declaration
  272               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  273 $@5: %empty

  274 $@6: %empty

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  276 $@7: %empty

  277 $@8: %empty

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  279 $@9: %empty

  280 $@10: %empty

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  282 $@11: %empty

  283 $@12: %empty

  284 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  285 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  286               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  288 expr_list: expr
  289          | expr_list ',' expr

  290 block_or_simple_block: expression_block
  291                      | "=>" expr
  292                      | "=>" "<-" expr

  293 block_or_lambda: '$'
  294                | '@'
  295                | '@' '@'

  296 capture_entry: '&' "name"
  297              | '=' "name"
  298              | "<-" "name"
  299              | ":=" "name"

  300 capture_list: capture_entry
  301             | capture_list ',' capture_entry

  302 optional_capture_list: %empty
  303                      | '[' '[' capture_list ']' ']'

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  306                              | "begin of code block" expressions "end of code block"

  307 expr_numeric_const: "integer constant"
  308                   | "unsigned integer constant"
  309                   | "long integer constant"
  310                   | "unsigned long integer constant"
  311                   | "unsigned int8 constant"
  312                   | "floating point constant"
  313                   | "double constant"

  314 expr_assign: expr
  315            | expr '=' expr
  316            | expr "<-" expr
  317            | expr ":=" expr
  318            | expr "&=" expr
  319            | expr "|=" expr
  320            | expr "^=" expr
  321            | expr "&&=" expr
  322            | expr "||=" expr
  323            | expr "^^=" expr
  324            | expr "+=" expr
  325            | expr "-=" expr
  326            | expr "*=" expr
  327            | expr "/=" expr
  328            | expr "%=" expr
  329            | expr "<<=" expr
  330            | expr ">>=" expr
  331            | expr "<<<=" expr
  332            | expr ">>>=" expr

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  334                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  335 expr_method_call: expr "->" "name" '(' ')'
  336                 | expr "->" "name" '(' expr_list ')'

  337 func_addr_name: name_in_namespace
  338               | "$i" '(' expr ')'

  339 func_addr_expr: '@' '@' func_addr_name

  340 $@13: %empty

  341 $@14: %empty

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  343 $@15: %empty

  344 $@16: %empty

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  346 expr_field: expr '.' "name"
  347           | expr '.' '.' "name"
  348           | expr '.' "name" '(' ')'
  349           | expr '.' "name" '(' expr_list ')'

  350 $@17: %empty

  351 $@18: %empty

  352 expr_field: expr '.' $@17 error $@18

  353 expr_call: name_in_namespace '(' ')'
  354          | name_in_namespace '(' make_struct_single ')'
  355          | name_in_namespace '(' expr_list ')'
  356          | basic_type_declaration '(' ')'
  357          | basic_type_declaration '(' expr_list ')'

  358 expr: "null"
  359     | name_in_namespace
  360     | expr_numeric_const
  361     | expr_reader
  362     | string_builder
  363     | make_decl
  364     | "true"
  365     | "false"
  366     | expr_field
  367     | expr_mtag
  368     | '!' expr
  369     | '~' expr
  370     | '+' expr
  371     | '-' expr
  372     | expr "<<" expr
  373     | expr ">>" expr
  374     | expr "<<<" expr
  375     | expr ">>>" expr
  376     | expr '+' expr
  377     | expr '-' expr
  378     | expr '*' expr
  379     | expr '/' expr
  380     | expr '%' expr
  381     | expr '<' expr
  382     | expr '>' expr
  383     | expr "==" expr
  384     | expr "!=" expr
  385     | expr "<=" expr
  386     | expr ">=" expr
  387     | expr '&' expr
  388     | expr '|' expr
  389     | expr '^' expr
  390     | expr "&&" expr
  391     | expr "||" expr
  392     | expr "^^" expr
  393     | expr ".." expr
  394     | "++" expr
  395     | "--" expr
  396     | expr "++"
  397     | expr "--"
  398     | '(' expr_list optional_comma ')'
  399     | expr '[' expr ']'
  400     | expr '.' '[' expr ']'
  401     | expr "?[" expr ']'
  402     | expr '.' "?[" expr ']'
  403     | expr "?." "name"
  404     | expr '.' "?." "name"
  405     | func_addr_expr
  406     | expr_call
  407     | '*' expr
  408     | "deref" '(' expr ')'
  409     | "addr" '(' expr ')'
  410     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  412     | expr "??" expr
  413     | expr '?' expr ':' expr

  414 $@19: %empty

  415 $@20: %empty

  416 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr "is" basic_type_declaration
  418     | expr "is" "name"
  419     | expr "as" "name"

  420 $@21: %empty

  421 $@22: %empty

  422 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr "as" basic_type_declaration
  424     | expr '?' "as" "name"

  425 $@23: %empty

  426 $@24: %empty

  427 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr '?' "as" basic_type_declaration
  429     | expr_type_info
  430     | expr_type_decl
  431     | expr_cast
  432     | expr_new
  433     | expr_method_call
  434     | expr_named_call
  435     | expr_full_block
  436     | expr "<|" expr
  437     | expr "|>" expr
  438     | expr "|>" basic_type_declaration
  439     | expr_call_pipe

  440 expr_mtag: "$$" '(' expr ')'
  441          | "$i" '(' expr ')'
  442          | "$v" '(' expr ')'
  443          | "$b" '(' expr ')'
  444          | "$a" '(' expr ')'
  445          | "..."
  446          | "$c" '(' expr ')' '(' ')'
  447          | "$c" '(' expr ')' '(' expr_list ')'
  448          | expr '.' "$f" '(' expr ')'
  449          | expr "?." "$f" '(' expr ')'
  450          | expr '.' '.' "$f" '(' expr ')'
  451          | expr '.' "?." "$f" '(' expr ')'
  452          | expr "as" "$f" '(' expr ')'
  453          | expr '?' "as" "$f" '(' expr ')'
  454          | expr "is" "$f" '(' expr ')'
  455          | '@' '@' "$c" '(' expr ')'

  456 optional_field_annotation: %empty
  457                          | metadata_argument_list

  458 optional_override: %empty
  459                  | "override"
  460                  | "sealed"

  461 optional_constant: %empty
  462                  | "const"

  463 optional_public_or_private_member_variable: %empty
  464                                           | "public"
  465                                           | "private"

  466 optional_static_member_variable: %empty
  467                                | "static"

  468 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  469 struct_variable_declaration_list: %empty

  470 $@25: %empty

  471 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  472 $@26: %empty

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  474 $@27: %empty

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  476 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  477                              | "$a" '(' expr ')'

  478 function_argument_list: function_argument_declaration
  479                       | function_argument_list "end of expression" function_argument_declaration

  480 tuple_type: type_declaration
  481           | "name" ':' type_declaration

  482 tuple_type_list: tuple_type
  483                | tuple_type_list "end of expression" tuple_type

  484 tuple_alias_type_list: %empty
  485                      | tuple_alias_type_list "end of expression"
  486                      | tuple_alias_type_list tuple_type "end of expression"

  487 variant_type: "name" ':' type_declaration

  488 variant_type_list: variant_type
  489                  | variant_type_list "end of expression" variant_type

  490 variant_alias_type_list: %empty
  491                        | variant_alias_type_list "end of expression"
  492                        | variant_alias_type_list variant_type "end of expression"

  493 copy_or_move: '='
  494             | "<-"

  495 variable_declaration: variable_name_with_pos_list
  496                     | variable_name_with_pos_list '&'
  497                     | variable_name_with_pos_list ':' type_declaration
  498                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  499                     | variable_name_with_pos_list copy_or_move expr

  500 copy_or_move_or_clone: '='
  501                      | "<-"
  502                      | ":="

  503 optional_ref: %empty
  504             | '&'

  505 let_variable_name_with_pos_list: "name"
  506                                | "$i" '(' expr ')'
  507                                | "name" "aka" "name"
  508                                | let_variable_name_with_pos_list ',' "name"
  509                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  510 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  511                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  512                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  513 global_variable_declaration_list: %empty

  514 $@28: %empty

  515 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation let_variable_declaration

  516 optional_shared: %empty
  517                | "shared"

  518 optional_public_or_private_variable: %empty
  519                                    | "private"
  520                                    | "public"

  521 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  522 $@29: %empty

  523 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration

  524 enum_expression: "name"
  525                | "name" '=' expr

  526 enum_list: %empty
  527          | enum_expression
  528          | enum_list ',' enum_expression

  529 optional_public_or_private_alias: %empty
  530                                 | "private"
  531                                 | "public"

  532 $@30: %empty

  533 single_alias: optional_public_or_private_alias "name" $@30 '=' type_declaration

  534 alias_declaration: "typedef" single_alias "end of expression"

  535 optional_public_or_private_enum: %empty
  536                                | "private"
  537                                | "public"

  538 enum_name: "name"

  539 optional_enum_basic_type_declaration: %empty
  540                                     | ':' enum_basic_type_declaration

  541 $@31: %empty

  542 $@32: %empty

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

  544 optional_structure_parent: %empty
  545                          | ':' name_in_namespace

  546 optional_sealed: %empty
  547                | "sealed"

  548 structure_name: optional_sealed "name" optional_structure_parent

  549 class_or_struct: "class"
  550                | "struct"

  551 optional_public_or_private_structure: %empty
  552                                     | "private"
  553                                     | "public"

  554 optional_struct_variable_declaration_list: %empty
  555                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  556 $@33: %empty

  557 $@34: %empty

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

  559 variable_name_with_pos_list: "name"
  560                            | "$i" '(' expr ')'
  561                            | "name" "aka" "name"
  562                            | variable_name_with_pos_list ',' "name"
  563                            | variable_name_with_pos_list ',' "name" "aka" "name"

  564 basic_type_declaration: "bool"
  565                       | "string"
  566                       | "int"
  567                       | "int8"
  568                       | "int16"
  569                       | "int64"
  570                       | "int2"
  571                       | "int3"
  572                       | "int4"
  573                       | "uint"
  574                       | "uint8"
  575                       | "uint16"
  576                       | "uint64"
  577                       | "uint2"
  578                       | "uint3"
  579                       | "uint4"
  580                       | "float"
  581                       | "float2"
  582                       | "float3"
  583                       | "float4"
  584                       | "void"
  585                       | "range"
  586                       | "urange"
  587                       | "range64"
  588                       | "urange64"
  589                       | "double"
  590                       | "bitfield"

  591 enum_basic_type_declaration: "int"
  592                            | "int8"
  593                            | "int16"
  594                            | "uint"
  595                            | "uint8"
  596                            | "uint16"
  597                            | "int64"
  598                            | "uint64"

  599 structure_type_declaration: name_in_namespace

  600 auto_type_declaration: "auto"
  601                      | "auto" '(' "name" ')'
  602                      | "$t" '(' expr ')'

  603 bitfield_bits: "name"
  604              | bitfield_bits "end of expression" "name"

  605 bitfield_alias_bits: %empty
  606                    | "name"
  607                    | bitfield_alias_bits ',' "name"

  608 $@35: %empty

  609 $@36: %empty

  610 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' $@36

  611 table_type_pair: type_declaration
  612                | type_declaration "end of expression" type_declaration

  613 dim_list: '[' expr ']'
  614         | '[' ']'
  615         | dim_list '[' expr ']'
  616         | dim_list '[' ']'

  617 type_declaration_no_options: type_declaration_no_options_no_dim
  618                            | type_declaration_no_options_no_dim dim_list

  619 type_declaration_no_options_no_dim: basic_type_declaration
  620                                   | auto_type_declaration
  621                                   | bitfield_type_declaration
  622                                   | structure_type_declaration

  623 $@37: %empty

  624 $@38: %empty

  625 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' $@38
  626                                   | "typedecl" '(' expr ')'
  627                                   | '$' name_in_namespace '(' optional_expr_list ')'

  628 $@39: %empty

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  630                                   | type_declaration_no_options_no_dim '-' '[' ']'
  631                                   | type_declaration_no_options_no_dim "explicit"
  632                                   | type_declaration_no_options_no_dim "const"
  633                                   | type_declaration_no_options_no_dim '-' "const"
  634                                   | type_declaration_no_options_no_dim '&'
  635                                   | type_declaration_no_options_no_dim '-' '&'
  636                                   | type_declaration_no_options_no_dim '#'
  637                                   | type_declaration_no_options_no_dim "implicit"
  638                                   | type_declaration_no_options_no_dim '-' '#'
  639                                   | type_declaration_no_options_no_dim "==" "const"
  640                                   | type_declaration_no_options_no_dim "==" '&'
  641                                   | type_declaration_no_options_no_dim '*'

  642 $@40: %empty

  643 $@41: %empty

  644 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' $@41
  645                                   | type_declaration_no_options_no_dim "??"

  646 $@42: %empty

  647 $@43: %empty

  648 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' $@43

  649 $@44: %empty

  650 $@45: %empty

  651 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' $@45

  652 $@46: %empty

  653 $@47: %empty

  654 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' $@47
  655                                   | "block"

  656 $@48: %empty

  657 $@49: %empty

  658 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' $@49

  659 $@50: %empty

  660 $@51: %empty

  661 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' $@51
  662                                   | "function"

  663 $@52: %empty

  664 $@53: %empty

  665 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' $@53

  666 $@54: %empty

  667 $@55: %empty

  668 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  669                                   | "lambda"

  670 $@56: %empty

  671 $@57: %empty

  672 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' $@57

  673 $@58: %empty

  674 $@59: %empty

  675 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' $@59

  676 $@60: %empty

  677 $@61: %empty

  678 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' $@61

  679 $@62: %empty

  680 $@63: %empty

  681 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' $@63

  682 type_declaration: type_declaration_no_options
  683                 | type_declaration '|' type_declaration_no_options
  684                 | type_declaration '|' '#'

  685 $@64: %empty

  686 $@65: %empty

  687 $@66: %empty

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

  689 $@67: %empty

  690 $@68: %empty

  691 $@69: %empty

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

  693 $@70: %empty

  694 $@71: %empty

  695 $@72: %empty

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

  697 make_decl: make_struct_decl
  698          | make_dim_decl
  699          | make_table_decl
  700          | array_comprehension
  701          | make_tuple_call

  702 make_struct_fields: "name" copy_or_move expr
  703                   | "name" ":=" expr
  704                   | make_struct_fields ',' "name" copy_or_move expr
  705                   | make_struct_fields ',' "name" ":=" expr
  706                   | "$f" '(' expr ')' copy_or_move expr
  707                   | "$f" '(' expr ')' ":=" expr
  708                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  710 make_struct_single: make_struct_fields

  711 make_struct_dim: make_struct_fields
  712                | make_struct_dim "end of expression" make_struct_fields

  713 use_initializer: %empty
  714                | "uninitialized"

  715 $@73: %empty

  716 $@74: %empty

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

  718 $@75: %empty

  719 $@76: %empty

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

  721 $@77: %empty

  722 $@78: %empty

  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

  724 $@79: %empty

  725 $@80: %empty

  726 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 use_initializer

  727 make_map_tuple: expr "=>" expr
  728               | expr

  729 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  730 $@81: %empty

  731 $@82: %empty

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

  733 make_dim_decl: '[' expr_list optional_comma ']'

  734 $@83: %empty

  735 $@84: %empty

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

  737 $@85: %empty

  738 $@86: %empty

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

  740 $@87: %empty

  741 $@88: %empty

  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'
  743              | "array" '(' expr_list optional_comma ')'

  744 $@89: %empty

  745 $@90: %empty

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'
  747              | "fixed_array" '(' expr_list optional_comma ')'

  748 $@91: %empty

  749 $@92: %empty

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

  751 expr_map_tuple_list: make_map_tuple
  752                    | expr_map_tuple_list ',' make_map_tuple

  753 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  754                | "table" '(' expr_map_tuple_list optional_comma ')'
  755                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  756                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  757 array_comprehension_where: %empty
  758                          | "end of expression" "where" expr

  759 optional_comma: %empty
  760               | ','

  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  762                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  763                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 368
    '#' (35) 636 638 684
    '$' (36) 20 293 627 629
    '%' (37) 35 39 140 380
    '&' (38) 148 296 387 496 504 634 635 640
    '(' (40) 58 68 69 70 72 73 93 102 108 115 116 248 249 250 269 270 285 286 287 333 334 335 336 338 348 349 353 354 355 356 357 398 408 409 410 411 440 441 442 443 444 446 447 448 449 450 451 452 453 454 455 477 506 560 601 602 626 627 629 706 707 708 709 717 720 723 729 732 736 739 742 743 746 747 750 754 755 756
    ')' (41) 58 68 69 70 72 73 93 102 108 115 116 248 249 250 269 270 285 286 287 333 334 335 336 338 348 349 353 354 355 356 357 398 408 409 410 411 440 441 442 443 444 446 447 448 449 450 451 452 453 454 455 477 506 560 601 602 626 627 629 706 707 708 709 717 720 723 729 732 736 739 742 743 746 747 750 754 755 756
    '*' (42) 138 378 407 641
    '+' (43) 136 370 376
    ',' (44) 48 82 95 111 268 289 301 334 508 509 528 562 563 607 704 705 708 709 752 760
    '-' (45) 137 371 377 630 633 635 638
    '.' (46) 40 165 167 168 346 347 348 349 352 400 402 404 448 450 451
    '/' (47) 41 139 379
    ':' (58) 50 51 118 269 413 481 487 497 498 510 511 540 545
    "end of expression" (59) 15 16 69 214 215 216 221 223 224 225 226 229 230 231 238 269 270 287 471 473 479 483 485 486 489 491 492 510 511 512 534 604 612 712 756 758 761 762 763
    '<' (60) 141 246 275 278 281 284 286 287 342 345 381 410 411 416 422 427 610 625 629 644 648 651 654 658 661 665 668 672 675 678 681 717 720 723 726 732 736 739 742 746 750 755 756
    '=' (61) 74 86 87 88 89 90 91 93 297 315 493 500 525 533
    '>' (62) 142 246 275 278 281 284 286 287 342 345 382 410 411 416 422 427 610 625 629 644 648 651 654 658 661 665 668 672 675 678 681 717 720 723 726 732 736 739 742 746 750 755 756
    '?' (63) 177 178 413 424 427 428 453
    '@' (64) 96 97 294 295 339 342 345 455
    '[' (91) 113 163 303 333 334 399 400 613 614 615 616 630 733 761 762
    ']' (93) 113 163 164 303 333 334 399 400 401 402 613 614 615 616 630 733 761 762
    '^' (94) 150 389
    "begin of code block" (123) 211 212 306 521 543 555 688 692 696 753 763
    '|' (124) 149 388 683 684
    "end of code block" (125) 211 212 306 521 543 555 688 692 696 753 763
    '~' (126) 121 369
    error (256) 234 352
    "lexer error" (258)
    "struct" (259) 550 717 736
    "class" (260) 549 720
    "let" (261) 260 263
    "def" (262) 204 473 475
    "while" (263) 72
    "if" (264) 59 69
    "static_if" (265) 60
    "else" (266) 57 62
    "for" (267) 70 761 762 763
    "recover" (268) 259
    "true" (269) 79 90 364
    "false" (270) 80 91 365
    "new" (271) 247 248 249 250 251
    "typeinfo" (272) 285 286 287
    "type" (273) 84 284 416 422 427 625
    "in" (274) 70 85 761 762 763
    "is" (275) 173 175 416 417 418 454
    "as" (276) 43 174 176 177 178 419 422 423 424 427 428 452 453
    "elif" (277) 54
    "static_elif" (278) 55
    "array" (279) 648 736 739 742 743 746
    "return" (280) 254 255 256
    "null" (281) 358
    "break" (282) 252
    "try" (283) 259
    "options" (284) 36
    "table" (285) 651 754 755 756
    "expect" (286) 46
    "const" (287) 462 632 633 639
    "require" (288) 37 99
    "operator" (289) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (290) 543
    "finally" (291) 212
    "delete" (292) 171 242 243
    "deref" (293) 408
    "typedef" (294) 534
    "typedecl" (295) 626
    "with" (296) 73
    "aka" (297) 507 509 561 563
    "assume" (298) 74
    "cast" (299) 275
    "override" (300) 459
    "abstract" (301) 473
    "upcast" (302) 278
    "iterator" (303) 654 762
    "var" (304) 261 264
    "addr" (305) 409
    "continue" (306) 253
    "where" (307) 758
    "pass" (308) 231
    "reinterpret" (309) 281
    "module" (310) 22
    "public" (311) 18 45 207 464 520 531 537 553
    "label" (312) 51 52
    "goto" (313) 52 53
    "implicit" (314) 637
    "explicit" (315) 243 631
    "shared" (316) 517
    "private" (317) 19 100 206 465 519 530 536 552
    "smart_ptr" (318) 644
    "unsafe" (319) 71
    "inscope" (320) 265
    "static" (321) 467
    "fixed_array" (322) 747 750
    "default" (323) 726
    "uninitialized" (324) 714
    "bool" (325) 179 564
    "void" (326) 584
    "string" (327) 180 565
    "auto" (328) 600 601
    "int" (329) 181 566 591
    "int2" (330) 182 570
    "int3" (331) 183 571
    "int4" (332) 184 572
    "uint" (333) 185 573 594
    "bitfield" (334) 590 610 696
    "uint2" (335) 186 577
    "uint3" (336) 187 578
    "uint4" (337) 188 579
    "float" (338) 189 580
    "float2" (339) 190 581
    "float3" (340) 191 582
    "float4" (341) 192 583
    "range" (342) 193 585
    "urange" (343) 194 586
    "range64" (344) 195 587
    "urange64" (345) 196 588
    "block" (346) 655 658 661
    "int64" (347) 197 569 597
    "uint64" (348) 198 576 598
    "double" (349) 199 589
    "function" (350) 662 665 668
    "lambda" (351) 669 672 675
    "int8" (352) 200 567 592
    "uint8" (353) 201 574 595
    "int16" (354) 202 568 593
    "uint16" (355) 203 575 596
    "tuple" (356) 678 688 729 732 739
    "variant" (357) 681 692 723 742
    "generator" (358) 410 411
    "yield" (359) 257 258
    "sealed" (360) 460 547
    "+=" (361) 122 324
    "-=" (362) 123 325
    "/=" (363) 125 327
    "*=" (364) 124 326
    "%=" (365) 126 328
    "&=" (366) 127 318
    "|=" (367) 128 319
    "^=" (368) 129 320
    "<<" (369) 155 372
    ">>" (370) 156 373
    "++" (371) 151 153 394 396
    "--" (372) 152 154 395 397
    "<=" (373) 146 385
    "<<=" (374) 157 329
    ">>=" (375) 158 330
    ">=" (376) 147 386
    "==" (377) 144 383 639 640
    "!=" (378) 145 384
    "->" (379) 335 336
    "<-" (380) 256 258 292 298 316 494 501
    "??" (381) 172 412 645
    "?." (382) 166 169 403 404 449 451
    "?[" (383) 164 401 402
    "<|" (384) 436
    "|>" (385) 109 437 438
    ":=" (386) 168 170 299 317 502 703 705 707 709
    "<<<" (387) 159 374
    ">>>" (388) 160 375
    "<<<=" (389) 161 331
    ">>>=" (390) 162 332
    "=>" (391) 291 292 727
    "::" (392) 240 241
    "&&" (393) 105 133 390
    "||" (394) 106 134 391
    "^^" (395) 107 135 392
    "&&=" (396) 130 321
    "||=" (397) 131 322
    "^^=" (398) 132 323
    ".." (399) 143 393
    "$$" (400) 440
    "$i" (401) 338 441 506 560
    "$v" (402) 442
    "$b" (403) 443
    "$a" (404) 444 477
    "$t" (405) 602
    "$c" (406) 446 447 455
    "$f" (407) 448 449 450 451 452 453 454 706 707 708 709
    "..." (408) 445
    "integer constant" <i> (409) 49 50 51 52 77 88 307
    "long integer constant" <i64> (410) 309
    "unsigned integer constant" <ui> (411) 308
    "unsigned long integer constant" <ui64> (412) 310
    "unsigned int8 constant" <ui> (413) 311
    "floating point constant" <fd> (414) 78 89 312
    "double constant" <d> (415) 313
    "name" <s> (416) 21 38 40 41 43 74 76 83 87 119 167 168 169 175 176 178 239 240 241 267 268 286 287 296 297 298 299 335 336 346 347 348 349 403 404 418 419 424 481 487 505 507 508 509 524 525 533 538 548 559 561 562 563 601 603 604 606 607 688 692 696 702 703 704 705
    "start of the string" (417) 27 31
    STRING_CHARACTER <ch> (418) 23 25 32 33
    STRING_CHARACTER_ESC (419) 24 26
    "end of the string" (420) 27 31
    "{" (421) 30
    "}" (422) 30
    "end of failed eader macro" (423)
    ";}}" (424)
    ";}]" (425)
    ";]]" (426)
    ",]]" (427)
    ",}]" (428)
    UNARY_MINUS (429)
    UNARY_PLUS (430)
    PRE_INC (431)
    PRE_DEC (432)
    LLPIPE (433)
    POST_INC (434)
    POST_DEC (435)
    DEREF (436)


Nonterminals, with rules where they appear

    $accept (209)
        on left: 0
    program (210)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (211)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (212)
        on left: 17 18 19
        on right: 22
    module_name <s> (213)
        on left: 20 21
        on right: 22
    module_declaration (214)
        on left: 22
        on right: 2
    character_sequence <s> (215)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (216)
        on left: 27
        on right: 75 86
    string_builder_body <pExpression> (217)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (218)
        on left: 31
        on right: 362
    reader_character_sequence (219)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (220)
        on left: 35
        on right: 16 361
    $@1 (221)
        on left: 34
        on right: 35
    options_declaration (222)
        on left: 36
        on right: 9
    require_declaration (223)
        on left: 37
        on right: 8
    require_module_name <s> (224)
        on left: 38 39 40 41
        on right: 39 40 41 42 43
    require_module (225)
        on left: 42 43
        on right: 37
    is_public_module <b> (226)
        on left: 44 45
        on right: 42 43
    expect_declaration (227)
        on left: 46
        on right: 7
    expect_list (228)
        on left: 47 48
        on right: 46 48
    expect_error (229)
        on left: 49 50
        on right: 47 48
    expression_label <pExpression> (230)
        on left: 51
        on right: 229
    expression_goto <pExpression> (231)
        on left: 52 53
        on right: 230
    elif_or_static_elif <b> (232)
        on left: 54 55
        on right: 58
    expression_else <pExpression> (233)
        on left: 56 57 58
        on right: 58 68
    if_or_static_if <b> (234)
        on left: 59 60
        on right: 68
    expression_else_one_liner <pExpression> (235)
        on left: 61 62
        on right: 69
    expression_if_one_liner <pExpression> (236)
        on left: 63 64 65 66 67
        on right: 62 69
    expression_if_then_else <pExpression> (237)
        on left: 68 69
        on right: 227
    expression_for_loop <pExpression> (238)
        on left: 70
        on right: 222
    expression_unsafe <pExpression> (239)
        on left: 71
        on right: 219
    expression_while_loop <pExpression> (240)
        on left: 72
        on right: 218
    expression_with <pExpression> (241)
        on left: 73
        on right: 220
    expression_with_alias <pExpression> (242)
        on left: 74
        on right: 221
    annotation_argument_value <aa> (243)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (244)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (245)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (246)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95 96 97
    annotation_argument_list <aaList> (247)
        on left: 94 95
        on right: 36 95 102
    metadata_argument_list <aaList> (248)
        on left: 96 97
        on right: 97 457
    annotation_declaration_name <s> (249)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (250)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (251)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (252)
        on left: 110 111
        on right: 111 113
    optional_annotation_list <faList> (253)
        on left: 112 113
        on right: 204 304 305 473 475 543 558
    optional_function_argument_list <pVarDeclList> (254)
        on left: 114 115 116
        on right: 208 304 305 345 661 668 675
    optional_function_type <pTypeDecl> (255)
        on left: 117 118
        on right: 208 304 305 345 661 668 675
    function_name <s> (256)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (257)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (258)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (259)
        on left: 208
        on right: 210 473 475
    function_declaration <pFuncDecl> (260)
        on left: 210
        on right: 204
    $@2 (261)
        on left: 209
        on right: 210
    expression_block <pExpression> (262)
        on left: 211 212
        on right: 57 58 68 70 71 72 73 210 259 290 305 475
    expr_call_pipe <pExpression> (263)
        on left: 213
        on right: 439
    expression_any <pExpression> (264)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 233
    expressions <pExpression> (265)
        on left: 232 233 234
        on right: 211 212 233 234 306
    optional_expr_list <pExpression> (266)
        on left: 235 236
        on right: 248 627 629
    type_declaration_no_options_list <pTypeDeclList> (267)
        on left: 237 238
        on right: 238 629
    name_in_namespace <s> (268)
        on left: 239 240 241
        on right: 35 98 285 286 287 333 334 337 353 354 355 359 545 599 627 629
    expression_delete <pExpression> (269)
        on left: 242 243
        on right: 216
    new_type_declaration <pTypeDecl> (270)
        on left: 246
        on right: 249 250
    $@3 (271)
        on left: 244
        on right: 246
    $@4 (272)
        on left: 245
        on right: 246
    expr_new <pExpression> (273)
        on left: 247 248 249 250 251
        on right: 432
    expression_break <pExpression> (274)
        on left: 252
        on right: 66 223
    expression_continue <pExpression> (275)
        on left: 253
        on right: 67 224
    expression_return <pExpression> (276)
        on left: 254 255 256
        on right: 64 225
    expression_yield <pExpression> (277)
        on left: 257 258
        on right: 65 226
    expression_try_catch <pExpression> (278)
        on left: 259
        on right: 228
    kwd_let_var_or_nothing <b> (279)
        on left: 260 261 262
        on right: 476
    kwd_let <b> (280)
        on left: 263 264
        on right: 271 272 521 523
    optional_in_scope <b> (281)
        on left: 265 266
        on right: 271 272
    tuple_expansion <pNameList> (282)
        on left: 267 268
        on right: 268 269 270
    tuple_expansion_variable_declaration <pVarDecl> (283)
        on left: 269 270
        on right: 272
    expression_let <pExpression> (284)
        on left: 271 272
        on right: 217
    expr_cast <pExpression> (285)
        on left: 275 278 281
        on right: 431
    $@5 (286)
        on left: 273
        on right: 275
    $@6 (287)
        on left: 274
        on right: 275
    $@7 (288)
        on left: 276
        on right: 278
    $@8 (289)
        on left: 277
        on right: 278
    $@9 (290)
        on left: 279
        on right: 281
    $@10 (291)
        on left: 280
        on right: 281
    expr_type_decl <pExpression> (292)
        on left: 284
        on right: 430
    $@11 (293)
        on left: 282
        on right: 284
    $@12 (294)
        on left: 283
        on right: 284
    expr_type_info <pExpression> (295)
        on left: 285 286 287
        on right: 429
    expr_list <pExpression> (296)
        on left: 288 289
        on right: 70 236 289 334 336 349 355 357 398 447 729 733 743 746 747 750 761 762 763
    block_or_simple_block <pExpression> (297)
        on left: 290 291 292
        on right: 304
    block_or_lambda <i> (298)
        on left: 293 294 295
        on right: 304 305
    capture_entry <pCapt> (299)
        on left: 296 297 298 299
        on right: 300 301
    capture_list <pCaptList> (300)
        on left: 300 301
        on right: 301 303
    optional_capture_list <pCaptList> (301)
        on left: 302 303
        on right: 304 305 410 411
    expr_full_block <pExpression> (302)
        on left: 304
        on right: 435
    expr_full_block_assumed_piped <pExpression> (303)
        on left: 305 306
        on right: 213
    expr_numeric_const <pExpression> (304)
        on left: 307 308 309 310 311 312 313
        on right: 360
    expr_assign <pExpression> (305)
        on left: 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332
        on right: 215
    expr_named_call <pExpression> (306)
        on left: 333 334
        on right: 434
    expr_method_call <pExpression> (307)
        on left: 335 336
        on right: 433
    func_addr_name <pExpression> (308)
        on left: 337 338
        on right: 339 342 345
    func_addr_expr <pExpression> (309)
        on left: 339 342 345
        on right: 405
    $@13 (310)
        on left: 340
        on right: 342
    $@14 (311)
        on left: 341
        on right: 342
    $@15 (312)
        on left: 343
        on right: 345
    $@16 (313)
        on left: 344
        on right: 345
    expr_field <pExpression> (314)
        on left: 346 347 348 349 352
        on right: 366
    $@17 (315)
        on left: 350
        on right: 352
    $@18 (316)
        on left: 351
        on right: 352
    expr_call <pExpression> (317)
        on left: 353 354 355 356 357
        on right: 213 406
    expr <pExpression> (318)
        on left: 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 416 417 418 419 422 423 424 427 428 429 430 431 432 433 434 435 436 437 438 439
        on right
    $@19 (319)
        on left: 414
        on right: 416
    $@20 (320)
        on left: 415
        on right: 416
    $@21 (321)
        on left: 420
        on right: 422
    $@22 (322)
        on left: 421
        on right: 422
    $@23 (323)
        on left: 425
        on right: 427
    $@24 (324)
        on left: 426
        on right: 427
    expr_mtag <pExpression> (325)
        on left: 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455
        on right: 367
    optional_field_annotation <aaList> (326)
        on left: 456 457
        on right: 468 476 515 523
    optional_override <i> (327)
        on left: 458 459 460
        on right: 468 475
    optional_constant <b> (328)
        on left: 461 462
        on right: 473 475
    optional_public_or_private_member_variable <b> (329)
        on left: 463 464 465
        on right: 468 473 475
    optional_static_member_variable <b> (330)
        on left: 466 467
        on right: 468 475
    structure_variable_declaration <pVarDecl> (331)
        on left: 468
        on right: 471
    struct_variable_declaration_list <pVarDeclList> (332)
        on left: 469 471 473 475
        on right: 471 473 475 555
    $@25 (333)
        on left: 470
        on right: 471
    $@26 (334)
        on left: 472
        on right: 473
    $@27 (335)
        on left: 474
        on right: 475
    function_argument_declaration <pVarDecl> (336)
        on left: 476 477
        on right: 478 479
    function_argument_list <pVarDeclList> (337)
        on left: 478 479
        on right: 116 479
    tuple_type <pVarDecl> (338)
        on left: 480 481
        on right: 482 483 486
    tuple_type_list <pVarDeclList> (339)
        on left: 482 483
        on right: 483 678
    tuple_alias_type_list <pVarDeclList> (340)
        on left: 484 485 486
        on right: 485 486 688
    variant_type <pVarDecl> (341)
        on left: 487
        on right: 488 489 492
    variant_type_list <pVarDeclList> (342)
        on left: 488 489
        on right: 489 681
    variant_alias_type_list <pVarDeclList> (343)
        on left: 490 491 492
        on right: 491 492 692
    copy_or_move <b> (344)
        on left: 493 494
        on right: 498 499 702 704 706 708
    variable_declaration <pVarDecl> (345)
        on left: 495 496 497 498 499
        on right: 468 476
    copy_or_move_or_clone <i> (346)
        on left: 500 501 502
        on right: 269 270 511 512
    optional_ref <b> (347)
        on left: 503 504
        on right: 270 512
    let_variable_name_with_pos_list <pNameWithPosList> (348)
        on left: 505 506 507 508 509
        on right: 508 509 510 511 512
    let_variable_declaration <pVarDecl> (349)
        on left: 510 511 512
        on right: 271 515 523
    global_variable_declaration_list <pVarDeclList> (350)
        on left: 513 515
        on right: 515 521
    $@28 (351)
        on left: 514
        on right: 515
    optional_shared <b> (352)
        on left: 516 517
        on right: 22 521 523
    optional_public_or_private_variable <b> (353)
        on left: 518 519 520
        on right: 521 523
    global_let (354)
        on left: 521 523
        on right: 5
    $@29 (355)
        on left: 522
        on right: 523
    enum_expression <pEnumPair> (356)
        on left: 524 525
        on right: 527 528
    enum_list <pEnum> (357)
        on left: 526 527 528
        on right: 528 543
    optional_public_or_private_alias <b> (358)
        on left: 529 530 531
        on right: 533 688 692 696
    single_alias (359)
        on left: 533
        on right: 534
    $@30 (360)
        on left: 532
        on right: 533
    alias_declaration (361)
        on left: 534
        on right: 10
    optional_public_or_private_enum <b> (362)
        on left: 535 536 537
        on right: 543
    enum_name <pEnum> (363)
        on left: 538
        on right: 543
    optional_enum_basic_type_declaration <type> (364)
        on left: 539 540
        on right: 543
    enum_declaration (365)
        on left: 543
        on right: 4
    $@31 (366)
        on left: 541
        on right: 543
    $@32 (367)
        on left: 542
        on right: 543
    optional_structure_parent <s> (368)
        on left: 544 545
        on right: 548
    optional_sealed <b> (369)
        on left: 546 547
        on right: 548
    structure_name <pStructure> (370)
        on left: 548
        on right: 558
    class_or_struct <b> (371)
        on left: 549 550
        on right: 558
    optional_public_or_private_structure <b> (372)
        on left: 551 552 553
        on right: 558
    optional_struct_variable_declaration_list <pVarDeclList> (373)
        on left: 554 555
        on right: 558
    structure_declaration (374)
        on left: 558
        on right: 3
    $@33 (375)
        on left: 556
        on right: 558
    $@34 (376)
        on left: 557
        on right: 558
    variable_name_with_pos_list <pNameWithPosList> (377)
        on left: 559 560 561 562 563
        on right: 70 495 496 497 498 499 562 563 761 762 763
    basic_type_declaration <type> (378)
        on left: 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590
        on right: 356 357 417 423 428 438 619
    enum_basic_type_declaration <type> (379)
        on left: 591 592 593 594 595 596 597 598
        on right: 540
    structure_type_declaration <pTypeDecl> (380)
        on left: 599
        on right: 247 248 622
    auto_type_declaration <pTypeDecl> (381)
        on left: 600 601 602
        on right: 620
    bitfield_bits <pNameList> (382)
        on left: 603 604
        on right: 604 610
    bitfield_alias_bits <pNameList> (383)
        on left: 605 606 607
        on right: 607 696
    bitfield_type_declaration <pTypeDecl> (384)
        on left: 610
        on right: 621
    $@35 (385)
        on left: 608
        on right: 610
    $@36 (386)
        on left: 609
        on right: 610
    table_type_pair <aTypePair> (387)
        on left: 611 612
        on right: 651
    dim_list <pTypeDecl> (388)
        on left: 613 614 615 616
        on right: 615 616 618
    type_declaration_no_options <pTypeDecl> (389)
        on left: 617 618
        on right: 269 275 278 281 342 410 411 416 510 511 682 683 717 720 723 726 732 736 739 742 746 750 755 756
    type_declaration_no_options_no_dim <pTypeDecl> (390)
        on left: 619 620 621 622 625 626 627 629 630 631 632 633 634 635 636 637 638 639 640 641 644 645 648 651 654 655 658 661 662 665 668 669 672 675 678 681
        on right: 617 618 630 631 632 633 634 635 636 637 638 639 640 641 645
    $@37 (391)
        on left: 623
        on right: 625
    $@38 (392)
        on left: 624
        on right: 625
    $@39 (393)
        on left: 628
        on right: 629
    $@40 (394)
        on left: 642
        on right: 644
    $@41 (395)
        on left: 643
        on right: 644
    $@42 (396)
        on left: 646
        on right: 648
    $@43 (397)
        on left: 647
        on right: 648
    $@44 (398)
        on left: 649
        on right: 651
    $@45 (399)
        on left: 650
        on right: 651
    $@46 (400)
        on left: 652
        on right: 654
    $@47 (401)
        on left: 653
        on right: 654
    $@48 (402)
        on left: 656
        on right: 658
    $@49 (403)
        on left: 657
        on right: 658
    $@50 (404)
        on left: 659
        on right: 661
    $@51 (405)
        on left: 660
        on right: 661
    $@52 (406)
        on left: 663
        on right: 665
    $@53 (407)
        on left: 664
        on right: 665
    $@54 (408)
        on left: 666
        on right: 668
    $@55 (409)
        on left: 667
        on right: 668
    $@56 (410)
        on left: 670
        on right: 672
    $@57 (411)
        on left: 671
        on right: 672
    $@58 (412)
        on left: 673
        on right: 675
    $@59 (413)
        on left: 674
        on right: 675
    $@60 (414)
        on left: 676
        on right: 678
    $@61 (415)
        on left: 677
        on right: 678
    $@62 (416)
        on left: 679
        on right: 681
    $@63 (417)
        on left: 680
        on right: 681
    type_declaration <pTypeDecl> (418)
        on left: 682 683 684
        on right: 118 237 238 246 284 422 427 480 481 487 497 498 533 611 612 625 644 648 654 658 665 672 683 684
    tuple_alias_declaration (419)
        on left: 688
        on right: 12
    $@64 (420)
        on left: 685
        on right: 688
    $@65 (421)
        on left: 686
        on right: 688
    $@66 (422)
        on left: 687
        on right: 688
    variant_alias_declaration (423)
        on left: 692
        on right: 11
    $@67 (424)
        on left: 689
        on right: 692
    $@68 (425)
        on left: 690
        on right: 692
    $@69 (426)
        on left: 691
        on right: 692
    bitfield_alias_declaration (427)
        on left: 696
        on right: 13
    $@70 (428)
        on left: 693
        on right: 696
    $@71 (429)
        on left: 694
        on right: 696
    $@72 (430)
        on left: 695
        on right: 696
    make_decl <pExpression> (431)
        on left: 697 698 699 700 701
        on right: 251 363
    make_struct_fields <pMakeStruct> (432)
        on left: 702 703 704 705 706 707 708 709
        on right: 333 334 704 705 708 709 710 711 712
    make_struct_single <pExpression> (433)
        on left: 710
        on right: 250 354
    make_struct_dim <pExpression> (434)
        on left: 711 712
        on right: 712 717 720 723 732 736 739 742
    use_initializer <b> (435)
        on left: 713 714
        on right: 249 250 717 720 726 732 736 739
    make_struct_decl <pExpression> (436)
        on left: 717 720 723 726
        on right: 697
    $@73 (437)
        on left: 715
        on right: 717
    $@74 (438)
        on left: 716
        on right: 717
    $@75 (439)
        on left: 718
        on right: 720
    $@76 (440)
        on left: 719
        on right: 720
    $@77 (441)
        on left: 721
        on right: 723
    $@78 (442)
        on left: 722
        on right: 723
    $@79 (443)
        on left: 724
        on right: 726
    $@80 (444)
        on left: 725
        on right: 726
    make_map_tuple <pExpression> (445)
        on left: 727 728
        on right: 751 752 763
    make_tuple_call <pExpression> (446)
        on left: 729 732
        on right: 701
    $@81 (447)
        on left: 730
        on right: 732
    $@82 (448)
        on left: 731
        on right: 732
    make_dim_decl <pExpression> (449)
        on left: 733 736 739 742 743 746 747 750
        on right: 698
    $@83 (450)
        on left: 734
        on right: 736
    $@84 (451)
        on left: 735
        on right: 736
    $@85 (452)
        on left: 737
        on right: 739
    $@86 (453)
        on left: 738
        on right: 739
    $@87 (454)
        on left: 740
        on right: 742
    $@88 (455)
        on left: 741
        on right: 742
    $@89 (456)
        on left: 744
        on right: 746
    $@90 (457)
        on left: 745
        on right: 746
    $@91 (458)
        on left: 748
        on right: 750
    $@92 (459)
        on left: 749
        on right: 750
    expr_map_tuple_list <pExpression> (460)
        on left: 751 752
        on right: 752 753 754 755 756
    make_table_decl <pExpression> (461)
        on left: 753 754 755 756
        on right: 699
    array_comprehension_where <pExpression> (462)
        on left: 757 758
        on right: 761 762 763
    optional_comma <b> (463)
        on left: 759 760
        on right: 398 543 696 729 733 743 746 747 750 753 754 755 756
    array_comprehension <pExpression> (464)
        on left: 761 762 763
        on right: 700


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  263 kwd_let: "let" .

    $default  reduce using rule 263 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   46 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  534 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 529 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  264 kwd_let: "var" .

    $default  reduce using rule 264 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  696 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 529 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  688 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 529 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  692 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 529 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  543 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"
  558 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 69
    "class"   shift, and go to state 70
    "def"     shift, and go to state 71
    "enum"    shift, and go to state 72

    class_or_struct  go to state 73


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  521 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  523           | kwd_let . optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 74

    $default  reduce using rule 516 (optional_shared)

    optional_shared  go to state 75


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 33

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 34

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 35

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 76

    $default  reduce using rule 92 (annotation_argument)


State 36

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 77

    $default  reduce using rule 36 (options_declaration)


State 38

   49 expect_error: "integer constant" .
   50             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 78

    $default  reduce using rule 49 (expect_error)


State 39

   46 expect_declaration: "expect" expect_list .
   48 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 79

    $default  reduce using rule 46 (expect_declaration)


State 40

   47 expect_list: expect_error .

    $default  reduce using rule 47 (expect_list)


State 41

   38 require_module_name: "name" .

    $default  reduce using rule 38 (require_module_name)


State 42

   39 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 80


State 43

   40 require_module_name: require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"
   42 require_module: require_module_name . is_public_module
   43               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 81
    "public"  shift, and go to state 82
    '/'       shift, and go to state 83
    '.'       shift, and go to state 84

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 85


State 44

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 45

  531 optional_public_or_private_alias: "public" .

    $default  reduce using rule 531 (optional_public_or_private_alias)


State 46

  530 optional_public_or_private_alias: "private" .

    $default  reduce using rule 530 (optional_public_or_private_alias)


State 47

  533 single_alias: optional_public_or_private_alias . "name" $@30 '=' type_declaration

    "name"  shift, and go to state 86


State 48

  534 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 87


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 74

    $default  reduce using rule 516 (optional_shared)

    optional_shared  go to state 88


State 52

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "name"  shift, and go to state 89


State 53

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "name"  shift, and go to state 90


State 54

  692 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "name"  shift, and go to state 91


State 55

  241 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 92


State 56

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"

    "::"  shift, and go to state 93

    $default  reduce using rule 239 (name_in_namespace)


State 57

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 94


State 58

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 59

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 60

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 95
    name_in_namespace             go to state 67


State 61

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 62

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 63

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 98

    $default  reduce using rule 101 (annotation_declaration_basic)


State 64

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 65

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 110 (annotation_list)


State 66

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 102
    ']'  shift, and go to state 103


State 67

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

  550 class_or_struct: "struct" .

    $default  reduce using rule 550 (class_or_struct)


State 70

  549 class_or_struct: "class" .

    $default  reduce using rule 549 (class_or_struct)


State 71

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 104
    "private"  shift, and go to state 105

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 106
    function_declaration                 go to state 107


State 72

  543 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 535 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 110


State 73

  558 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 551 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 74

  517 optional_shared: "shared" .

    $default  reduce using rule 517 (optional_shared)


State 75

  521 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  523           | kwd_let optional_shared . optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 518 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 76

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 77

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 125


State 78

   50 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 79

   48 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 127


State 80

   39 require_module_name: '%' require_module_name .
   40                    | require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"

    '.'  shift, and go to state 84

    $default  reduce using rule 39 (require_module_name)


State 81

   43 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 82

   45 is_public_module: "public" .

    $default  reduce using rule 45 (is_public_module)


State 83

   41 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 129


State 84

   40 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 130


State 85

   42 require_module: require_module_name is_public_module .

    $default  reduce using rule 42 (require_module)


State 86

  533 single_alias: optional_public_or_private_alias "name" . $@30 '=' type_declaration

    $default  reduce using rule 532 ($@30)

    $@30  go to state 131


State 87

  534 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 534 (alias_declaration)


State 88

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 132
    "private"  shift, and go to state 133

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 134


State 89

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    $default  reduce using rule 693 ($@70)

    $@70  go to state 135


State 90

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 685 ($@64)

    $@64  go to state 136


State 91

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 689 ($@67)

    $@67  go to state 137


State 92

  241 name_in_namespace: "::" "name" .

    $default  reduce using rule 241 (name_in_namespace)


State 93

  240 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 138


State 94

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 139

    reader_character_sequence  go to state 140


State 95

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 96

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 97

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101
    ')'   shift, and go to state 141


State 98

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 142


State 99

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 143
    name_in_namespace             go to state 67


State 100

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 104

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 105

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 106

  210 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 209 ($@2)

    $@2  go to state 147


State 107

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 108

  537 optional_public_or_private_enum: "public" .

    $default  reduce using rule 537 (optional_public_or_private_enum)


State 109

  536 optional_public_or_private_enum: "private" .

    $default  reduce using rule 536 (optional_public_or_private_enum)


State 110

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "name"  shift, and go to state 148

    enum_name  go to state 149


State 111

  553 optional_public_or_private_structure: "public" .

    $default  reduce using rule 553 (optional_public_or_private_structure)


State 112

  552 optional_public_or_private_structure: "private" .

    $default  reduce using rule 552 (optional_public_or_private_structure)


State 113

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@33 structure_name $@34 optional_struct_variable_declaration_list

    $default  reduce using rule 556 ($@33)

    $@33  go to state 150


State 114

  520 optional_public_or_private_variable: "public" .

    $default  reduce using rule 520 (optional_public_or_private_variable)


State 115

  519 optional_public_or_private_variable: "private" .

    $default  reduce using rule 519 (optional_public_or_private_variable)


State 116

  521 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  523           | kwd_let optional_shared optional_public_or_private_variable . $@29 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 151

    $default  reduce using rule 522 ($@29)

    $@29  go to state 152


State 117

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 118

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 119

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 120

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 121

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 122

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154

    character_sequence  go to state 155


State 123

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 161
    annotation_argument_value       go to state 162
    annotation_argument_value_list  go to state 163


State 124

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 125

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 126

   50 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 50 (expect_error)


State 127

   48 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 48 (expect_list)


State 128

   43 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 82

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 164


State 129

   41 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 41 (require_module_name)


State 130

   40 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 40 (require_module_name)


State 131

  533 single_alias: optional_public_or_private_alias "name" $@30 . '=' type_declaration

    '='  shift, and go to state 165


State 132

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 133

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 134

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 135

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 . "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "begin of code block"  shift, and go to state 166


State 136

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 . "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "begin of code block"  shift, and go to state 167


State 137

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 . "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "begin of code block"  shift, and go to state 168


State 138

  240 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 240 (name_in_namespace)


State 139

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 140

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 169

    $default  reduce using rule 35 (expr_reader)


State 141

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 142

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 77
    ')'  shift, and go to state 170


State 143

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 144

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 99
    "^^"  shift, and go to state 101

    $default  reduce using rule 106 (annotation_declaration)


State 145

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 99

    $default  reduce using rule 107 (annotation_declaration)


State 146

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 111 (annotation_list)


State 147

  210 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 201


State 148

  538 enum_name: "name" .

    $default  reduce using rule 538 (enum_name)


State 149

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    ':'  shift, and go to state 202

    $default  reduce using rule 539 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 203


State 150

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 . structure_name $@34 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 204

    $default  reduce using rule 546 (optional_sealed)

    optional_sealed  go to state 205
    structure_name   go to state 206


State 151

  521 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 513 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 207


State 152

  523 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 208

    $default  reduce using rule 456 (optional_field_annotation)

    metadata_argument_list     go to state 209
    optional_field_annotation  go to state 210


State 153

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 154

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 155

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212
    "end of the string"   shift, and go to state 213


State 156

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 157

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 158

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 159

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 160

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 161

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 162

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 163

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 214
    ')'  shift, and go to state 215


State 164

   43 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 43 (require_module)


State 165

  533 single_alias: optional_public_or_private_alias "name" $@30 '=' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 264


State 166

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" . $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    $default  reduce using rule 694 ($@71)

    $@71  go to state 265


State 167

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" . $@65 tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 686 ($@65)

    $@65  go to state 266


State 168

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" . $@68 variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 690 ($@68)

    $@68  go to state 267


State 169

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 170

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 171

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 268
    "as"      shift, and go to state 269
    "delete"  shift, and go to state 270
    "+="      shift, and go to state 271
    "-="      shift, and go to state 272
    "/="      shift, and go to state 273
    "*="      shift, and go to state 274
    "%="      shift, and go to state 275
    "&="      shift, and go to state 276
    "|="      shift, and go to state 277
    "^="      shift, and go to state 278
    "<<"      shift, and go to state 279
    ">>"      shift, and go to state 280
    "++"      shift, and go to state 281
    "--"      shift, and go to state 282
    "<="      shift, and go to state 283
    "<<="     shift, and go to state 284
    ">>="     shift, and go to state 285
    ">="      shift, and go to state 286
    "=="      shift, and go to state 287
    "!="      shift, and go to state 288
    "??"      shift, and go to state 289
    "?."      shift, and go to state 290
    "?["      shift, and go to state 291
    ":="      shift, and go to state 292
    "<<<"     shift, and go to state 293
    ">>>"     shift, and go to state 294
    "<<<="    shift, and go to state 295
    ">>>="    shift, and go to state 296
    "&&"      shift, and go to state 297
    "||"      shift, and go to state 298
    "^^"      shift, and go to state 299
    "&&="     shift, and go to state 300
    "||="     shift, and go to state 301
    "^^="     shift, and go to state 302
    ".."      shift, and go to state 303
    '?'       shift, and go to state 304
    '|'       shift, and go to state 305
    '^'       shift, and go to state 306
    '&'       shift, and go to state 307
    '<'       shift, and go to state 308
    '>'       shift, and go to state 309
    '-'       shift, and go to state 310
    '+'       shift, and go to state 311
    '*'       shift, and go to state 312
    '/'       shift, and go to state 313
    '%'       shift, and go to state 314
    '~'       shift, and go to state 315
    '!'       shift, and go to state 316
    '.'       shift, and go to state 317
    '['       shift, and go to state 318


State 172

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 173

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 174

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 175

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 197

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 319


State 198

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 320


State 199

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 200

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 322


State 201

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 324


State 202

  540 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 325
    "uint"    shift, and go to state 326
    "int64"   shift, and go to state 327
    "uint64"  shift, and go to state 328
    "int8"    shift, and go to state 329
    "uint8"   shift, and go to state 330
    "int16"   shift, and go to state 331
    "uint16"  shift, and go to state 332

    enum_basic_type_declaration  go to state 333


State 203

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "begin of code block"  shift, and go to state 334


State 204

  547 optional_sealed: "sealed" .

    $default  reduce using rule 547 (optional_sealed)


State 205

  548 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 335


State 206

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name . $@34 optional_struct_variable_declaration_list

    $default  reduce using rule 557 ($@34)

    $@34  go to state 336


State 207

  515 global_variable_declaration_list: global_variable_declaration_list . $@28 optional_field_annotation let_variable_declaration
  521 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 337

    $default  reduce using rule 514 ($@28)

    $@28  go to state 338


State 208

   96 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 339


State 209

   97 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  457 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 340

    $default  reduce using rule 457 (optional_field_annotation)


State 210

  523 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 341
    "name"  shift, and go to state 342

    let_variable_name_with_pos_list  go to state 343
    let_variable_declaration         go to state 344


State 211

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 212

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 213

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 214

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 122

    string_constant            go to state 161
    annotation_argument_value  go to state 345


State 215

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 216

  625 type_declaration_no_options_no_dim: "type" . '<' $@37 type_declaration '>' $@38

    '<'  shift, and go to state 346


State 217

  648 type_declaration_no_options_no_dim: "array" . '<' $@42 type_declaration '>' $@43

    '<'  shift, and go to state 347


State 218

  651 type_declaration_no_options_no_dim: "table" . '<' $@44 table_type_pair '>' $@45

    '<'  shift, and go to state 348


State 219

  626 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 349


State 220

  654 type_declaration_no_options_no_dim: "iterator" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 350


State 221

  644 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@40 type_declaration '>' $@41

    '<'  shift, and go to state 351


State 222

  564 basic_type_declaration: "bool" .

    $default  reduce using rule 564 (basic_type_declaration)


State 223

  584 basic_type_declaration: "void" .

    $default  reduce using rule 584 (basic_type_declaration)


State 224

  565 basic_type_declaration: "string" .

    $default  reduce using rule 565 (basic_type_declaration)


State 225

  600 auto_type_declaration: "auto" .
  601                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 352

    $default  reduce using rule 600 (auto_type_declaration)


State 226

  566 basic_type_declaration: "int" .

    $default  reduce using rule 566 (basic_type_declaration)


State 227

  570 basic_type_declaration: "int2" .

    $default  reduce using rule 570 (basic_type_declaration)


State 228

  571 basic_type_declaration: "int3" .

    $default  reduce using rule 571 (basic_type_declaration)


State 229

  572 basic_type_declaration: "int4" .

    $default  reduce using rule 572 (basic_type_declaration)


State 230

  573 basic_type_declaration: "uint" .

    $default  reduce using rule 573 (basic_type_declaration)


State 231

  590 basic_type_declaration: "bitfield" .
  610 bitfield_type_declaration: "bitfield" . '<' $@35 bitfield_bits '>' $@36

    '<'  shift, and go to state 353

    $default  reduce using rule 590 (basic_type_declaration)


State 232

  577 basic_type_declaration: "uint2" .

    $default  reduce using rule 577 (basic_type_declaration)


State 233

  578 basic_type_declaration: "uint3" .

    $default  reduce using rule 578 (basic_type_declaration)


State 234

  579 basic_type_declaration: "uint4" .

    $default  reduce using rule 579 (basic_type_declaration)


State 235

  580 basic_type_declaration: "float" .

    $default  reduce using rule 580 (basic_type_declaration)


State 236

  581 basic_type_declaration: "float2" .

    $default  reduce using rule 581 (basic_type_declaration)


State 237

  582 basic_type_declaration: "float3" .

    $default  reduce using rule 582 (basic_type_declaration)


State 238

  583 basic_type_declaration: "float4" .

    $default  reduce using rule 583 (basic_type_declaration)


State 239

  585 basic_type_declaration: "range" .

    $default  reduce using rule 585 (basic_type_declaration)


State 240

  586 basic_type_declaration: "urange" .

    $default  reduce using rule 586 (basic_type_declaration)


State 241

  587 basic_type_declaration: "range64" .

    $default  reduce using rule 587 (basic_type_declaration)


State 242

  588 basic_type_declaration: "urange64" .

    $default  reduce using rule 588 (basic_type_declaration)


State 243

  655 type_declaration_no_options_no_dim: "block" .
  658                                   | "block" . '<' $@48 type_declaration '>' $@49
  661                                   | "block" . '<' $@50 optional_function_argument_list optional_function_type '>' $@51

    '<'  shift, and go to state 354

    $default  reduce using rule 655 (type_declaration_no_options_no_dim)


State 244

  569 basic_type_declaration: "int64" .

    $default  reduce using rule 569 (basic_type_declaration)


State 245

  576 basic_type_declaration: "uint64" .

    $default  reduce using rule 576 (basic_type_declaration)


State 246

  589 basic_type_declaration: "double" .

    $default  reduce using rule 589 (basic_type_declaration)


State 247

  662 type_declaration_no_options_no_dim: "function" .
  665                                   | "function" . '<' $@52 type_declaration '>' $@53
  668                                   | "function" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 355

    $default  reduce using rule 662 (type_declaration_no_options_no_dim)


State 248

  669 type_declaration_no_options_no_dim: "lambda" .
  672                                   | "lambda" . '<' $@56 type_declaration '>' $@57
  675                                   | "lambda" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 356

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 249

  567 basic_type_declaration: "int8" .

    $default  reduce using rule 567 (basic_type_declaration)


State 250

  574 basic_type_declaration: "uint8" .

    $default  reduce using rule 574 (basic_type_declaration)


State 251

  568 basic_type_declaration: "int16" .

    $default  reduce using rule 568 (basic_type_declaration)


State 252

  575 basic_type_declaration: "uint16" .

    $default  reduce using rule 575 (basic_type_declaration)


State 253

  678 type_declaration_no_options_no_dim: "tuple" . '<' $@60 tuple_type_list '>' $@61

    '<'  shift, and go to state 357


State 254

  681 type_declaration_no_options_no_dim: "variant" . '<' $@62 variant_type_list '>' $@63

    '<'  shift, and go to state 358


State 255

  602 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 359


State 256

  627 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  629                                   | '$' . name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 360


State 257

  599 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 599 (structure_type_declaration)


State 258

  619 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 619 (type_declaration_no_options_no_dim)


State 259

  622 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 622 (type_declaration_no_options_no_dim)


State 260

  620 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 620 (type_declaration_no_options_no_dim)


State 261

  621 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 621 (type_declaration_no_options_no_dim)


State 262

  682 type_declaration: type_declaration_no_options .

    $default  reduce using rule 682 (type_declaration)


State 263

  617 type_declaration_no_options: type_declaration_no_options_no_dim .
  618                            | type_declaration_no_options_no_dim . dim_list
  630 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  631                                   | type_declaration_no_options_no_dim . "explicit"
  632                                   | type_declaration_no_options_no_dim . "const"
  633                                   | type_declaration_no_options_no_dim . '-' "const"
  634                                   | type_declaration_no_options_no_dim . '&'
  635                                   | type_declaration_no_options_no_dim . '-' '&'
  636                                   | type_declaration_no_options_no_dim . '#'
  637                                   | type_declaration_no_options_no_dim . "implicit"
  638                                   | type_declaration_no_options_no_dim . '-' '#'
  639                                   | type_declaration_no_options_no_dim . "==" "const"
  640                                   | type_declaration_no_options_no_dim . "==" '&'
  641                                   | type_declaration_no_options_no_dim . '*'
  645                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 361
    "implicit"  shift, and go to state 362
    "explicit"  shift, and go to state 363
    "=="        shift, and go to state 364
    "??"        shift, and go to state 365
    '&'         shift, and go to state 366
    '-'         shift, and go to state 367
    '*'         shift, and go to state 368
    '['         shift, and go to state 369
    '#'         shift, and go to state 370

    $default  reduce using rule 617 (type_declaration_no_options)

    dim_list  go to state 371


State 264

  533 single_alias: optional_public_or_private_alias "name" $@30 '=' type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 533 (single_alias)


State 265

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 . bitfield_alias_bits optional_comma $@72 "end of code block"

    "name"  shift, and go to state 373

    $default  reduce using rule 605 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 374


State 266

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 . tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 484 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 375


State 267

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 . variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 490 (variant_alias_type_list)

    variant_alias_type_list  go to state 376


State 268

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 377

    $default  reduce using rule 173 (function_name)


State 269

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 378

    $default  reduce using rule 174 (function_name)


State 270

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 271

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 272

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 273

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 274

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 275

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 276

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 277

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 278

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 279

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 280

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 281

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 282

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 283

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 284

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 285

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 286

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 287

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 288

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 289

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 290

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 379

    $default  reduce using rule 166 (function_name)


State 291

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 380


State 292

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 293

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 294

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 295

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 296

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 297

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 298

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 299

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 300

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 301

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 302

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 303

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 304

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 381


State 305

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 306

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 307

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 308

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 309

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 310

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 311

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 312

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 313

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 314

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 315

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 316

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 317

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 382

    $default  reduce using rule 165 (function_name)


State 318

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 383


State 319

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 320

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 321

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 384
    ')'   shift, and go to state 385
    '@'   shift, and go to state 208

    $default  reduce using rule 456 (optional_field_annotation)

    metadata_argument_list         go to state 209
    optional_field_annotation      go to state 386
    function_argument_declaration  go to state 387
    function_argument_list         go to state 388


State 322

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 390


State 323

  211 expression_block: "begin of code block" . expressions "end of code block"
  212                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 391


State 324

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 325

  591 enum_basic_type_declaration: "int" .

    $default  reduce using rule 591 (enum_basic_type_declaration)


State 326

  594 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 594 (enum_basic_type_declaration)


State 327

  597 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 328

  598 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 329

  592 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 592 (enum_basic_type_declaration)


State 330

  595 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 595 (enum_basic_type_declaration)


State 331

  593 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 593 (enum_basic_type_declaration)


State 332

  596 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 333

  540 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 540 (optional_enum_basic_type_declaration)


State 334

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@31 enum_list optional_comma $@32 "end of code block"

    $default  reduce using rule 541 ($@31)

    $@31  go to state 392


State 335

  548 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 393

    $default  reduce using rule 544 (optional_structure_parent)

    optional_structure_parent  go to state 394


State 336

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 395

    $default  reduce using rule 554 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 396


State 337

  521 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 521 (global_let)


State 338

  515 global_variable_declaration_list: global_variable_declaration_list $@28 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 208

    $default  reduce using rule 456 (optional_field_annotation)

    metadata_argument_list     go to state 209
    optional_field_annotation  go to state 397


State 339

   96 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 96 (metadata_argument_list)


State 340

   97 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 398


State 341

  506 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 399


State 342

  505 let_variable_name_with_pos_list: "name" .
  507                                | "name" . "aka" "name"

    "aka"  shift, and go to state 400

    $default  reduce using rule 505 (let_variable_name_with_pos_list)


State 343

  508 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  509                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  510 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  511                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  512                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 401
    ':'  shift, and go to state 402
    '&'  shift, and go to state 403

    $default  reduce using rule 503 (optional_ref)

    optional_ref  go to state 404


State 344

  523 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 523 (global_let)


State 345

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 346

  625 type_declaration_no_options_no_dim: "type" '<' . $@37 type_declaration '>' $@38

    $default  reduce using rule 623 ($@37)

    $@37  go to state 405


State 347

  648 type_declaration_no_options_no_dim: "array" '<' . $@42 type_declaration '>' $@43

    $default  reduce using rule 646 ($@42)

    $@42  go to state 406


State 348

  651 type_declaration_no_options_no_dim: "table" '<' . $@44 table_type_pair '>' $@45

    $default  reduce using rule 649 ($@44)

    $@44  go to state 407


State 349

  626 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 472
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 350

  654 type_declaration_no_options_no_dim: "iterator" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 652 ($@46)

    $@46  go to state 481


State 351

  644 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@40 type_declaration '>' $@41

    $default  reduce using rule 642 ($@40)

    $@40  go to state 482


State 352

  601 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 483


State 353

  610 bitfield_type_declaration: "bitfield" '<' . $@35 bitfield_bits '>' $@36

    $default  reduce using rule 608 ($@35)

    $@35  go to state 484


State 354

  658 type_declaration_no_options_no_dim: "block" '<' . $@48 type_declaration '>' $@49
  661                                   | "block" '<' . $@50 optional_function_argument_list optional_function_type '>' $@51

    ':'       reduce using rule 659 ($@50)
    '>'       reduce using rule 659 ($@50)
    '('       reduce using rule 659 ($@50)
    $default  reduce using rule 656 ($@48)

    $@48  go to state 485
    $@50  go to state 486


State 355

  665 type_declaration_no_options_no_dim: "function" '<' . $@52 type_declaration '>' $@53
  668                                   | "function" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 666 ($@54)
    '>'       reduce using rule 666 ($@54)
    '('       reduce using rule 666 ($@54)
    $default  reduce using rule 663 ($@52)

    $@52  go to state 487
    $@54  go to state 488


State 356

  672 type_declaration_no_options_no_dim: "lambda" '<' . $@56 type_declaration '>' $@57
  675                                   | "lambda" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 673 ($@58)
    '>'       reduce using rule 673 ($@58)
    '('       reduce using rule 673 ($@58)
    $default  reduce using rule 670 ($@56)

    $@56  go to state 489
    $@58  go to state 490


State 357

  678 type_declaration_no_options_no_dim: "tuple" '<' . $@60 tuple_type_list '>' $@61

    $default  reduce using rule 676 ($@60)

    $@60  go to state 491


State 358

  681 type_declaration_no_options_no_dim: "variant" '<' . $@62 variant_type_list '>' $@63

    $default  reduce using rule 679 ($@62)

    $@62  go to state 492


State 359

  602 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 493
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 360

  627 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  629                                   | '$' name_in_namespace . '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 494
    '('  shift, and go to state 495


State 361

  632 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 632 (type_declaration_no_options_no_dim)


State 362

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 637 (type_declaration_no_options_no_dim)


State 363

  631 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 631 (type_declaration_no_options_no_dim)


State 364

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  640                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 496
    '&'      shift, and go to state 497


State 365

  645 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 366

  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 367

  630 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  633                                   | type_declaration_no_options_no_dim '-' . "const"
  635                                   | type_declaration_no_options_no_dim '-' . '&'
  638                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 498
    '&'      shift, and go to state 499
    '['      shift, and go to state 500
    '#'      shift, and go to state 501


State 368

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '*' .

    $default  reduce using rule 641 (type_declaration_no_options_no_dim)


State 369

  613 dim_list: '[' . expr ']'
  614         | '[' . ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    ']'                               shift, and go to state 502
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 503
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 370

  636 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 636 (type_declaration_no_options_no_dim)


State 371

  615 dim_list: dim_list . '[' expr ']'
  616         | dim_list . '[' ']'
  618 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 504

    $default  reduce using rule 618 (type_declaration_no_options)


State 372

  683 type_declaration: type_declaration '|' . type_declaration_no_options
  684                 | type_declaration '|' . '#'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256
    '#'          shift, and go to state 505

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 506
    type_declaration_no_options_no_dim  go to state 263


State 373

  606 bitfield_alias_bits: "name" .

    $default  reduce using rule 606 (bitfield_alias_bits)


State 374

  607 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits . optional_comma $@72 "end of code block"

    ','  shift, and go to state 507

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 508


State 375

  485 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  486                      | tuple_alias_type_list . tuple_type "end of expression"
  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list . $@66 "end of code block"

    "type"               shift, and go to state 216
    "array"              shift, and go to state 217
    "table"              shift, and go to state 218
    "typedecl"           shift, and go to state 219
    "iterator"           shift, and go to state 220
    "smart_ptr"          shift, and go to state 221
    "bool"               shift, and go to state 222
    "void"               shift, and go to state 223
    "string"             shift, and go to state 224
    "auto"               shift, and go to state 225
    "int"                shift, and go to state 226
    "int2"               shift, and go to state 227
    "int3"               shift, and go to state 228
    "int4"               shift, and go to state 229
    "uint"               shift, and go to state 230
    "bitfield"           shift, and go to state 231
    "uint2"              shift, and go to state 232
    "uint3"              shift, and go to state 233
    "uint4"              shift, and go to state 234
    "float"              shift, and go to state 235
    "float2"             shift, and go to state 236
    "float3"             shift, and go to state 237
    "float4"             shift, and go to state 238
    "range"              shift, and go to state 239
    "urange"             shift, and go to state 240
    "range64"            shift, and go to state 241
    "urange64"           shift, and go to state 242
    "block"              shift, and go to state 243
    "int64"              shift, and go to state 244
    "uint64"             shift, and go to state 245
    "double"             shift, and go to state 246
    "function"           shift, and go to state 247
    "lambda"             shift, and go to state 248
    "int8"               shift, and go to state 249
    "uint8"              shift, and go to state 250
    "int16"              shift, and go to state 251
    "uint16"             shift, and go to state 252
    "tuple"              shift, and go to state 253
    "variant"            shift, and go to state 254
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 255
    "name"               shift, and go to state 509
    "end of expression"  shift, and go to state 510
    '$'                  shift, and go to state 256

    $default  reduce using rule 687 ($@66)

    name_in_namespace                   go to state 257
    tuple_type                          go to state 511
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 512
    $@66                                go to state 513


State 376

  491 variant_alias_type_list: variant_alias_type_list . "end of expression"
  492                        | variant_alias_type_list . variant_type "end of expression"
  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list . $@69 "end of code block"

    "name"               shift, and go to state 514
    "end of expression"  shift, and go to state 515

    $default  reduce using rule 691 ($@69)

    variant_type  go to state 516
    $@69          go to state 517


State 377

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 378

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 379

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 380

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 381

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 518

    $default  reduce using rule 177 (function_name)


State 382

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 519

    $default  reduce using rule 167 (function_name)


State 383

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 384

  477 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 520


State 385

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 386

  476 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 521
    "var"  shift, and go to state 522

    $default  reduce using rule 262 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 523


State 387

  478 function_argument_list: function_argument_declaration .

    $default  reduce using rule 478 (function_argument_list)


State 388

  116 optional_function_argument_list: '(' function_argument_list . ')'
  479 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 524
    ')'                  shift, and go to state 525


State 389

  118 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 526


State 390

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 391

  211 expression_block: "begin of code block" expressions . "end of code block"
  212                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 527
    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 528
    "if"                              shift, and go to state 529
    "static_if"                       shift, and go to state 530
    "for"                             shift, and go to state 531
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "try"                             shift, and go to state 534
    "table"                           shift, and go to state 417
    "delete"                          shift, and go to state 535
    "deref"                           shift, and go to state 418
    "with"                            shift, and go to state 536
    "assume"                          shift, and go to state 537
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "pass"                            shift, and go to state 539
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 540
    "goto"                            shift, and go to state 541
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    "end of code block"               shift, and go to state 544
    "end of expression"               shift, and go to state 545
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder           go to state 456
    expr_reader              go to state 457
    expression_label         go to state 546
    expression_goto          go to state 547
    if_or_static_if          go to state 548
    expression_if_one_liner  go to state 549
    expression_if_then_else  go to state 550
    expression_for_loop      go to state 551
    expression_unsafe        go to state 552
    expression_while_loop    go to state 553
    expression_with          go to state 554
    expression_with_alias    go to state 555
    expr_call_pipe           go to state 458
    expression_any           go to state 556
    name_in_namespace        go to state 459
    expression_delete        go to state 557
    expr_new                 go to state 460
    expression_break         go to state 558
    expression_continue      go to state 559
    expression_return        go to state 560
    expression_yield         go to state 561
    expression_try_catch     go to state 562
    kwd_let                  go to state 563
    expression_let           go to state 564
    expr_cast                go to state 461
    expr_type_decl           go to state 462
    expr_type_info           go to state 463
    block_or_lambda          go to state 464
    expr_full_block          go to state 465
    expr_numeric_const       go to state 466
    expr_assign              go to state 565
    expr_named_call          go to state 467
    expr_method_call         go to state 468
    func_addr_expr           go to state 469
    expr_field               go to state 470
    expr_call                go to state 471
    expr                     go to state 566
    expr_mtag                go to state 473
    basic_type_declaration   go to state 474
    make_decl                go to state 475
    make_struct_decl         go to state 476
    make_tuple_call          go to state 477
    make_dim_decl            go to state 478
    make_table_decl          go to state 479
    array_comprehension      go to state 480


State 392

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 . enum_list optional_comma $@32 "end of code block"

    "name"  shift, and go to state 567

    $default  reduce using rule 526 (enum_list)

    enum_expression  go to state 568
    enum_list        go to state 569


State 393

  545 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 570


State 394

  548 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 548 (structure_name)


State 395

  555 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 469 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 571


State 396

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list .

    $default  reduce using rule 558 (structure_declaration)


State 397

  515 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 341
    "name"  shift, and go to state 342

    let_variable_name_with_pos_list  go to state 343
    let_variable_declaration         go to state 572


State 398

   97 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 399

  506 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 573
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 400

  507 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 574


State 401

  508 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  509                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 575


State 402

  510 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  511                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 576
    type_declaration_no_options_no_dim  go to state 263


State 403

  504 optional_ref: '&' .

    $default  reduce using rule 504 (optional_ref)


State 404

  512 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 577
    ":="  shift, and go to state 578
    '='   shift, and go to state 579

    copy_or_move_or_clone  go to state 580


State 405

  625 type_declaration_no_options_no_dim: "type" '<' $@37 . type_declaration '>' $@38

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 581


State 406

  648 type_declaration_no_options_no_dim: "array" '<' $@42 . type_declaration '>' $@43

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 582


State 407

  651 type_declaration_no_options_no_dim: "table" '<' $@44 . table_type_pair '>' $@45

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    table_type_pair                     go to state 583
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 584


State 408

  717 make_struct_decl: "struct" . '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 585


State 409

  720 make_struct_decl: "class" . '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 586


State 410

  364 expr: "true" .

    $default  reduce using rule 364 (expr)


State 411

  365 expr: "false" .

    $default  reduce using rule 365 (expr)


State 412

  247 expr_new: "new" . structure_type_declaration
  248         | "new" . structure_type_declaration '(' optional_expr_list ')'
  249         | "new" . new_type_declaration '(' use_initializer ')'
  250         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  251         | "new" . make_decl

    "struct"               shift, and go to state 408
    "class"                shift, and go to state 409
    "array"                shift, and go to state 415
    "table"                shift, and go to state 417
    "fixed_array"          shift, and go to state 423
    "default"              shift, and go to state 424
    "tuple"                shift, and go to state 426
    "variant"              shift, and go to state 427
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 446
    '<'                    shift, and go to state 587
    '['                    shift, and go to state 452

    name_in_namespace           go to state 257
    new_type_declaration        go to state 588
    structure_type_declaration  go to state 589
    make_decl                   go to state 590
    make_struct_decl            go to state 476
    make_tuple_call             go to state 477
    make_dim_decl               go to state 478
    make_table_decl             go to state 479
    array_comprehension         go to state 480


State 413

  285 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  286               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  287               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 591


State 414

  284 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 592


State 415

  736 make_dim_decl: "array" . "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'
  739              | "array" . "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'
  742              | "array" . "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'
  743              | "array" . '(' expr_list optional_comma ')'
  746              | "array" . '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 593
    "tuple"    shift, and go to state 594
    "variant"  shift, and go to state 595
    '<'        shift, and go to state 596
    '('        shift, and go to state 597


State 416

  358 expr: "null" .

    $default  reduce using rule 358 (expr)


State 417

  754 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  755                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  756                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 598
    '('  shift, and go to state 599


State 418

  408 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 600


State 419

  275 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 601


State 420

  278 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 602


State 421

  409 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 603


State 422

  281 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 604


State 423

  747 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  750              | "fixed_array" . '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 605
    '('  shift, and go to state 606


State 424

  726 make_struct_decl: "default" . '<' $@79 type_declaration_no_options '>' $@80 use_initializer

    '<'  shift, and go to state 607


State 425

  590 basic_type_declaration: "bitfield" .

    $default  reduce using rule 590 (basic_type_declaration)


State 426

  729 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  732                | "tuple" . '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 608
    '('  shift, and go to state 609


State 427

  723 make_struct_decl: "variant" . '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

    '<'  shift, and go to state 610


State 428

  410 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  411     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 611


State 429

  394 expr: "++" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 612
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 430

  395 expr: "--" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 613
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 431

  440 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 614


State 432

  441 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 615


State 433

  442 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 616


State 434

  443 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 617


State 435

  444 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 618


State 436

  446 expr_mtag: "$c" . '(' expr ')' '(' ')'
  447          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 619


State 437

  445 expr_mtag: "..." .

    $default  reduce using rule 445 (expr_mtag)


State 438

  307 expr_numeric_const: "integer constant" .

    $default  reduce using rule 307 (expr_numeric_const)


State 439

  309 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 309 (expr_numeric_const)


State 440

  308 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 308 (expr_numeric_const)


State 441

  310 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 442

  311 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 443

  312 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 444

  313 expr_numeric_const: "double constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 445

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 620


State 446

  753 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  763 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 621
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 622
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 623
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 624
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 447

  371 expr: '-' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 625
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 448

  370 expr: '+' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 626
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 449

  407 expr: '*' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 627
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 450

  369 expr: '~' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 628
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 451

  368 expr: '!' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 629
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 452

  733 make_dim_decl: '[' . expr_list optional_comma ']'
  761 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  762                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 630
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "iterator"                        shift, and go to state 631
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 632
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 453

  398 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 634
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 454

  293 block_or_lambda: '$' .

    $default  reduce using rule 293 (block_or_lambda)


State 455

  294 block_or_lambda: '@' .
  295                | '@' . '@'
  339 func_addr_expr: '@' . '@' func_addr_name
  342               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  345               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  455 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 635

    $default  reduce using rule 294 (block_or_lambda)


State 456

  362 expr: string_builder .

    $default  reduce using rule 362 (expr)


State 457

  361 expr: expr_reader .

    $default  reduce using rule 361 (expr)


State 458

  439 expr: expr_call_pipe .

    $default  reduce using rule 439 (expr)


State 459

  333 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  334                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  353 expr_call: name_in_namespace . '(' ')'
  354          | name_in_namespace . '(' make_struct_single ')'
  355          | name_in_namespace . '(' expr_list ')'
  359 expr: name_in_namespace .

    '('  shift, and go to state 636

    $default  reduce using rule 359 (expr)


State 460

  432 expr: expr_new .

    $default  reduce using rule 432 (expr)


State 461

  431 expr: expr_cast .

    $default  reduce using rule 431 (expr)


State 462

  430 expr: expr_type_decl .

    $default  reduce using rule 430 (expr)


State 463

  429 expr: expr_type_info .

    $default  reduce using rule 429 (expr)


State 464

  304 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 112 (optional_annotation_list)]
    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 637


State 465

  435 expr: expr_full_block .

    $default  reduce using rule 435 (expr)


State 466

  360 expr: expr_numeric_const .

    $default  reduce using rule 360 (expr)


State 467

  434 expr: expr_named_call .

    $default  reduce using rule 434 (expr)


State 468

  433 expr: expr_method_call .

    $default  reduce using rule 433 (expr)


State 469

  405 expr: func_addr_expr .

    $default  reduce using rule 405 (expr)


State 470

  366 expr: expr_field .

    $default  reduce using rule 366 (expr)


State 471

  213 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  406 expr: expr_call .

    "begin of code block"  shift, and go to state 638
    '$'                    shift, and go to state 454
    '@'                    shift, and go to state 639

    $default  reduce using rule 406 (expr)

    block_or_lambda                go to state 640
    expr_full_block_assumed_piped  go to state 641


State 472

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  626 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 677


State 473

  367 expr: expr_mtag .

    $default  reduce using rule 367 (expr)


State 474

  356 expr_call: basic_type_declaration . '(' ')'
  357          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 678


State 475

  363 expr: make_decl .

    $default  reduce using rule 363 (expr)


State 476

  697 make_decl: make_struct_decl .

    $default  reduce using rule 697 (make_decl)


State 477

  701 make_decl: make_tuple_call .

    $default  reduce using rule 701 (make_decl)


State 478

  698 make_decl: make_dim_decl .

    $default  reduce using rule 698 (make_decl)


State 479

  699 make_decl: make_table_decl .

    $default  reduce using rule 699 (make_decl)


State 480

  700 make_decl: array_comprehension .

    $default  reduce using rule 700 (make_decl)


State 481

  654 type_declaration_no_options_no_dim: "iterator" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 679


State 482

  644 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 . type_declaration '>' $@41

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 680


State 483

  601 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 681


State 484

  610 bitfield_type_declaration: "bitfield" '<' $@35 . bitfield_bits '>' $@36

    "name"  shift, and go to state 682

    bitfield_bits  go to state 683


State 485

  658 type_declaration_no_options_no_dim: "block" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 684


State 486

  661 type_declaration_no_options_no_dim: "block" '<' $@50 . optional_function_argument_list optional_function_type '>' $@51

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 685


State 487

  665 type_declaration_no_options_no_dim: "function" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 686


State 488

  668 type_declaration_no_options_no_dim: "function" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 687


State 489

  672 type_declaration_no_options_no_dim: "lambda" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 688


State 490

  675 type_declaration_no_options_no_dim: "lambda" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 689


State 491

  678 type_declaration_no_options_no_dim: "tuple" '<' $@60 . tuple_type_list '>' $@61

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 509
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    tuple_type                          go to state 690
    tuple_type_list                     go to state 691
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 512


State 492

  681 type_declaration_no_options_no_dim: "variant" '<' $@62 . variant_type_list '>' $@63

    "name"  shift, and go to state 514

    variant_type       go to state 692
    variant_type_list  go to state 693


State 493

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  602 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 694


State 494

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 628 ($@39)

    $@39  go to state 695


State 495

  627 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    optional_expr_list      go to state 696
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 697
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 496

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 497

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 498

  633 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 633 (type_declaration_no_options_no_dim)


State 499

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 635 (type_declaration_no_options_no_dim)


State 500

  630 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 698


State 501

  638 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 502

  614 dim_list: '[' ']' .

    $default  reduce using rule 614 (dim_list)


State 503

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  613 dim_list: '[' expr . ']'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ']'    shift, and go to state 699


State 504

  615 dim_list: dim_list '[' . expr ']'
  616         | dim_list '[' . ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    ']'                               shift, and go to state 700
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 701
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 505

  684 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 684 (type_declaration)


State 506

  683 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 683 (type_declaration)


State 507

  607 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  760 optional_comma: ',' .

    "name"  shift, and go to state 702

    $default  reduce using rule 760 (optional_comma)


State 508

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma . $@72 "end of code block"

    $default  reduce using rule 695 ($@72)

    $@72  go to state 703


State 509

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"
  481 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 93
    ':'   shift, and go to state 704

    $default  reduce using rule 239 (name_in_namespace)


State 510

  485 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 485 (tuple_alias_type_list)


State 511

  486 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 705


State 512

  480 tuple_type: type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 480 (tuple_type)


State 513

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 . "end of code block"

    "end of code block"  shift, and go to state 706


State 514

  487 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 707


State 515

  491 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 491 (variant_alias_type_list)


State 516

  492 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 708


State 517

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 . "end of code block"

    "end of code block"  shift, and go to state 709


State 518

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 519

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 520

  477 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 710
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 521

  260 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 260 (kwd_let_var_or_nothing)


State 522

  261 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 261 (kwd_let_var_or_nothing)


State 523

  476 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 711
    "name"  shift, and go to state 712

    variable_declaration         go to state 713
    variable_name_with_pos_list  go to state 714


State 524

  479 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 384
    '@'   shift, and go to state 208

    $default  reduce using rule 456 (optional_field_annotation)

    metadata_argument_list         go to state 209
    optional_field_annotation      go to state 386
    function_argument_declaration  go to state 715


State 525

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 526

  118 optional_function_type: ':' type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 118 (optional_function_type)


State 527

  234 expressions: expressions error .

    $default  reduce using rule 234 (expressions)


State 528

   72 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 716


State 529

   59 if_or_static_if: "if" .

    $default  reduce using rule 59 (if_or_static_if)


State 530

   60 if_or_static_if: "static_if" .

    $default  reduce using rule 60 (if_or_static_if)


State 531

   70 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 717


State 532

  254 expression_return: "return" .
  255                  | "return" . expr
  256                  | "return" . "<-" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "<-"                              shift, and go to state 718
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 254 (expression_return)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 719
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 533

  252 expression_break: "break" .

    $default  reduce using rule 252 (expression_break)


State 534

  259 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 720


State 535

  242 expression_delete: "delete" . expr
  243                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "explicit"                        shift, and go to state 721
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 722
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 536

   73 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 723


State 537

   74 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 724


State 538

  253 expression_continue: "continue" .

    $default  reduce using rule 253 (expression_continue)


State 539

  231 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 725


State 540

   51 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 726


State 541

   52 expression_goto: "goto" . "label" "integer constant"
   53                | "goto" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 727
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 728
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 542

   71 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 729


State 543

  257 expression_yield: "yield" . expr
  258                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "<-"                              shift, and go to state 730
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 731
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 544

  211 expression_block: "begin of code block" expressions "end of code block" .
  212                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 732

    $default  reduce using rule 211 (expression_block)


State 545

  214 expression_any: "end of expression" .

    $default  reduce using rule 214 (expression_any)


State 546

  229 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 733


State 547

  230 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 734


State 548

   68 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 735


State 549

   69 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 736


State 550

  227 expression_any: expression_if_then_else .

    $default  reduce using rule 227 (expression_any)


State 551

  222 expression_any: expression_for_loop .

    $default  reduce using rule 222 (expression_any)


State 552

  219 expression_any: expression_unsafe .

    $default  reduce using rule 219 (expression_any)


State 553

  218 expression_any: expression_while_loop .

    $default  reduce using rule 218 (expression_any)


State 554

  220 expression_any: expression_with .

    $default  reduce using rule 220 (expression_any)


State 555

  221 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 737


State 556

  233 expressions: expressions expression_any .

    $default  reduce using rule 233 (expressions)


State 557

  216 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 738


State 558

   66 expression_if_one_liner: expression_break .
  223 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 739

    $default  reduce using rule 66 (expression_if_one_liner)


State 559

   67 expression_if_one_liner: expression_continue .
  224 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 740

    $default  reduce using rule 67 (expression_if_one_liner)


State 560

   64 expression_if_one_liner: expression_return .
  225 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 741

    $default  reduce using rule 64 (expression_if_one_liner)


State 561

   65 expression_if_one_liner: expression_yield .
  226 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 742

    $default  reduce using rule 65 (expression_if_one_liner)


State 562

  228 expression_any: expression_try_catch .

    $default  reduce using rule 228 (expression_any)


State 563

  271 expression_let: kwd_let . optional_in_scope let_variable_declaration
  272               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 743

    $default  reduce using rule 266 (optional_in_scope)

    optional_in_scope  go to state 744


State 564

  217 expression_any: expression_let .

    $default  reduce using rule 217 (expression_any)


State 565

  215 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 745


State 566

   63 expression_if_one_liner: expr .
  314 expr_assign: expr .
  315            | expr . '=' expr
  316            | expr . "<-" expr
  317            | expr . ":=" expr
  318            | expr . "&=" expr
  319            | expr . "|=" expr
  320            | expr . "^=" expr
  321            | expr . "&&=" expr
  322            | expr . "||=" expr
  323            | expr . "^^=" expr
  324            | expr . "+=" expr
  325            | expr . "-=" expr
  326            | expr . "*=" expr
  327            | expr . "/=" expr
  328            | expr . "%=" expr
  329            | expr . "<<=" expr
  330            | expr . ">>=" expr
  331            | expr . "<<<=" expr
  332            | expr . ">>>=" expr
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 642
    "as"    shift, and go to state 643
    "+="    shift, and go to state 746
    "-="    shift, and go to state 747
    "/="    shift, and go to state 748
    "*="    shift, and go to state 749
    "%="    shift, and go to state 750
    "&="    shift, and go to state 751
    "|="    shift, and go to state 752
    "^="    shift, and go to state 753
    "<<"    shift, and go to state 644
    ">>"    shift, and go to state 645
    "++"    shift, and go to state 646
    "--"    shift, and go to state 647
    "<="    shift, and go to state 648
    "<<="   shift, and go to state 754
    ">>="   shift, and go to state 755
    ">="    shift, and go to state 649
    "=="    shift, and go to state 650
    "!="    shift, and go to state 651
    "->"    shift, and go to state 652
    "<-"    shift, and go to state 756
    "??"    shift, and go to state 653
    "?."    shift, and go to state 654
    "?["    shift, and go to state 655
    "<|"    shift, and go to state 656
    "|>"    shift, and go to state 657
    ":="    shift, and go to state 757
    "<<<"   shift, and go to state 658
    ">>>"   shift, and go to state 659
    "<<<="  shift, and go to state 758
    ">>>="  shift, and go to state 759
    "&&"    shift, and go to state 660
    "||"    shift, and go to state 661
    "^^"    shift, and go to state 662
    "&&="   shift, and go to state 760
    "||="   shift, and go to state 761
    "^^="   shift, and go to state 762
    ".."    shift, and go to state 663
    '='     shift, and go to state 763
    '?'     shift, and go to state 664
    '|'     shift, and go to state 665
    '^'     shift, and go to state 666
    '&'     shift, and go to state 667
    '<'     shift, and go to state 668
    '>'     shift, and go to state 669
    '-'     shift, and go to state 670
    '+'     shift, and go to state 671
    '*'     shift, and go to state 672
    '/'     shift, and go to state 673
    '%'     shift, and go to state 674
    '.'     shift, and go to state 675
    '['     shift, and go to state 676

    "end of expression"  reduce using rule 314 (expr_assign)
    $default             reduce using rule 63 (expression_if_one_liner)


State 567

  524 enum_expression: "name" .
  525                | "name" . '=' expr

    '='  shift, and go to state 764

    $default  reduce using rule 524 (enum_expression)


State 568

  527 enum_list: enum_expression .

    $default  reduce using rule 527 (enum_list)


State 569

  528 enum_list: enum_list . ',' enum_expression
  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list . optional_comma $@32 "end of code block"

    ','  shift, and go to state 765

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 766


State 570

  545 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 545 (optional_structure_parent)


State 571

  471 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  473                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  475                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  555 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 767
    '['                  shift, and go to state 15

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 470 ($@25)

    optional_annotation_list  go to state 768
    $@25                      go to state 769


State 572

  515 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 515 (global_variable_declaration_list)


State 573

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  506 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 770


State 574

  507 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 507 (let_variable_name_with_pos_list)


State 575

  508 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  509                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 771

    $default  reduce using rule 508 (let_variable_name_with_pos_list)


State 576

  510 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  511                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 577
    ":="                 shift, and go to state 578
    "end of expression"  shift, and go to state 772
    '='                  shift, and go to state 579

    copy_or_move_or_clone  go to state 773


State 577

  501 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 501 (copy_or_move_or_clone)


State 578

  502 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 502 (copy_or_move_or_clone)


State 579

  500 copy_or_move_or_clone: '=' .

    $default  reduce using rule 500 (copy_or_move_or_clone)


State 580

  512 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 774
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 581

  625 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration . '>' $@38
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 775


State 582

  648 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration . '>' $@43
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 776


State 583

  651 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair . '>' $@45

    '>'  shift, and go to state 777


State 584

  611 table_type_pair: type_declaration .
  612                | type_declaration . "end of expression" type_declaration
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 778
    '|'                  shift, and go to state 372

    $default  reduce using rule 611 (table_type_pair)


State 585

  717 make_struct_decl: "struct" '<' . $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 715 ($@73)

    $@73  go to state 779


State 586

  720 make_struct_decl: "class" '<' . $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 718 ($@75)

    $@75  go to state 780


State 587

  246 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 244 ($@3)

    $@3  go to state 781


State 588

  249 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  250         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 782


State 589

  247 expr_new: "new" structure_type_declaration .
  248         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 783

    $default  reduce using rule 247 (expr_new)


State 590

  251 expr_new: "new" make_decl .

    $default  reduce using rule 251 (expr_new)


State 591

  285 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  286               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 784
    '('  shift, and go to state 785


State 592

  284 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 282 ($@11)

    $@11  go to state 786


State 593

  736 make_dim_decl: "array" "struct" . '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 787


State 594

  739 make_dim_decl: "array" "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 788


State 595

  742 make_dim_decl: "array" "variant" . '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    '<'  shift, and go to state 789


State 596

  746 make_dim_decl: "array" '<' . $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 744 ($@89)

    $@89  go to state 790


State 597

  743 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 791
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 598

  755 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  756                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 792
    type_declaration_no_options_no_dim  go to state 263


State 599

  754 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 622
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 623
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 793
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 600

  408 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 794
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 601

  275 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 273 ($@5)

    $@5  go to state 795


State 602

  278 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 276 ($@7)

    $@7  go to state 796


State 603

  409 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 797
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 604

  281 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 279 ($@9)

    $@9  go to state 798


State 605

  750 make_dim_decl: "fixed_array" '<' . $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 748 ($@91)

    $@91  go to state 799


State 606

  747 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 800
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 607

  726 make_struct_decl: "default" '<' . $@79 type_declaration_no_options '>' $@80 use_initializer

    $default  reduce using rule 724 ($@79)

    $@79  go to state 801


State 608

  732 make_tuple_call: "tuple" '<' . $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 730 ($@81)

    $@81  go to state 802


State 609

  729 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 803
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 610

  723 make_struct_decl: "variant" '<' . $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

    $default  reduce using rule 721 ($@77)

    $@77  go to state 804


State 611

  410 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  411     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 805
    type_declaration_no_options_no_dim  go to state 263


State 612

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  394     | "++" expr .
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 394 (expr)


State 613

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  395     | "--" expr .
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 395 (expr)


State 614

  440 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 806
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 615

  441 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 807
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 616

  442 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 808
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 617

  443 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 809
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 618

  444 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 810
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 619

  446 expr_mtag: "$c" '(' . expr ')' '(' ')'
  447          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 811
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 620

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 812
    "{"                   shift, and go to state 813

    character_sequence  go to state 814


State 621

  763 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 711
    "name"  shift, and go to state 712

    variable_name_with_pos_list  go to state 815


State 622

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  727 make_map_tuple: expr . "=>" expr
  728               | expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "=>"   shift, and go to state 816
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 728 (make_map_tuple)


State 623

  751 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 751 (expr_map_tuple_list)


State 624

  752 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  753 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 817

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 818


State 625

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  371 expr: '-' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 371 (expr)


State 626

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  370 expr: '+' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 370 (expr)


State 627

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  407     | '*' expr .
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 407 (expr)


State 628

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  369 expr: '~' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 369 (expr)


State 629

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  368 expr: '!' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 368 (expr)


State 630

  761 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 711
    "name"  shift, and go to state 712

    variable_name_with_pos_list  go to state 819


State 631

  762 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 820


State 632

  289 expr_list: expr_list . ',' expr
  733 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 822


State 633

  288 expr_list: expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 288 (expr_list)


State 634

  289 expr_list: expr_list . ',' expr
  398 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 823


State 635

  295 block_or_lambda: '@' '@' .
  339 func_addr_expr: '@' '@' . func_addr_name
  342               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  345               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  455 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 824
    "$c"    shift, and go to state 825
    "name"  shift, and go to state 56
    '<'     shift, and go to state 826

    $default  reduce using rule 295 (block_or_lambda)

    name_in_namespace  go to state 827
    func_addr_name     go to state 828


State 636

  333 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  334                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  353 expr_call: name_in_namespace '(' . ')'
  354          | name_in_namespace '(' . make_struct_single ')'
  355          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "$f"                              shift, and go to state 829
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 830
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 831
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 832
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 833
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_fields      go to state 834
    make_struct_single      go to state 835
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 637

  304 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 836

    $default  reduce using rule 302 (optional_capture_list)

    optional_capture_list  go to state 837


State 638

  306 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 838


State 639

  294 block_or_lambda: '@' .
  295                | '@' . '@'

    '@'  shift, and go to state 839

    $default  reduce using rule 294 (block_or_lambda)


State 640

  305 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 112 (optional_annotation_list)]
    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 840


State 641

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 213 (expr_call_pipe)


State 642

  416 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr "is" . basic_type_declaration
  418     | expr "is" . "name"
  454 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 841
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 425
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 842
    "name"      shift, and go to state 843

    basic_type_declaration  go to state 844


State 643

  419 expr: expr "as" . "name"
  422     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  423     | expr "as" . basic_type_declaration
  452 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 845
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 425
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 846
    "name"      shift, and go to state 847

    basic_type_declaration  go to state 848


State 644

  372 expr: expr "<<" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 849
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 645

  373 expr: expr ">>" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 850
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 646

  396 expr: expr "++" .

    $default  reduce using rule 396 (expr)


State 647

  397 expr: expr "--" .

    $default  reduce using rule 397 (expr)


State 648

  385 expr: expr "<=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 851
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 649

  386 expr: expr ">=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 852
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 650

  383 expr: expr "==" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 853
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 651

  384 expr: expr "!=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 854
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 652

  335 expr_method_call: expr "->" . "name" '(' ')'
  336                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 855


State 653

  412 expr: expr "??" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 856
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 654

  403 expr: expr "?." . "name"
  449 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 857
    "name"  shift, and go to state 858


State 655

  401 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 859
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 656

  436 expr: expr "<|" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 860
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 657

  437 expr: expr "|>" . expr
  438     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 861
    expr_mtag               go to state 473
    basic_type_declaration  go to state 862
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 658

  374 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 863
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 659

  375 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 864
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 660

  390 expr: expr "&&" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 865
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 661

  391 expr: expr "||" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 866
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 662

  392 expr: expr "^^" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 867
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 663

  393 expr: expr ".." . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 868
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 664

  413 expr: expr '?' . expr ':' expr
  424     | expr '?' . "as" "name"
  427     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr '?' . "as" basic_type_declaration
  453 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "as"                              shift, and go to state 869
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 870
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 665

  388 expr: expr '|' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 871
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 666

  389 expr: expr '^' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 872
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 667

  387 expr: expr '&' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 873
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 668

  381 expr: expr '<' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 874
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 669

  382 expr: expr '>' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 875
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 670

  377 expr: expr '-' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 876
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 671

  376 expr: expr '+' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 877
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 672

  378 expr: expr '*' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 878
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 673

  379 expr: expr '/' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 879
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 674

  380 expr: expr '%' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 880
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 675

  346 expr_field: expr '.' . "name"
  347           | expr '.' . '.' "name"
  348           | expr '.' . "name" '(' ')'
  349           | expr '.' . "name" '(' expr_list ')'
  352           | expr '.' . $@17 error $@18
  400 expr: expr '.' . '[' expr ']'
  402     | expr '.' . "?[" expr ']'
  404     | expr '.' . "?." "name"
  448 expr_mtag: expr '.' . "$f" '(' expr ')'
  450          | expr '.' . '.' "$f" '(' expr ')'
  451          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 881
    "?["    shift, and go to state 882
    "$f"    shift, and go to state 883
    "name"  shift, and go to state 884
    '.'     shift, and go to state 885
    '['     shift, and go to state 886

    $default  reduce using rule 350 ($@17)

    $@17  go to state 887


State 676

  399 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 888
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 677

  626 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 626 (type_declaration_no_options_no_dim)


State 678

  356 expr_call: basic_type_declaration '(' . ')'
  357          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 889
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 890
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 679

  654 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration . '>' $@47
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 891


State 680

  644 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration . '>' $@41
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 892


State 681

  601 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 601 (auto_type_declaration)


State 682

  603 bitfield_bits: "name" .

    $default  reduce using rule 603 (bitfield_bits)


State 683

  604 bitfield_bits: bitfield_bits . "end of expression" "name"
  610 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits . '>' $@36

    "end of expression"  shift, and go to state 893
    '>'                  shift, and go to state 894


State 684

  658 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration . '>' $@49
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 895


State 685

  661 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list . optional_function_type '>' $@51

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 896


State 686

  665 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration . '>' $@53
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 897


State 687

  668 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 898


State 688

  672 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration . '>' $@57
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 899


State 689

  675 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 900


State 690

  482 tuple_type_list: tuple_type .

    $default  reduce using rule 482 (tuple_type_list)


State 691

  483 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  678 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list . '>' $@61

    "end of expression"  shift, and go to state 901
    '>'                  shift, and go to state 902


State 692

  488 variant_type_list: variant_type .

    $default  reduce using rule 488 (variant_type_list)


State 693

  489 variant_type_list: variant_type_list . "end of expression" variant_type
  681 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list . '>' $@63

    "end of expression"  shift, and go to state 903
    '>'                  shift, and go to state 904


State 694

  602 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 602 (auto_type_declaration)


State 695

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    type_declaration_no_options_list    go to state 905
    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 906


State 696

  627 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 907


State 697

  236 optional_expr_list: expr_list .
  289 expr_list: expr_list . ',' expr

    ','  shift, and go to state 908

    $default  reduce using rule 236 (optional_expr_list)


State 698

  630 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 630 (type_declaration_no_options_no_dim)


State 699

  613 dim_list: '[' expr ']' .

    $default  reduce using rule 613 (dim_list)


State 700

  616 dim_list: dim_list '[' ']' .

    $default  reduce using rule 616 (dim_list)


State 701

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  615 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ']'    shift, and go to state 909


State 702

  607 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 607 (bitfield_alias_bits)


State 703

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 . "end of code block"

    "end of code block"  shift, and go to state 910


State 704

  481 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 911


State 705

  486 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 486 (tuple_alias_type_list)


State 706

  688 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block" .

    $default  reduce using rule 688 (tuple_alias_declaration)


State 707

  487 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 912


State 708

  492 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 492 (variant_alias_type_list)


State 709

  692 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block" .

    $default  reduce using rule 692 (variant_alias_declaration)


State 710

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  477 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 913


State 711

  560 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 914


State 712

  559 variable_name_with_pos_list: "name" .
  561                            | "name" . "aka" "name"

    "aka"  shift, and go to state 915

    $default  reduce using rule 559 (variable_name_with_pos_list)


State 713

  476 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 476 (function_argument_declaration)


State 714

  495 variable_declaration: variable_name_with_pos_list .
  496                     | variable_name_with_pos_list . '&'
  497                     | variable_name_with_pos_list . ':' type_declaration
  498                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  499                     | variable_name_with_pos_list . copy_or_move expr
  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 916
    ','   shift, and go to state 917
    '='   shift, and go to state 918
    ':'   shift, and go to state 919
    '&'   shift, and go to state 920

    $default  reduce using rule 495 (variable_declaration)

    copy_or_move  go to state 921


State 715

  479 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 479 (function_argument_list)


State 716

   72 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 922
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 717

   70 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 711
    "name"  shift, and go to state 712

    variable_name_with_pos_list  go to state 923


State 718

  256 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 924
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 719

  255 expression_return: "return" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 255 (expression_return)


State 720

  259 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 925


State 721

  243 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 926
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 722

  242 expression_delete: "delete" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 242 (expression_delete)


State 723

   73 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 927
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 724

   74 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 928


State 725

  231 expression_any: "pass" "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 726

   51 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 929


State 727

   52 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 930


State 728

   53 expression_goto: "goto" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 53 (expression_goto)


State 729

   71 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 71 (expression_unsafe)


State 730

  258 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 931
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 731

  257 expression_yield: "yield" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 257 (expression_yield)


State 732

  212 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 932


State 733

  229 expression_any: expression_label "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 734

  230 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 735

   68 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 933
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 736

   69 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 934


State 737

  221 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 738

  216 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 739

  223 expression_any: expression_break "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 740

  224 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 741

  225 expression_any: expression_return "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 742

  226 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 743

  265 optional_in_scope: "inscope" .

    $default  reduce using rule 265 (optional_in_scope)


State 744

  271 expression_let: kwd_let optional_in_scope . let_variable_declaration
  272               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 341
    "name"  shift, and go to state 342
    '('     shift, and go to state 935

    tuple_expansion_variable_declaration  go to state 936
    let_variable_name_with_pos_list       go to state 343
    let_variable_declaration              go to state 937


State 745

  215 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 746

  324 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 938
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 747

  325 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 939
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 748

  327 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 940
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 749

  326 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 941
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 750

  328 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 942
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 751

  318 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 943
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 752

  319 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 944
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 753

  320 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 945
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 754

  329 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 946
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 755

  330 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 947
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 756

  316 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 948
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 757

  317 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 949
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 758

  331 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 950
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 759

  332 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 951
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 760

  321 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 952
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 761

  322 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 953
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 762

  323 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 954
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 763

  315 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 955
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 764

  525 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 956
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 765

  528 enum_list: enum_list ',' . enum_expression
  760 optional_comma: ',' .

    "name"  shift, and go to state 567

    $default  reduce using rule 760 (optional_comma)

    enum_expression  go to state 957


State 766

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma . $@32 "end of code block"

    $default  reduce using rule 542 ($@32)

    $@32  go to state 958


State 767

  555 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 555 (optional_struct_variable_declaration_list)


State 768

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  475                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 959


State 769

  471 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 208

    $default  reduce using rule 456 (optional_field_annotation)

    metadata_argument_list          go to state 209
    optional_field_annotation       go to state 960
    structure_variable_declaration  go to state 961


State 770

  506 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 506 (let_variable_name_with_pos_list)


State 771

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 962


State 772

  510 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 510 (let_variable_declaration)


State 773

  511 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 963
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 774

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  512 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 642
    "as"                 shift, and go to state 643
    "<<"                 shift, and go to state 644
    ">>"                 shift, and go to state 645
    "++"                 shift, and go to state 646
    "--"                 shift, and go to state 647
    "<="                 shift, and go to state 648
    ">="                 shift, and go to state 649
    "=="                 shift, and go to state 650
    "!="                 shift, and go to state 651
    "->"                 shift, and go to state 652
    "??"                 shift, and go to state 653
    "?."                 shift, and go to state 654
    "?["                 shift, and go to state 655
    "<|"                 shift, and go to state 656
    "|>"                 shift, and go to state 657
    "<<<"                shift, and go to state 658
    ">>>"                shift, and go to state 659
    "&&"                 shift, and go to state 660
    "||"                 shift, and go to state 661
    "^^"                 shift, and go to state 662
    ".."                 shift, and go to state 663
    "end of expression"  shift, and go to state 964
    '?'                  shift, and go to state 664
    '|'                  shift, and go to state 665
    '^'                  shift, and go to state 666
    '&'                  shift, and go to state 667
    '<'                  shift, and go to state 668
    '>'                  shift, and go to state 669
    '-'                  shift, and go to state 670
    '+'                  shift, and go to state 671
    '*'                  shift, and go to state 672
    '/'                  shift, and go to state 673
    '%'                  shift, and go to state 674
    '.'                  shift, and go to state 675
    '['                  shift, and go to state 676


State 775

  625 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' . $@38

    $default  reduce using rule 624 ($@38)

    $@38  go to state 965


State 776

  648 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 647 ($@43)

    $@43  go to state 966


State 777

  651 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' . $@45

    $default  reduce using rule 650 ($@45)

    $@45  go to state 967


State 778

  612 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 968


State 779

  717 make_struct_decl: "struct" '<' $@73 . type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 969
    type_declaration_no_options_no_dim  go to state 263


State 780

  720 make_struct_decl: "class" '<' $@75 . type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 970
    type_declaration_no_options_no_dim  go to state 263


State 781

  246 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 971


State 782

  249 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  250         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 973


State 783

  248 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    optional_expr_list      go to state 974
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 697
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 784

  286 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 975


State 785

  285 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 976
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 786

  284 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 977


State 787

  736 make_dim_decl: "array" "struct" '<' . $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 734 ($@83)

    $@83  go to state 978


State 788

  739 make_dim_decl: "array" "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 737 ($@85)

    $@85  go to state 979


State 789

  742 make_dim_decl: "array" "variant" '<' . $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    $default  reduce using rule 740 ($@87)

    $@87  go to state 980


State 790

  746 make_dim_decl: "array" '<' $@89 . type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 981
    type_declaration_no_options_no_dim  go to state 263


State 791

  289 expr_list: expr_list . ',' expr
  743 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 982


State 792

  755 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  756                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "end of expression"  shift, and go to state 983
    '>'                  shift, and go to state 984


State 793

  752 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  754 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 817

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 985


State 794

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  408     | "deref" '(' expr . ')'
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 986


State 795

  275 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 987
    type_declaration_no_options_no_dim  go to state 263


State 796

  278 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 988
    type_declaration_no_options_no_dim  go to state 263


State 797

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  409     | "addr" '(' expr . ')'
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 989


State 798

  281 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 990
    type_declaration_no_options_no_dim  go to state 263


State 799

  750 make_dim_decl: "fixed_array" '<' $@91 . type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 991
    type_declaration_no_options_no_dim  go to state 263


State 800

  289 expr_list: expr_list . ',' expr
  747 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 992


State 801

  726 make_struct_decl: "default" '<' $@79 . type_declaration_no_options '>' $@80 use_initializer

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 993
    type_declaration_no_options_no_dim  go to state 263


State 802

  732 make_tuple_call: "tuple" '<' $@81 . type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 994
    type_declaration_no_options_no_dim  go to state 263


State 803

  289 expr_list: expr_list . ',' expr
  729 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 995


State 804

  723 make_struct_decl: "variant" '<' $@77 . type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 996
    type_declaration_no_options_no_dim  go to state 263


State 805

  410 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  411     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'

    '>'  shift, and go to state 997


State 806

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  440 expr_mtag: "$$" '(' expr . ')'
  448          | expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 998


State 807

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  441 expr_mtag: "$i" '(' expr . ')'
  448          | expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 999


State 808

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  442 expr_mtag: "$v" '(' expr . ')'
  448          | expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1000


State 809

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  443 expr_mtag: "$b" '(' expr . ')'
  448          | expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1001


State 810

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  444 expr_mtag: "$a" '(' expr . ')'
  448          | expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1002


State 811

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  446 expr_mtag: "$c" '(' expr . ')' '(' ')'
  447          | "$c" '(' expr . ')' '(' expr_list ')'
  448          | expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1003


State 812

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 813

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1004
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 814

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212

    $default  reduce using rule 29 (string_builder_body)


State 815

  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1005
    ','   shift, and go to state 917


State 816

  727 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1006
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 817

  752 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  760 optional_comma: ',' .

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 760 (optional_comma)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 622
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 1007
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 818

  753 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1008


State 819

  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  761 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1009
    ','   shift, and go to state 917


State 820

  762 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 711
    "name"  shift, and go to state 712

    variable_name_with_pos_list  go to state 1010


State 821

  289 expr_list: expr_list ',' . expr
  760 optional_comma: ',' .

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 760 (optional_comma)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1011
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 822

  733 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1012


State 823

  398 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1013


State 824

  338 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1014


State 825

  455 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1015


State 826

  342 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  345               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 343 ($@15)
    '>'       reduce using rule 343 ($@15)
    '('       reduce using rule 343 ($@15)
    $default  reduce using rule 340 ($@13)

    $@13  go to state 1016
    $@15  go to state 1017


State 827

  337 func_addr_name: name_in_namespace .

    $default  reduce using rule 337 (func_addr_name)


State 828

  339 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 339 (func_addr_expr)


State 829

  706 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  707                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1018


State 830

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"
  702 make_struct_fields: "name" . copy_or_move expr
  703                   | "name" . ":=" expr

    "<-"  shift, and go to state 916
    ":="  shift, and go to state 1019
    "::"  shift, and go to state 93
    '='   shift, and go to state 918

    $default  reduce using rule 239 (name_in_namespace)

    copy_or_move  go to state 1020


State 831

  333 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  733 make_dim_decl: '[' . expr_list optional_comma ']'
  761 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  762                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 630
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "iterator"                        shift, and go to state 631
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "$f"                              shift, and go to state 829
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 830
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 632
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_fields      go to state 1021
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 832

  353 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 353 (expr_call)


State 833

  289 expr_list: expr_list . ',' expr
  334 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1022
    ')'  shift, and go to state 1023


State 834

  704 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  705                   | make_struct_fields . ',' "name" ":=" expr
  708                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  710 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1024

    $default  reduce using rule 710 (make_struct_single)


State 835

  354 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1025


State 836

  303 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1026


State 837

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1027


State 838

  233 expressions: expressions . expression_any
  234            | expressions . error
  306 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 527
    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 528
    "if"                              shift, and go to state 529
    "static_if"                       shift, and go to state 530
    "for"                             shift, and go to state 531
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "try"                             shift, and go to state 534
    "table"                           shift, and go to state 417
    "delete"                          shift, and go to state 535
    "deref"                           shift, and go to state 418
    "with"                            shift, and go to state 536
    "assume"                          shift, and go to state 537
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "pass"                            shift, and go to state 539
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 540
    "goto"                            shift, and go to state 541
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    "end of code block"               shift, and go to state 1028
    "end of expression"               shift, and go to state 545
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder           go to state 456
    expr_reader              go to state 457
    expression_label         go to state 546
    expression_goto          go to state 547
    if_or_static_if          go to state 548
    expression_if_one_liner  go to state 549
    expression_if_then_else  go to state 550
    expression_for_loop      go to state 551
    expression_unsafe        go to state 552
    expression_while_loop    go to state 553
    expression_with          go to state 554
    expression_with_alias    go to state 555
    expr_call_pipe           go to state 458
    expression_any           go to state 556
    name_in_namespace        go to state 459
    expression_delete        go to state 557
    expr_new                 go to state 460
    expression_break         go to state 558
    expression_continue      go to state 559
    expression_return        go to state 560
    expression_yield         go to state 561
    expression_try_catch     go to state 562
    kwd_let                  go to state 563
    expression_let           go to state 564
    expr_cast                go to state 461
    expr_type_decl           go to state 462
    expr_type_info           go to state 463
    block_or_lambda          go to state 464
    expr_full_block          go to state 465
    expr_numeric_const       go to state 466
    expr_assign              go to state 565
    expr_named_call          go to state 467
    expr_method_call         go to state 468
    func_addr_expr           go to state 469
    expr_field               go to state 470
    expr_call                go to state 471
    expr                     go to state 566
    expr_mtag                go to state 473
    basic_type_declaration   go to state 474
    make_decl                go to state 475
    make_struct_decl         go to state 476
    make_tuple_call          go to state 477
    make_dim_decl            go to state 478
    make_table_decl          go to state 479
    array_comprehension      go to state 480


State 839

  295 block_or_lambda: '@' '@' .

    $default  reduce using rule 295 (block_or_lambda)


State 840

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 836

    $default  reduce using rule 302 (optional_capture_list)

    optional_capture_list  go to state 1029


State 841

  416 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1030


State 842

  454 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1031


State 843

  418 expr: expr "is" "name" .

    $default  reduce using rule 418 (expr)


State 844

  417 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 417 (expr)


State 845

  422 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1032


State 846

  452 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1033


State 847

  419 expr: expr "as" "name" .

    $default  reduce using rule 419 (expr)


State 848

  423 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 423 (expr)


State 849

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  372     | expr "<<" expr .
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '-'   shift, and go to state 670
    '+'   shift, and go to state 671
    '*'   shift, and go to state 672
    '/'   shift, and go to state 673
    '%'   shift, and go to state 674
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 372 (expr)


State 850

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  373     | expr ">>" expr .
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '-'   shift, and go to state 670
    '+'   shift, and go to state 671
    '*'   shift, and go to state 672
    '/'   shift, and go to state 673
    '%'   shift, and go to state 674
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 373 (expr)


State 851

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  385     | expr "<=" expr .
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 385 (expr)


State 852

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  386     | expr ">=" expr .
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 386 (expr)


State 853

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  383     | expr "==" expr .
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 383 (expr)


State 854

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  384     | expr "!=" expr .
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 384 (expr)


State 855

  335 expr_method_call: expr "->" "name" . '(' ')'
  336                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1034


State 856

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  412     | expr "??" expr .
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 412 (expr)


State 857

  449 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1035


State 858

  403 expr: expr "?." "name" .

    $default  reduce using rule 403 (expr)


State 859

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  401     | expr "?[" expr . ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ']'    shift, and go to state 1036


State 860

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  436     | expr "<|" expr .
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 436 (expr)


State 861

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  437     | expr "|>" expr .
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 652
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 437 (expr)


State 862

  356 expr_call: basic_type_declaration . '(' ')'
  357          | basic_type_declaration . '(' expr_list ')'
  438 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 678

    $default  reduce using rule 438 (expr)


State 863

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  374     | expr "<<<" expr .
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '-'   shift, and go to state 670
    '+'   shift, and go to state 671
    '*'   shift, and go to state 672
    '/'   shift, and go to state 673
    '%'   shift, and go to state 674
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 374 (expr)


State 864

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  375     | expr ">>>" expr .
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '-'   shift, and go to state 670
    '+'   shift, and go to state 671
    '*'   shift, and go to state 672
    '/'   shift, and go to state 673
    '%'   shift, and go to state 674
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 375 (expr)


State 865

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  390     | expr "&&" expr .
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 390 (expr)


State 866

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  391     | expr "||" expr .
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "^^"   shift, and go to state 662
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 391 (expr)


State 867

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  392     | expr "^^" expr .
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 392 (expr)


State 868

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  393     | expr ".." expr .
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    ".."  error (nonassociative)

    $default  reduce using rule 393 (expr)


State 869

  424 expr: expr '?' "as" . "name"
  427     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  428     | expr '?' "as" . basic_type_declaration
  453 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1037
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 425
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 1038
    "name"      shift, and go to state 1039

    basic_type_declaration  go to state 1040


State 870

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  413     | expr '?' expr . ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    ':'    shift, and go to state 1041
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676


State 871

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  388     | expr '|' expr .
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 388 (expr)


State 872

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  389     | expr '^' expr .
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 389 (expr)


State 873

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  387     | expr '&' expr .
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 387 (expr)


State 874

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  381     | expr '<' expr .
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 381 (expr)


State 875

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  382     | expr '>' expr .
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 382 (expr)


State 876

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  377     | expr '-' expr .
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '*'   shift, and go to state 672
    '/'   shift, and go to state 673
    '%'   shift, and go to state 674
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 377 (expr)


State 877

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  376     | expr '+' expr .
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '*'   shift, and go to state 672
    '/'   shift, and go to state 673
    '%'   shift, and go to state 674
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 376 (expr)


State 878

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  378     | expr '*' expr .
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 378 (expr)


State 879

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  379     | expr '/' expr .
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 379 (expr)


State 880

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  380     | expr '%' expr .
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 642
    "as"  shift, and go to state 643
    "++"  shift, and go to state 646
    "--"  shift, and go to state 647
    "->"  shift, and go to state 652
    "??"  shift, and go to state 653
    "?."  shift, and go to state 654
    "?["  shift, and go to state 655
    "<|"  shift, and go to state 656
    "|>"  shift, and go to state 657
    '.'   shift, and go to state 675
    '['   shift, and go to state 676

    $default  reduce using rule 380 (expr)


State 881

  404 expr: expr '.' "?." . "name"
  451 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1042
    "name"  shift, and go to state 1043


State 882

  402 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1044
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 883

  448 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1045


State 884

  346 expr_field: expr '.' "name" .
  348           | expr '.' "name" . '(' ')'
  349           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1046

    $default  reduce using rule 346 (expr_field)


State 885

  347 expr_field: expr '.' '.' . "name"
  450 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1047
    "name"  shift, and go to state 1048


State 886

  400 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1049
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 887

  352 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1050


State 888

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  399     | expr '[' expr . ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ']'    shift, and go to state 1051


State 889

  356 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 356 (expr_call)


State 890

  289 expr_list: expr_list . ',' expr
  357 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1052


State 891

  654 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 653 ($@47)

    $@47  go to state 1053


State 892

  644 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' . $@41

    $default  reduce using rule 643 ($@41)

    $@41  go to state 1054


State 893

  604 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1055


State 894

  610 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' . $@36

    $default  reduce using rule 609 ($@36)

    $@36  go to state 1056


State 895

  658 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 657 ($@49)

    $@49  go to state 1057


State 896

  661 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type . '>' $@51

    '>'  shift, and go to state 1058


State 897

  665 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 664 ($@53)

    $@53  go to state 1059


State 898

  668 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1060


State 899

  672 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 671 ($@57)

    $@57  go to state 1061


State 900

  675 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1062


State 901

  483 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 509
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    tuple_type                          go to state 1063
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 512


State 902

  678 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' . $@61

    $default  reduce using rule 677 ($@61)

    $@61  go to state 1064


State 903

  489 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 514

    variant_type  go to state 1065


State 904

  681 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' . $@63

    $default  reduce using rule 680 ($@63)

    $@63  go to state 1066


State 905

  238 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1067
    '>'                  shift, and go to state 1068


State 906

  237 type_declaration_no_options_list: type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 237 (type_declaration_no_options_list)


State 907

  627 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 627 (type_declaration_no_options_no_dim)


State 908

  289 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1011
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 909

  615 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 615 (dim_list)


State 910

  696 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block" .

    $default  reduce using rule 696 (bitfield_alias_declaration)


State 911

  481 tuple_type: "name" ':' type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 481 (tuple_type)


State 912

  487 variant_type: "name" ':' type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 487 (variant_type)


State 913

  477 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 477 (function_argument_declaration)


State 914

  560 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1069
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 915

  561 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1070


State 916

  494 copy_or_move: "<-" .

    $default  reduce using rule 494 (copy_or_move)


State 917

  562 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  563                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1071


State 918

  493 copy_or_move: '=' .

    $default  reduce using rule 493 (copy_or_move)


State 919

  497 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  498                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1072


State 920

  496 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 496 (variable_declaration)


State 921

  499 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1073
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 922

   72 expression_while_loop: "while" '(' expr . ')' expression_block
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1074


State 923

   70 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1075
    ','   shift, and go to state 917


State 924

  256 expression_return: "return" "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 256 (expression_return)


State 925

  259 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1076


State 926

  243 expression_delete: "delete" "explicit" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 243 (expression_delete)


State 927

   73 expression_with: "with" '(' expr . ')' expression_block
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1077


State 928

   74 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1078
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 929

   51 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 51 (expression_label)


State 930

   52 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 52 (expression_goto)


State 931

  258 expression_yield: "yield" "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 258 (expression_yield)


State 932

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 1079


State 933

   68 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1080


State 934

   69 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1081
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 935

  269 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1082

    tuple_expansion  go to state 1083


State 936

  272 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 272 (expression_let)


State 937

  271 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 271 (expression_let)


State 938

  324 expr_assign: expr "+=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 324 (expr_assign)


State 939

  325 expr_assign: expr "-=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 325 (expr_assign)


State 940

  327 expr_assign: expr "/=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 327 (expr_assign)


State 941

  326 expr_assign: expr "*=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 326 (expr_assign)


State 942

  328 expr_assign: expr "%=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 328 (expr_assign)


State 943

  318 expr_assign: expr "&=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 318 (expr_assign)


State 944

  319 expr_assign: expr "|=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 319 (expr_assign)


State 945

  320 expr_assign: expr "^=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 320 (expr_assign)


State 946

  329 expr_assign: expr "<<=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 329 (expr_assign)


State 947

  330 expr_assign: expr ">>=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 330 (expr_assign)


State 948

  316 expr_assign: expr "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 316 (expr_assign)


State 949

  317 expr_assign: expr ":=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 317 (expr_assign)


State 950

  331 expr_assign: expr "<<<=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 331 (expr_assign)


State 951

  332 expr_assign: expr ">>>=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 332 (expr_assign)


State 952

  321 expr_assign: expr "&&=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 321 (expr_assign)


State 953

  322 expr_assign: expr "||=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 322 (expr_assign)


State 954

  323 expr_assign: expr "^^=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 323 (expr_assign)


State 955

  315 expr_assign: expr '=' expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 315 (expr_assign)


State 956

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  525 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 525 (enum_expression)


State 957

  528 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 528 (enum_list)


State 958

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 . "end of code block"

    "end of code block"  shift, and go to state 1084


State 959

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  475                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1085
    "private"  shift, and go to state 1086

    $default  reduce using rule 463 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1087


State 960

  468 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1088

    $default  reduce using rule 466 (optional_static_member_variable)

    optional_static_member_variable  go to state 1089


State 961

  471 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1090


State 962

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 963

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  511 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 642
    "as"                 shift, and go to state 643
    "<<"                 shift, and go to state 644
    ">>"                 shift, and go to state 645
    "++"                 shift, and go to state 646
    "--"                 shift, and go to state 647
    "<="                 shift, and go to state 648
    ">="                 shift, and go to state 649
    "=="                 shift, and go to state 650
    "!="                 shift, and go to state 651
    "->"                 shift, and go to state 652
    "??"                 shift, and go to state 653
    "?."                 shift, and go to state 654
    "?["                 shift, and go to state 655
    "<|"                 shift, and go to state 656
    "|>"                 shift, and go to state 657
    "<<<"                shift, and go to state 658
    ">>>"                shift, and go to state 659
    "&&"                 shift, and go to state 660
    "||"                 shift, and go to state 661
    "^^"                 shift, and go to state 662
    ".."                 shift, and go to state 663
    "end of expression"  shift, and go to state 1091
    '?'                  shift, and go to state 664
    '|'                  shift, and go to state 665
    '^'                  shift, and go to state 666
    '&'                  shift, and go to state 667
    '<'                  shift, and go to state 668
    '>'                  shift, and go to state 669
    '-'                  shift, and go to state 670
    '+'                  shift, and go to state 671
    '*'                  shift, and go to state 672
    '/'                  shift, and go to state 673
    '%'                  shift, and go to state 674
    '.'                  shift, and go to state 675
    '['                  shift, and go to state 676


State 964

  512 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 512 (let_variable_declaration)


State 965

  625 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' $@38 .

    $default  reduce using rule 625 (type_declaration_no_options_no_dim)


State 966

  648 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 648 (type_declaration_no_options_no_dim)


State 967

  651 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' $@45 .

    $default  reduce using rule 651 (type_declaration_no_options_no_dim)


State 968

  612 table_type_pair: type_declaration "end of expression" type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 612 (table_type_pair)


State 969

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options . '>' $@74 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1092


State 970

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options . '>' $@76 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1093


State 971

  246 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1094


State 972

  714 use_initializer: "uninitialized" .

    $default  reduce using rule 714 (use_initializer)


State 973

  249 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  250         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095
    ')'     shift, and go to state 1096

    make_struct_fields  go to state 834
    make_struct_single  go to state 1097


State 974

  248 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1098


State 975

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1099
    '>'                  shift, and go to state 1100


State 976

  285 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1101


State 977

  284 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1102


State 978

  736 make_dim_decl: "array" "struct" '<' $@83 . type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1103
    type_declaration_no_options_no_dim  go to state 263


State 979

  739 make_dim_decl: "array" "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1104
    type_declaration_no_options_no_dim  go to state 263


State 980

  742 make_dim_decl: "array" "variant" '<' $@87 . type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1105
    type_declaration_no_options_no_dim  go to state 263


State 981

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options . '>' $@90 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1106


State 982

  743 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1107


State 983

  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1108
    type_declaration_no_options_no_dim  go to state 263


State 984

  755 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1109


State 985

  754 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1110


State 986

  408 expr: "deref" '(' expr ')' .

    $default  reduce using rule 408 (expr)


State 987

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1111


State 988

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1112


State 989

  409 expr: "addr" '(' expr ')' .

    $default  reduce using rule 409 (expr)


State 990

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1113


State 991

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options . '>' $@92 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1114


State 992

  747 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1115


State 993

  726 make_struct_decl: "default" '<' $@79 type_declaration_no_options . '>' $@80 use_initializer

    '>'  shift, and go to state 1116


State 994

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options . '>' $@82 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1117


State 995

  729 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1118


State 996

  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options . '>' $@78 '(' make_struct_dim ')'

    '>'  shift, and go to state 1119


State 997

  410 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  411     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 836

    $default  reduce using rule 302 (optional_capture_list)

    optional_capture_list  go to state 1120


State 998

  440 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 440 (expr_mtag)


State 999

  441 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 441 (expr_mtag)


State 1000

  442 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 442 (expr_mtag)


State 1001

  443 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 443 (expr_mtag)


State 1002

  444 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 444 (expr_mtag)


State 1003

  446 expr_mtag: "$c" '(' expr ')' . '(' ')'
  447          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1121


State 1004

   30 string_builder_body: string_builder_body "{" expr . "}"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    "}"    shift, and go to state 1122
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676


State 1005

  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1123
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1006

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  727 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 727 (make_map_tuple)


State 1007

  752 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 752 (expr_map_tuple_list)


State 1008

  753 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 753 (make_table_decl)


State 1009

  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1124
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1010

  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1125
    ','   shift, and go to state 917


State 1011

  289 expr_list: expr_list ',' expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 289 (expr_list)


State 1012

  733 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 733 (make_dim_decl)


State 1013

  398 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 398 (expr)


State 1014

  338 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1126
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1015

  455 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1127
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1016

  342 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1128
    type_declaration_no_options_no_dim  go to state 263


State 1017

  345 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1129


State 1018

  706 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  707                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1130
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1019

  703 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1131
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1020

  702 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1132
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1021

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  704 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  705                   | make_struct_fields . ',' "name" ":=" expr
  708                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1024
    ']'  shift, and go to state 1133


State 1022

  289 expr_list: expr_list ',' . expr
  334 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 1134
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1011
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1023

  355 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 355 (expr_call)


State 1024

  704 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  705                   | make_struct_fields ',' . "name" ":=" expr
  708                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1135
    "name"  shift, and go to state 1136


State 1025

  354 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 354 (expr_call)


State 1026

  303 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1137
    ":="  shift, and go to state 1138
    '='   shift, and go to state 1139
    '&'   shift, and go to state 1140

    capture_entry  go to state 1141
    capture_list   go to state 1142


State 1027

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1143


State 1028

  306 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 306 (expr_full_block_assumed_piped)


State 1029

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1144


State 1030

  416 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 414 ($@19)

    $@19  go to state 1145


State 1031

  454 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1146
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1032

  422 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 420 ($@21)

    $@21  go to state 1147


State 1033

  452 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1148
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1034

  335 expr_method_call: expr "->" "name" '(' . ')'
  336                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1149
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1150
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1035

  449 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1151
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1036

  401 expr: expr "?[" expr ']' .

    $default  reduce using rule 401 (expr)


State 1037

  427 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1152


State 1038

  453 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1153


State 1039

  424 expr: expr '?' "as" "name" .

    $default  reduce using rule 424 (expr)


State 1040

  428 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 428 (expr)


State 1041

  413 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1154
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1042

  451 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1155


State 1043

  404 expr: expr '.' "?." "name" .

    $default  reduce using rule 404 (expr)


State 1044

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  402     | expr '.' "?[" expr . ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ']'    shift, and go to state 1156


State 1045

  448 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1157
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1046

  348 expr_field: expr '.' "name" '(' . ')'
  349           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1158
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1159
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1047

  450 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1160


State 1048

  347 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 347 (expr_field)


State 1049

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  400     | expr '.' '[' expr . ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ']'    shift, and go to state 1161


State 1050

  352 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 351 ($@18)

    $@18  go to state 1162


State 1051

  399 expr: expr '[' expr ']' .

    $default  reduce using rule 399 (expr)


State 1052

  357 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 357 (expr_call)


State 1053

  654 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 654 (type_declaration_no_options_no_dim)


State 1054

  644 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' $@41 .

    $default  reduce using rule 644 (type_declaration_no_options_no_dim)


State 1055

  604 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 604 (bitfield_bits)


State 1056

  610 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' $@36 .

    $default  reduce using rule 610 (bitfield_type_declaration)


State 1057

  658 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 1058

  661 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' . $@51

    $default  reduce using rule 660 ($@51)

    $@51  go to state 1163


State 1059

  665 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 1060

  668 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 667 ($@55)

    $@55  go to state 1164


State 1061

  672 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 672 (type_declaration_no_options_no_dim)


State 1062

  675 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 674 ($@59)

    $@59  go to state 1165


State 1063

  483 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 483 (tuple_type_list)


State 1064

  678 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' $@61 .

    $default  reduce using rule 678 (type_declaration_no_options_no_dim)


State 1065

  489 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 489 (variant_type_list)


State 1066

  681 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' $@63 .

    $default  reduce using rule 681 (type_declaration_no_options_no_dim)


State 1067

  238 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1166


State 1068

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1167


State 1069

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  560 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1168


State 1070

  561 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 561 (variable_name_with_pos_list)


State 1071

  562 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  563                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1169

    $default  reduce using rule 562 (variable_name_with_pos_list)


State 1072

  497 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  498                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 916
    '='   shift, and go to state 918
    '|'   shift, and go to state 372

    $default  reduce using rule 497 (variable_declaration)

    copy_or_move  go to state 1170


State 1073

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  499 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 499 (variable_declaration)


State 1074

   72 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1171


State 1075

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1172
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1076

  259 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 259 (expression_try_catch)


State 1077

   73 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1173


State 1078

   74 expression_with_alias: "assume" "name" '=' expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 74 (expression_with_alias)


State 1079

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 527
    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 528
    "if"                              shift, and go to state 529
    "static_if"                       shift, and go to state 530
    "for"                             shift, and go to state 531
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "try"                             shift, and go to state 534
    "table"                           shift, and go to state 417
    "delete"                          shift, and go to state 535
    "deref"                           shift, and go to state 418
    "with"                            shift, and go to state 536
    "assume"                          shift, and go to state 537
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "pass"                            shift, and go to state 539
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 540
    "goto"                            shift, and go to state 541
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    "end of code block"               shift, and go to state 1174
    "end of expression"               shift, and go to state 545
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder           go to state 456
    expr_reader              go to state 457
    expression_label         go to state 546
    expression_goto          go to state 547
    if_or_static_if          go to state 548
    expression_if_one_liner  go to state 549
    expression_if_then_else  go to state 550
    expression_for_loop      go to state 551
    expression_unsafe        go to state 552
    expression_while_loop    go to state 553
    expression_with          go to state 554
    expression_with_alias    go to state 555
    expr_call_pipe           go to state 458
    expression_any           go to state 556
    name_in_namespace        go to state 459
    expression_delete        go to state 557
    expr_new                 go to state 460
    expression_break         go to state 558
    expression_continue      go to state 559
    expression_return        go to state 560
    expression_yield         go to state 561
    expression_try_catch     go to state 562
    kwd_let                  go to state 563
    expression_let           go to state 564
    expr_cast                go to state 461
    expr_type_decl           go to state 462
    expr_type_info           go to state 463
    block_or_lambda          go to state 464
    expr_full_block          go to state 465
    expr_numeric_const       go to state 466
    expr_assign              go to state 565
    expr_named_call          go to state 467
    expr_method_call         go to state 468
    func_addr_expr           go to state 469
    expr_field               go to state 470
    expr_call                go to state 471
    expr                     go to state 566
    expr_mtag                go to state 473
    basic_type_declaration   go to state 474
    make_decl                go to state 475
    make_struct_decl         go to state 476
    make_tuple_call          go to state 477
    make_dim_decl            go to state 478
    make_table_decl          go to state 479
    array_comprehension      go to state 480


State 1080

   68 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1175


State 1081

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1176


State 1082

  267 tuple_expansion: "name" .

    $default  reduce using rule 267 (tuple_expansion)


State 1083

  268 tuple_expansion: tuple_expansion . ',' "name"
  269 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1177
    ')'  shift, and go to state 1178


State 1084

  543 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block" .

    $default  reduce using rule 543 (enum_declaration)


State 1085

  464 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 464 (optional_public_or_private_member_variable)


State 1086

  465 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 465 (optional_public_or_private_member_variable)


State 1087

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  475                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1179
    "static"    shift, and go to state 1088

    $default  reduce using rule 466 (optional_static_member_variable)

    optional_static_member_variable  go to state 1180


State 1088

  467 optional_static_member_variable: "static" .

    $default  reduce using rule 467 (optional_static_member_variable)


State 1089

  468 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1181
    "sealed"    shift, and go to state 1182

    $default  reduce using rule 458 (optional_override)

    optional_override  go to state 1183


State 1090

  471 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 471 (struct_variable_declaration_list)


State 1091

  511 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 511 (let_variable_declaration)


State 1092

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' . $@74 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 716 ($@74)

    $@74  go to state 1184


State 1093

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' . $@76 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 719 ($@76)

    $@76  go to state 1185


State 1094

  246 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 245 ($@4)

    $@4  go to state 1186


State 1095

  702 make_struct_fields: "name" . copy_or_move expr
  703                   | "name" . ":=" expr

    "<-"  shift, and go to state 916
    ":="  shift, and go to state 1019
    '='   shift, and go to state 918

    copy_or_move  go to state 1020


State 1096

  249 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 249 (expr_new)


State 1097

  250 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1187


State 1098

  248 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 248 (expr_new)


State 1099

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1188


State 1100

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1189


State 1101

  285 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 285 (expr_type_info)


State 1102

  284 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 283 ($@12)

    $@12  go to state 1190


State 1103

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options . '>' $@84 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1191


State 1104

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1192


State 1105

  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options . '>' $@88 '(' make_struct_dim ')'

    '>'  shift, and go to state 1193


State 1106

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' . $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 745 ($@90)

    $@90  go to state 1194


State 1107

  743 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 743 (make_dim_decl)


State 1108

  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    '>'  shift, and go to state 1195


State 1109

  755 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 622
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 623
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 1196
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1110

  754 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 754 (make_table_decl)


State 1111

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 274 ($@6)

    $@6  go to state 1197


State 1112

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 277 ($@8)

    $@8  go to state 1198


State 1113

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 280 ($@10)

    $@10  go to state 1199


State 1114

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' . $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 749 ($@92)

    $@92  go to state 1200


State 1115

  747 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 747 (make_dim_decl)


State 1116

  726 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' . $@80 use_initializer

    $default  reduce using rule 725 ($@80)

    $@80  go to state 1201


State 1117

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' . $@82 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 731 ($@82)

    $@82  go to state 1202


State 1118

  729 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 729 (make_tuple_call)


State 1119

  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' . $@78 '(' make_struct_dim ')'

    $default  reduce using rule 722 ($@78)

    $@78  go to state 1203


State 1120

  410 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1204


State 1121

  446 expr_mtag: "$c" '(' expr ')' '(' . ')'
  447          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1205
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1206
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1122

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1123

  289 expr_list: expr_list . ',' expr
  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1207
    ','                  shift, and go to state 908


State 1124

  289 expr_list: expr_list . ',' expr
  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1208
    ','                  shift, and go to state 908


State 1125

  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1209
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1126

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  338 func_addr_name: "$i" '(' expr . ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1210


State 1127

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  455          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1211


State 1128

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1212


State 1129

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1213


State 1130

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  707                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1214


State 1131

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  703 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 703 (make_struct_fields)


State 1132

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  702 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 702 (make_struct_fields)


State 1133

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1215


State 1134

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  733 make_dim_decl: '[' . expr_list optional_comma ']'
  761 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  762                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 630
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "iterator"                        shift, and go to state 631
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "$f"                              shift, and go to state 829
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 830
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 632
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_fields      go to state 1216
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1135

  708 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  709                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1217


State 1136

  704 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  705                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 916
    ":="  shift, and go to state 1218
    '='   shift, and go to state 918

    copy_or_move  go to state 1219


State 1137

  298 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1220


State 1138

  299 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1221


State 1139

  297 capture_entry: '=' . "name"

    "name"  shift, and go to state 1222


State 1140

  296 capture_entry: '&' . "name"

    "name"  shift, and go to state 1223


State 1141

  300 capture_list: capture_entry .

    $default  reduce using rule 300 (capture_list)


State 1142

  301 capture_list: capture_list . ',' capture_entry
  303 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1224
    ']'  shift, and go to state 1225


State 1143

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1226
    "begin of code block"  shift, and go to state 323

    expression_block       go to state 1227
    block_or_simple_block  go to state 1228


State 1144

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1229


State 1145

  416 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1230
    type_declaration_no_options_no_dim  go to state 263


State 1146

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  454          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1231


State 1147

  422 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1232


State 1148

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  452          | expr "as" "$f" '(' expr . ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1233


State 1149

  335 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 335 (expr_method_call)


State 1150

  289 expr_list: expr_list . ',' expr
  336 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1234


State 1151

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  449          | expr "?." "$f" '(' expr . ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1235


State 1152

  427 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 425 ($@23)

    $@23  go to state 1236


State 1153

  453 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1237
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1154

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  413     | expr '?' expr ':' expr .
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 413 (expr)


State 1155

  451 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1238
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1156

  402 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 402 (expr)


State 1157

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  448          | expr '.' "$f" '(' expr . ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1239


State 1158

  348 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 348 (expr_field)


State 1159

  289 expr_list: expr_list . ',' expr
  349 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1240


State 1160

  450 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1241
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1161

  400 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 400 (expr)


State 1162

  352 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 352 (expr_field)


State 1163

  661 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' $@51 .

    $default  reduce using rule 661 (type_declaration_no_options_no_dim)


State 1164

  668 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 668 (type_declaration_no_options_no_dim)


State 1165

  675 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 1166

  238 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 238 (type_declaration_no_options_list)


State 1167

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    optional_expr_list      go to state 1242
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 697
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1168

  560 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 560 (variable_name_with_pos_list)


State 1169

  563 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1243


State 1170

  498 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1244
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1171

   72 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 72 (expression_while_loop)


State 1172

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  289 expr_list: expr_list . ',' expr

    ','  shift, and go to state 908
    ')'  shift, and go to state 1245


State 1173

   73 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_with)


State 1174

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 212 (expression_block)


State 1175

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1246
    "elif"         shift, and go to state 1247
    "static_elif"  shift, and go to state 1248

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1249
    expression_else      go to state 1250


State 1176

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1251

    $default  reduce using rule 61 (expression_else_one_liner)

    expression_else_one_liner  go to state 1252


State 1177

  268 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1253


State 1178

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1254
    '&'  shift, and go to state 403

    $default  reduce using rule 503 (optional_ref)

    optional_ref  go to state 1255


State 1179

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1256

    $default  reduce using rule 461 (optional_constant)

    optional_constant  go to state 1257


State 1180

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1181
    "sealed"    shift, and go to state 1182

    $default  reduce using rule 458 (optional_override)

    optional_override  go to state 1258


State 1181

  459 optional_override: "override" .

    $default  reduce using rule 459 (optional_override)


State 1182

  460 optional_override: "sealed" .

    $default  reduce using rule 460 (optional_override)


State 1183

  468 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1085
    "private"  shift, and go to state 1086

    $default  reduce using rule 463 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1259


State 1184

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1260


State 1185

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1261


State 1186

  246 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 246 (new_type_declaration)


State 1187

  250 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 250 (expr_new)


State 1188

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1262


State 1189

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1263
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1190

  284 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 284 (expr_type_decl)


State 1191

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' . $@84 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 735 ($@84)

    $@84  go to state 1264


State 1192

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 738 ($@86)

    $@86  go to state 1265


State 1193

  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' . $@88 '(' make_struct_dim ')'

    $default  reduce using rule 741 ($@88)

    $@88  go to state 1266


State 1194

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1267


State 1195

  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1268


State 1196

  752 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  755 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 817

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 1269


State 1197

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1270
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1198

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1271
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1199

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1272
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1200

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1273


State 1201

  726 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 . use_initializer

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 1274


State 1202

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1275


State 1203

  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 . '(' make_struct_dim ')'

    '('  shift, and go to state 1276


State 1204

  410 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1277
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1278
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1205

  446 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 446 (expr_mtag)


State 1206

  289 expr_list: expr_list . ',' expr
  447 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1279


State 1207

  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 622
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 1280
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1208

  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1281
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1209

  289 expr_list: expr_list . ',' expr
  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1282
    ','                  shift, and go to state 908


State 1210

  338 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 338 (func_addr_name)


State 1211

  455 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1212

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 341 ($@14)

    $@14  go to state 1283


State 1213

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1284


State 1214

  706 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  707                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 916
    ":="  shift, and go to state 1285
    '='   shift, and go to state 918

    copy_or_move  go to state 1286


State 1215

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 333 (expr_named_call)


State 1216

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  704 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  705                   | make_struct_fields . ',' "name" ":=" expr
  708                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1024
    ']'  shift, and go to state 1287


State 1217

  708 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  709                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1288
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1218

  705 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1289
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1219

  704 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1290
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1220

  298 capture_entry: "<-" "name" .

    $default  reduce using rule 298 (capture_entry)


State 1221

  299 capture_entry: ":=" "name" .

    $default  reduce using rule 299 (capture_entry)


State 1222

  297 capture_entry: '=' "name" .

    $default  reduce using rule 297 (capture_entry)


State 1223

  296 capture_entry: '&' "name" .

    $default  reduce using rule 296 (capture_entry)


State 1224

  301 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1137
    ":="  shift, and go to state 1138
    '='   shift, and go to state 1139
    '&'   shift, and go to state 1140

    capture_entry  go to state 1291


State 1225

  303 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1292


State 1226

  291 block_or_simple_block: "=>" . expr
  292                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "<-"                              shift, and go to state 1293
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1294
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1227

  290 block_or_simple_block: expression_block .

    $default  reduce using rule 290 (block_or_simple_block)


State 1228

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 304 (expr_full_block)


State 1229

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1295


State 1230

  416 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1296


State 1231

  454 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1232

  422 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1297


State 1233

  452 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1234

  336 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 336 (expr_method_call)


State 1235

  449 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 449 (expr_mtag)


State 1236

  427 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1298


State 1237

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  453          | expr '?' "as" "$f" '(' expr . ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1299


State 1238

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  451          | expr '.' "?." "$f" '(' expr . ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1300


State 1239

  448 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 448 (expr_mtag)


State 1240

  349 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 349 (expr_field)


State 1241

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  450          | expr '.' '.' "$f" '(' expr . ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1301


State 1242

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1302


State 1243

  563 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 563 (variable_name_with_pos_list)


State 1244

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  498 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 498 (variable_declaration)


State 1245

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1303


State 1246

   57 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1304


State 1247

   54 elif_or_static_elif: "elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1248

   55 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1249

   58 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1305


State 1250

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1251

   62 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder           go to state 456
    expr_reader              go to state 457
    expression_if_one_liner  go to state 1306
    expr_call_pipe           go to state 458
    name_in_namespace        go to state 459
    expr_new                 go to state 460
    expression_break         go to state 1307
    expression_continue      go to state 1308
    expression_return        go to state 1309
    expression_yield         go to state 1310
    expr_cast                go to state 461
    expr_type_decl           go to state 462
    expr_type_info           go to state 463
    block_or_lambda          go to state 464
    expr_full_block          go to state 465
    expr_numeric_const       go to state 466
    expr_named_call          go to state 467
    expr_method_call         go to state 468
    func_addr_expr           go to state 469
    expr_field               go to state 470
    expr_call                go to state 471
    expr                     go to state 1311
    expr_mtag                go to state 473
    basic_type_declaration   go to state 474
    make_decl                go to state 475
    make_struct_decl         go to state 476
    make_tuple_call          go to state 477
    make_dim_decl            go to state 478
    make_table_decl          go to state 479
    array_comprehension      go to state 480


State 1252

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1312


State 1253

  268 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 268 (tuple_expansion)


State 1254

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1313
    type_declaration_no_options_no_dim  go to state 263


State 1255

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 577
    ":="  shift, and go to state 578
    '='   shift, and go to state 579

    copy_or_move_or_clone  go to state 1314


State 1256

  462 optional_constant: "const" .

    $default  reduce using rule 462 (optional_constant)


State 1257

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 472 ($@26)

    $@26  go to state 1315


State 1258

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1256

    $default  reduce using rule 461 (optional_constant)

    optional_constant  go to state 1316


State 1259

  468 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 711
    "name"  shift, and go to state 712

    variable_declaration         go to state 1317
    variable_name_with_pos_list  go to state 714


State 1260

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 1318


State 1261

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 1319


State 1262

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1320


State 1263

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1321


State 1264

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1322


State 1265

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1323


State 1266

  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 . '(' make_struct_dim ')'

    '('  shift, and go to state 1324


State 1267

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1325
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1268

  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 622
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 623
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 1326
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1269

  755 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1327


State 1270

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 275 (expr_cast)


State 1271

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 278 (expr_cast)


State 1272

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 281 (expr_cast)


State 1273

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1328
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 633
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1274

  726 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 use_initializer .

    $default  reduce using rule 726 (make_struct_decl)


State 1275

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 1329


State 1276

  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1331


State 1277

  410 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 410 (expr)


State 1278

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1332


State 1279

  447 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 447 (expr_mtag)


State 1280

  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1333

    $default  reduce using rule 757 (array_comprehension_where)

    array_comprehension_where  go to state 1334


State 1281

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 642
    "as"                 shift, and go to state 643
    "<<"                 shift, and go to state 644
    ">>"                 shift, and go to state 645
    "++"                 shift, and go to state 646
    "--"                 shift, and go to state 647
    "<="                 shift, and go to state 648
    ">="                 shift, and go to state 649
    "=="                 shift, and go to state 650
    "!="                 shift, and go to state 651
    "->"                 shift, and go to state 652
    "??"                 shift, and go to state 653
    "?."                 shift, and go to state 654
    "?["                 shift, and go to state 655
    "<|"                 shift, and go to state 656
    "|>"                 shift, and go to state 657
    "<<<"                shift, and go to state 658
    ">>>"                shift, and go to state 659
    "&&"                 shift, and go to state 660
    "||"                 shift, and go to state 661
    "^^"                 shift, and go to state 662
    ".."                 shift, and go to state 663
    "end of expression"  shift, and go to state 1333
    '?'                  shift, and go to state 664
    '|'                  shift, and go to state 665
    '^'                  shift, and go to state 666
    '&'                  shift, and go to state 667
    '<'                  shift, and go to state 668
    '>'                  shift, and go to state 669
    '-'                  shift, and go to state 670
    '+'                  shift, and go to state 671
    '*'                  shift, and go to state 672
    '/'                  shift, and go to state 673
    '%'                  shift, and go to state 674
    '.'                  shift, and go to state 675
    '['                  shift, and go to state 676

    $default  reduce using rule 757 (array_comprehension_where)

    array_comprehension_where  go to state 1335


State 1282

  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1336
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1283

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 824
    "name"  shift, and go to state 56

    name_in_namespace  go to state 827
    func_addr_name     go to state 1337


State 1284

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 344 ($@16)

    $@16  go to state 1338


State 1285

  707 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1339
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1286

  706 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1340
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1287

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1341


State 1288

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  709                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1342


State 1289

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  705 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 705 (make_struct_fields)


State 1290

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  704 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 704 (make_struct_fields)


State 1291

  301 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 301 (capture_list)


State 1292

  303 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 303 (optional_capture_list)


State 1293

  292 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1343
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1294

  291 block_or_simple_block: "=>" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    ".."  error (nonassociative)

    $default  reduce using rule 291 (block_or_simple_block)


State 1295

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 305 (expr_full_block_assumed_piped)


State 1296

  416 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 415 ($@20)

    $@20  go to state 1344


State 1297

  422 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 421 ($@22)

    $@22  go to state 1345


State 1298

  427 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  683 type_declaration: type_declaration . '|' type_declaration_no_options
  684                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1346


State 1299

  453 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1300

  451 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 451 (expr_mtag)


State 1301

  450 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 450 (expr_mtag)


State 1302

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 629 (type_declaration_no_options_no_dim)


State 1303

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 70 (expression_for_loop)


State 1304

   57 expression_else: "else" expression_block .

    $default  reduce using rule 57 (expression_else)


State 1305

   58 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1347
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1306

   62 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1307

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1308

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1309

   64 expression_if_one_liner: expression_return .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1310

   65 expression_if_one_liner: expression_yield .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1311

   63 expression_if_one_liner: expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 63 (expression_if_one_liner)


State 1312

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 69 (expression_if_then_else)


State 1313

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 577
    ":="  shift, and go to state 578
    '='   shift, and go to state 579

    copy_or_move_or_clone  go to state 1348


State 1314

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1349
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1315

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1350


State 1316

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 474 ($@27)

    $@27  go to state 1351


State 1317

  468 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 468 (structure_variable_declaration)


State 1318

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1352


State 1319

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1353


State 1320

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1354
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1321

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 286 (expr_type_info)


State 1322

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 1355


State 1323

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 972

    $default  reduce using rule 713 (use_initializer)

    use_initializer  go to state 1356


State 1324

  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1357


State 1325

  289 expr_list: expr_list . ',' expr
  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 1358


State 1326

  752 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 817

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 1359


State 1327

  755 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 755 (make_table_decl)


State 1328

  289 expr_list: expr_list . ',' expr
  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 821

    $default  reduce using rule 759 (optional_comma)

    optional_comma  go to state 1360


State 1329

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1361


State 1330

  704 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  705                   | make_struct_fields . ',' "name" ":=" expr
  708                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  711 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1024

    $default  reduce using rule 711 (make_struct_dim)


State 1331

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1363


State 1332

  411 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 411 (expr)


State 1333

  758 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1364


State 1334

  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1365


State 1335

  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1366


State 1336

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 642
    "as"                 shift, and go to state 643
    "<<"                 shift, and go to state 644
    ">>"                 shift, and go to state 645
    "++"                 shift, and go to state 646
    "--"                 shift, and go to state 647
    "<="                 shift, and go to state 648
    ">="                 shift, and go to state 649
    "=="                 shift, and go to state 650
    "!="                 shift, and go to state 651
    "->"                 shift, and go to state 652
    "??"                 shift, and go to state 653
    "?."                 shift, and go to state 654
    "?["                 shift, and go to state 655
    "<|"                 shift, and go to state 656
    "|>"                 shift, and go to state 657
    "<<<"                shift, and go to state 658
    ">>>"                shift, and go to state 659
    "&&"                 shift, and go to state 660
    "||"                 shift, and go to state 661
    "^^"                 shift, and go to state 662
    ".."                 shift, and go to state 663
    "end of expression"  shift, and go to state 1333
    '?'                  shift, and go to state 664
    '|'                  shift, and go to state 665
    '^'                  shift, and go to state 666
    '&'                  shift, and go to state 667
    '<'                  shift, and go to state 668
    '>'                  shift, and go to state 669
    '-'                  shift, and go to state 670
    '+'                  shift, and go to state 671
    '*'                  shift, and go to state 672
    '/'                  shift, and go to state 673
    '%'                  shift, and go to state 674
    '.'                  shift, and go to state 675
    '['                  shift, and go to state 676

    $default  reduce using rule 757 (array_comprehension_where)

    array_comprehension_where  go to state 1367


State 1337

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 342 (func_addr_expr)


State 1338

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 824
    "name"  shift, and go to state 56

    name_in_namespace  go to state 827
    func_addr_name     go to state 1368


State 1339

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 707 (make_struct_fields)


State 1340

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 706 (make_struct_fields)


State 1341

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 334 (expr_named_call)


State 1342

  708 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  709                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 916
    ":="  shift, and go to state 1369
    '='   shift, and go to state 918

    copy_or_move  go to state 1370


State 1343

  292 block_or_simple_block: "=>" "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 292 (block_or_simple_block)


State 1344

  416 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 416 (expr)


State 1345

  422 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 422 (expr)


State 1346

  427 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 426 ($@24)

    $@24  go to state 1371


State 1347

   58 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1372


State 1348

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1373
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1349

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 642
    "as"                 shift, and go to state 643
    "<<"                 shift, and go to state 644
    ">>"                 shift, and go to state 645
    "++"                 shift, and go to state 646
    "--"                 shift, and go to state 647
    "<="                 shift, and go to state 648
    ">="                 shift, and go to state 649
    "=="                 shift, and go to state 650
    "!="                 shift, and go to state 651
    "->"                 shift, and go to state 652
    "??"                 shift, and go to state 653
    "?."                 shift, and go to state 654
    "?["                 shift, and go to state 655
    "<|"                 shift, and go to state 656
    "|>"                 shift, and go to state 657
    "<<<"                shift, and go to state 658
    ">>>"                shift, and go to state 659
    "&&"                 shift, and go to state 660
    "||"                 shift, and go to state 661
    "^^"                 shift, and go to state 662
    ".."                 shift, and go to state 663
    "end of expression"  shift, and go to state 1374
    '?'                  shift, and go to state 664
    '|'                  shift, and go to state 665
    '^'                  shift, and go to state 666
    '&'                  shift, and go to state 667
    '<'                  shift, and go to state 668
    '>'                  shift, and go to state 669
    '-'                  shift, and go to state 670
    '+'                  shift, and go to state 671
    '*'                  shift, and go to state 672
    '/'                  shift, and go to state 673
    '%'                  shift, and go to state 674
    '.'                  shift, and go to state 675
    '['                  shift, and go to state 676


State 1350

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1375


State 1351

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1376


State 1352

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1377


State 1353

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1378


State 1354

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676
    ')'    shift, and go to state 1379


State 1355

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1380


State 1356

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1330
    make_struct_dim     go to state 1381


State 1357

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1382


State 1358

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1383


State 1359

  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1384


State 1360

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1385


State 1361

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1386


State 1362

  712 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 829
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1387


State 1363

  723 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')' .

    $default  reduce using rule 723 (make_struct_decl)


State 1364

  758 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1388
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1365

  763 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 763 (array_comprehension)


State 1366

  761 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 761 (array_comprehension)


State 1367

  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1389


State 1368

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 345 (func_addr_expr)


State 1369

  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1390
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1370

  708 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1391
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1371

  427 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 427 (expr)


State 1372

   58 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1392


State 1373

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 642
    "as"                 shift, and go to state 643
    "<<"                 shift, and go to state 644
    ">>"                 shift, and go to state 645
    "++"                 shift, and go to state 646
    "--"                 shift, and go to state 647
    "<="                 shift, and go to state 648
    ">="                 shift, and go to state 649
    "=="                 shift, and go to state 650
    "!="                 shift, and go to state 651
    "->"                 shift, and go to state 652
    "??"                 shift, and go to state 653
    "?."                 shift, and go to state 654
    "?["                 shift, and go to state 655
    "<|"                 shift, and go to state 656
    "|>"                 shift, and go to state 657
    "<<<"                shift, and go to state 658
    ">>>"                shift, and go to state 659
    "&&"                 shift, and go to state 660
    "||"                 shift, and go to state 661
    "^^"                 shift, and go to state 662
    ".."                 shift, and go to state 663
    "end of expression"  shift, and go to state 1393
    '?'                  shift, and go to state 664
    '|'                  shift, and go to state 665
    '^'                  shift, and go to state 666
    '&'                  shift, and go to state 667
    '<'                  shift, and go to state 668
    '>'                  shift, and go to state 669
    '-'                  shift, and go to state 670
    '+'                  shift, and go to state 671
    '*'                  shift, and go to state 672
    '/'                  shift, and go to state 673
    '%'                  shift, and go to state 674
    '.'                  shift, and go to state 675
    '['                  shift, and go to state 676


State 1374

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 270 (tuple_expansion_variable_declaration)


State 1375

  473 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 473 (struct_variable_declaration_list)


State 1376

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1394


State 1377

  717 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 717 (make_struct_decl)


State 1378

  720 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 720 (make_struct_decl)


State 1379

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 287 (expr_type_info)


State 1380

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1395


State 1381

  712 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1362
    ')'                  shift, and go to state 1396


State 1382

  742 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')' .

    $default  reduce using rule 742 (make_dim_decl)


State 1383

  746 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')' .

    $default  reduce using rule 746 (make_dim_decl)


State 1384

  756 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 756 (make_table_decl)


State 1385

  750 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')' .

    $default  reduce using rule 750 (make_dim_decl)


State 1386

  732 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 732 (make_tuple_call)


State 1387

  704 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  705                   | make_struct_fields . ',' "name" ":=" expr
  708                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  712 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1024

    $default  reduce using rule 712 (make_struct_dim)


State 1388

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  758 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 758 (array_comprehension_where)


State 1389

  762 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 762 (array_comprehension)


State 1390

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 709 (make_struct_fields)


State 1391

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  412     | expr . "??" expr
  413     | expr . '?' expr ':' expr
  416     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  417     | expr . "is" basic_type_declaration
  418     | expr . "is" "name"
  419     | expr . "as" "name"
  422     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  423     | expr . "as" basic_type_declaration
  424     | expr . '?' "as" "name"
  427     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  428     | expr . '?' "as" basic_type_declaration
  436     | expr . "<|" expr
  437     | expr . "|>" expr
  438     | expr . "|>" basic_type_declaration
  448 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr . "?." "$f" '(' expr ')'
  450          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr . "as" "$f" '(' expr ')'
  453          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 642
    "as"   shift, and go to state 643
    "<<"   shift, and go to state 644
    ">>"   shift, and go to state 645
    "++"   shift, and go to state 646
    "--"   shift, and go to state 647
    "<="   shift, and go to state 648
    ">="   shift, and go to state 649
    "=="   shift, and go to state 650
    "!="   shift, and go to state 651
    "->"   shift, and go to state 652
    "??"   shift, and go to state 653
    "?."   shift, and go to state 654
    "?["   shift, and go to state 655
    "<|"   shift, and go to state 656
    "|>"   shift, and go to state 657
    "<<<"  shift, and go to state 658
    ">>>"  shift, and go to state 659
    "&&"   shift, and go to state 660
    "||"   shift, and go to state 661
    "^^"   shift, and go to state 662
    ".."   shift, and go to state 663
    '?'    shift, and go to state 664
    '|'    shift, and go to state 665
    '^'    shift, and go to state 666
    '&'    shift, and go to state 667
    '<'    shift, and go to state 668
    '>'    shift, and go to state 669
    '-'    shift, and go to state 670
    '+'    shift, and go to state 671
    '*'    shift, and go to state 672
    '/'    shift, and go to state 673
    '%'    shift, and go to state 674
    '.'    shift, and go to state 675
    '['    shift, and go to state 676

    $default  reduce using rule 708 (make_struct_fields)


State 1392

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1246
    "elif"         shift, and go to state 1247
    "static_elif"  shift, and go to state 1248

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1249
    expression_else      go to state 1397


State 1393

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 269 (tuple_expansion_variable_declaration)


State 1394

  475 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 475 (struct_variable_declaration_list)


State 1395

  736 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 736 (make_dim_decl)


State 1396

  739 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 739 (make_dim_decl)


State 1397

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 58 (expression_else)
